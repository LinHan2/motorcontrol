ARM GAS  C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"sysmem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.bss.heap_end.0,"aw",%nobits
  20              		.align	2
  23              	heap_end.0:
  24 0000 00000000 		.space	4
  25              		.section	.text._sbrk,"ax",%progbits
  26              		.align	1
  27              		.global	_sbrk
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	_sbrk:
  33              	.LFB3:
  34              		.file 1 "Core/Src/sysmem.c"
   1:Core/Src/sysmem.c **** /**
   2:Core/Src/sysmem.c **** *****************************************************************************
   3:Core/Src/sysmem.c **** **
   4:Core/Src/sysmem.c **** **  File        : sysmem.c
   5:Core/Src/sysmem.c **** **
   6:Core/Src/sysmem.c **** **  Author	    : Auto-generated by STM32CubeIDE
   7:Core/Src/sysmem.c **** **
   8:Core/Src/sysmem.c **** **  Abstract    : STM32CubeIDE Minimal System Memory calls file
   9:Core/Src/sysmem.c **** **
  10:Core/Src/sysmem.c **** ** 		          For more information about which c-functions
  11:Core/Src/sysmem.c **** **                need which of these lowlevel functions
  12:Core/Src/sysmem.c **** **                please consult the Newlib libc-manual
  13:Core/Src/sysmem.c **** **
  14:Core/Src/sysmem.c **** **  Environment : STM32CubeIDE MCU
  15:Core/Src/sysmem.c **** **
  16:Core/Src/sysmem.c **** **  Distribution: The file is distributed as is, without any warranty
  17:Core/Src/sysmem.c **** **                of any kind.
  18:Core/Src/sysmem.c **** **
  19:Core/Src/sysmem.c **** *****************************************************************************
  20:Core/Src/sysmem.c **** **
  21:Core/Src/sysmem.c **** ** <h2><center>&copy; COPYRIGHT(c) 2018 STMicroelectronics</center></h2>
  22:Core/Src/sysmem.c **** **
  23:Core/Src/sysmem.c **** ** Redistribution and use in source and binary forms, with or without modification,
  24:Core/Src/sysmem.c **** ** are permitted provided that the following conditions are met:
  25:Core/Src/sysmem.c **** **   1. Redistributions of source code must retain the above copyright notice,
  26:Core/Src/sysmem.c **** **      this list of conditions and the following disclaimer.
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s 			page 2


  27:Core/Src/sysmem.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Core/Src/sysmem.c **** **      this list of conditions and the following disclaimer in the documentation
  29:Core/Src/sysmem.c **** **      and/or other materials provided with the distribution.
  30:Core/Src/sysmem.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  31:Core/Src/sysmem.c **** **      may be used to endorse or promote products derived from this software
  32:Core/Src/sysmem.c **** **      without specific prior written permission.
  33:Core/Src/sysmem.c **** **
  34:Core/Src/sysmem.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Core/Src/sysmem.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Core/Src/sysmem.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Core/Src/sysmem.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Core/Src/sysmem.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Core/Src/sysmem.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Core/Src/sysmem.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Core/Src/sysmem.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Core/Src/sysmem.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Core/Src/sysmem.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Core/Src/sysmem.c **** **
  45:Core/Src/sysmem.c **** **
  46:Core/Src/sysmem.c **** *****************************************************************************
  47:Core/Src/sysmem.c **** */
  48:Core/Src/sysmem.c **** 
  49:Core/Src/sysmem.c **** /* Includes */
  50:Core/Src/sysmem.c **** #include <errno.h>
  51:Core/Src/sysmem.c **** #include <stdio.h>
  52:Core/Src/sysmem.c **** 
  53:Core/Src/sysmem.c **** /* Variables */
  54:Core/Src/sysmem.c **** extern int errno;
  55:Core/Src/sysmem.c **** register char * stack_ptr asm("sp");
  56:Core/Src/sysmem.c **** 
  57:Core/Src/sysmem.c **** /* Functions */
  58:Core/Src/sysmem.c **** 
  59:Core/Src/sysmem.c **** /**
  60:Core/Src/sysmem.c ****  _sbrk
  61:Core/Src/sysmem.c ****  Increase program data space. Malloc and related functions depend on this
  62:Core/Src/sysmem.c **** **/
  63:Core/Src/sysmem.c **** caddr_t _sbrk(int incr)
  64:Core/Src/sysmem.c **** {
  35              		.loc 1 64 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 16
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 84B0     		sub	sp, sp, #16
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
  65:Core/Src/sysmem.c **** 	extern char end asm("end");
  66:Core/Src/sysmem.c **** 	static char *heap_end;
  67:Core/Src/sysmem.c **** 	char *prev_heap_end;
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s 			page 3


  68:Core/Src/sysmem.c **** 
  69:Core/Src/sysmem.c **** 	if (heap_end == 0)
  51              		.loc 1 69 15
  52 0008 114B     		ldr	r3, .L5
  53 000a 1B68     		ldr	r3, [r3]
  54              		.loc 1 69 5
  55 000c 002B     		cmp	r3, #0
  56 000e 02D1     		bne	.L2
  70:Core/Src/sysmem.c **** 		heap_end = &end;
  57              		.loc 1 70 12
  58 0010 0F4B     		ldr	r3, .L5
  59 0012 104A     		ldr	r2, .L5+4
  60 0014 1A60     		str	r2, [r3]
  61              	.L2:
  71:Core/Src/sysmem.c **** 
  72:Core/Src/sysmem.c **** 	prev_heap_end = heap_end;
  62              		.loc 1 72 16
  63 0016 0E4B     		ldr	r3, .L5
  64 0018 1B68     		ldr	r3, [r3]
  65 001a FB60     		str	r3, [r7, #12]
  73:Core/Src/sysmem.c **** 	if (heap_end + incr > stack_ptr)
  66              		.loc 1 73 15
  67 001c 0C4B     		ldr	r3, .L5
  68 001e 1A68     		ldr	r2, [r3]
  69 0020 7B68     		ldr	r3, [r7, #4]
  70 0022 1344     		add	r3, r3, r2
  71              		.loc 1 73 22
  72 0024 6A46     		mov	r2, sp
  73              		.loc 1 73 5
  74 0026 9342     		cmp	r3, r2
  75 0028 07D9     		bls	.L3
  74:Core/Src/sysmem.c **** 	{
  75:Core/Src/sysmem.c **** 		errno = ENOMEM;
  76              		.loc 1 75 3
  77 002a FFF7FEFF 		bl	__errno
  78 002e 0346     		mov	r3, r0
  79              		.loc 1 75 9
  80 0030 0C22     		movs	r2, #12
  81 0032 1A60     		str	r2, [r3]
  76:Core/Src/sysmem.c **** 		return (caddr_t) -1;
  82              		.loc 1 76 10
  83 0034 4FF0FF33 		mov	r3, #-1
  84 0038 06E0     		b	.L4
  85              	.L3:
  77:Core/Src/sysmem.c **** 	}
  78:Core/Src/sysmem.c **** 
  79:Core/Src/sysmem.c **** 	heap_end += incr;
  86              		.loc 1 79 11
  87 003a 054B     		ldr	r3, .L5
  88 003c 1A68     		ldr	r2, [r3]
  89 003e 7B68     		ldr	r3, [r7, #4]
  90 0040 1344     		add	r3, r3, r2
  91 0042 034A     		ldr	r2, .L5
  92 0044 1360     		str	r3, [r2]
  80:Core/Src/sysmem.c **** 
  81:Core/Src/sysmem.c **** 	return (caddr_t) prev_heap_end;
  93              		.loc 1 81 9
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s 			page 4


  94 0046 FB68     		ldr	r3, [r7, #12]
  95              	.L4:
  82:Core/Src/sysmem.c **** }
  96              		.loc 1 82 1
  97 0048 1846     		mov	r0, r3
  98 004a 1037     		adds	r7, r7, #16
  99              	.LCFI3:
 100              		.cfi_def_cfa_offset 8
 101 004c BD46     		mov	sp, r7
 102              	.LCFI4:
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 004e 80BD     		pop	{r7, pc}
 106              	.L6:
 107              		.align	2
 108              	.L5:
 109 0050 00000000 		.word	heap_end.0
 110 0054 00000000 		.word	end
 111              		.cfi_endproc
 112              	.LFE3:
 114              		.text
 115              	.Letext0:
 116              		.file 2 "d:\\st\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\types.h"
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 sysmem.c
C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s:20     .bss.heap_end.0:00000000 $d
C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s:23     .bss.heap_end.0:00000000 heap_end.0
C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s:26     .text._sbrk:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s:32     .text._sbrk:00000000 _sbrk
C:\Users\16323\AppData\Local\Temp\ccDJFrRy.s:109    .text._sbrk:00000050 $d

UNDEFINED SYMBOLS
__errno
end
