ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_CAN_Init,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_CAN_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_CAN_Init:
  27              	.LFB239:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @file    stm32f4xx_hal_can.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @attention
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * Copyright (c) 2016 STMicroelectronics.
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * All rights reserved.
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * This software is licensed under terms that can be found in the LICENSE file
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * in the root directory of this software component.
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @verbatim
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         ##### How to use this driver #####
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_MspInit():
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) Configure CAN pins
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure CAN pins as alternate function
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           functions:
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           messages.
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           can be used:
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  message.
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailboxes.
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  in a Tx mailbox.
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           stored in the Rx Fifo.
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Polling mode operation ***
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==============================
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Reception:
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  until at least one message is received.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Transmission:
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Then request transmission of a message using
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Interrupt mode operation ***
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ================================
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           function. Then, the process can be controlled through the
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Notifications can be deactivated using
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           here.
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  read, the notification can be activated again.
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *** Sleep mode ***
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       ==================
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           be completed.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           will be entered.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (#) The wake-up from sleep mode can be triggered by two ways:
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                  if automatic wake up mode is enabled.
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *** Callback registration ***
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   =============================================
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use Function HAL_CAN_RegisterCallback() to register an interrupt callback.
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Function HAL_CAN_RegisterCallback() allows to register following callbacks:
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and a pointer to the user callback function.
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Use function HAL_CAN_UnRegisterCallback() to reset a callback to the default
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   weak function.
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   and the Callback ID.
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   This function allows to reset following callbacks:
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   By default, after the HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   example HAL_CAN_ErrorCallback().
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   reset to the legacy weak function in the HAL_CAN_Init()/ HAL_CAN_DeInit() only when
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the HAL_CAN_Init()/ HAL_CAN_DeInit()
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   using HAL_CAN_RegisterCallback() before calling HAL_CAN_DeInit()
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   or HAL_CAN_Init() function.
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   are set to the corresponding weak functions.
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   @endverbatim
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #include "stm32f4xx_hal.h"
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @addtogroup STM32F4xx_HAL_Driver
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* HAL_CAN_LEGACY_MODULE_ENABLED */
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #define CAN_WAKEUP_TIMEOUT_COUNTER 1000000U
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Initialization and Configuration functions
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
  29              		.loc 1 276 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
  45              		.loc 1 280 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
  49              		.loc 1 282 12
  50 000e 0123     		movs	r3, #1
  51 0010 EDE0     		b	.L3
  52              	.L2:
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 7


 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
  53              		.loc 1 327 11
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F82030 		ldrb	r3, [r3, #32]
  56 0018 DBB2     		uxtb	r3, r3
  57              		.loc 1 327 6
  58 001a 002B     		cmp	r3, #0
  59 001c 02D1     		bne	.L4
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
  60              		.loc 1 330 5
  61 001e 7868     		ldr	r0, [r7, #4]
  62 0020 FFF7FEFF 		bl	HAL_CAN_MspInit
  63              	.L4:
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Request initialisation */
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
  64              		.loc 1 335 3
  65 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 8


  66 0026 1B68     		ldr	r3, [r3]
  67 0028 1A68     		ldr	r2, [r3]
  68 002a 7B68     		ldr	r3, [r7, #4]
  69 002c 1B68     		ldr	r3, [r3]
  70 002e 42F00102 		orr	r2, r2, #1
  71 0032 1A60     		str	r2, [r3]
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
  72              		.loc 1 338 15
  73 0034 FFF7FEFF 		bl	HAL_GetTick
  74 0038 F860     		str	r0, [r7, #12]
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Wait initialisation acknowledge */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
  75              		.loc 1 341 9
  76 003a 12E0     		b	.L5
  77              	.L6:
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
  78              		.loc 1 343 10
  79 003c FFF7FEFF 		bl	HAL_GetTick
  80 0040 0246     		mov	r2, r0
  81              		.loc 1 343 24
  82 0042 FB68     		ldr	r3, [r7, #12]
  83 0044 D31A     		subs	r3, r2, r3
  84              		.loc 1 343 8
  85 0046 0A2B     		cmp	r3, #10
  86 0048 0BD9     		bls	.L5
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
  87              		.loc 1 346 23
  88 004a 7B68     		ldr	r3, [r7, #4]
  89 004c 5B6A     		ldr	r3, [r3, #36]
  90 004e 43F40032 		orr	r2, r3, #131072
  91 0052 7B68     		ldr	r3, [r7, #4]
  92 0054 5A62     		str	r2, [r3, #36]
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
  93              		.loc 1 349 19
  94 0056 7B68     		ldr	r3, [r7, #4]
  95 0058 0522     		movs	r2, #5
  96 005a 83F82020 		strb	r2, [r3, #32]
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
  97              		.loc 1 351 14
  98 005e 0123     		movs	r3, #1
  99 0060 C5E0     		b	.L3
 100              	.L5:
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 101              		.loc 1 341 15
 102 0062 7B68     		ldr	r3, [r7, #4]
 103 0064 1B68     		ldr	r3, [r3]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 104              		.loc 1 341 25
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 9


 105 0066 5B68     		ldr	r3, [r3, #4]
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 106              		.loc 1 341 31
 107 0068 03F00103 		and	r3, r3, #1
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 108              		.loc 1 341 9
 109 006c 002B     		cmp	r3, #0
 110 006e E5D0     		beq	.L6
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Exit from sleep mode */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 111              		.loc 1 356 3
 112 0070 7B68     		ldr	r3, [r7, #4]
 113 0072 1B68     		ldr	r3, [r3]
 114 0074 1A68     		ldr	r2, [r3]
 115 0076 7B68     		ldr	r3, [r7, #4]
 116 0078 1B68     		ldr	r3, [r3]
 117 007a 22F00202 		bic	r2, r2, #2
 118 007e 1A60     		str	r2, [r3]
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Get tick */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   tickstart = HAL_GetTick();
 119              		.loc 1 359 15
 120 0080 FFF7FEFF 		bl	HAL_GetTick
 121 0084 F860     		str	r0, [r7, #12]
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 122              		.loc 1 362 9
 123 0086 12E0     		b	.L7
 124              	.L8:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 125              		.loc 1 364 10
 126 0088 FFF7FEFF 		bl	HAL_GetTick
 127 008c 0246     		mov	r2, r0
 128              		.loc 1 364 24
 129 008e FB68     		ldr	r3, [r7, #12]
 130 0090 D31A     		subs	r3, r2, r3
 131              		.loc 1 364 8
 132 0092 0A2B     		cmp	r3, #10
 133 0094 0BD9     		bls	.L7
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 134              		.loc 1 367 23
 135 0096 7B68     		ldr	r3, [r7, #4]
 136 0098 5B6A     		ldr	r3, [r3, #36]
 137 009a 43F40032 		orr	r2, r3, #131072
 138 009e 7B68     		ldr	r3, [r7, #4]
 139 00a0 5A62     		str	r2, [r3, #36]
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Change CAN state */
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 140              		.loc 1 370 19
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 10


 141 00a2 7B68     		ldr	r3, [r7, #4]
 142 00a4 0522     		movs	r2, #5
 143 00a6 83F82020 		strb	r2, [r3, #32]
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 144              		.loc 1 372 14
 145 00aa 0123     		movs	r3, #1
 146 00ac 9FE0     		b	.L3
 147              	.L7:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 148              		.loc 1 362 15
 149 00ae 7B68     		ldr	r3, [r7, #4]
 150 00b0 1B68     		ldr	r3, [r3]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 151              		.loc 1 362 25
 152 00b2 5B68     		ldr	r3, [r3, #4]
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 153              		.loc 1 362 31
 154 00b4 03F00203 		and	r3, r3, #2
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 155              		.loc 1 362 9
 156 00b8 002B     		cmp	r3, #0
 157 00ba E5D1     		bne	.L8
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the time triggered communication mode */
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 158              		.loc 1 377 17
 159 00bc 7B68     		ldr	r3, [r7, #4]
 160 00be 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 161              		.loc 1 377 6
 162 00c0 012B     		cmp	r3, #1
 163 00c2 08D1     		bne	.L9
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 164              		.loc 1 379 5
 165 00c4 7B68     		ldr	r3, [r7, #4]
 166 00c6 1B68     		ldr	r3, [r3]
 167 00c8 1A68     		ldr	r2, [r3]
 168 00ca 7B68     		ldr	r3, [r7, #4]
 169 00cc 1B68     		ldr	r3, [r3]
 170 00ce 42F08002 		orr	r2, r2, #128
 171 00d2 1A60     		str	r2, [r3]
 172 00d4 07E0     		b	.L10
 173              	.L9:
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 174              		.loc 1 383 5
 175 00d6 7B68     		ldr	r3, [r7, #4]
 176 00d8 1B68     		ldr	r3, [r3]
 177 00da 1A68     		ldr	r2, [r3]
 178 00dc 7B68     		ldr	r3, [r7, #4]
 179 00de 1B68     		ldr	r3, [r3]
 180 00e0 22F08002 		bic	r2, r2, #128
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 11


 181 00e4 1A60     		str	r2, [r3]
 182              	.L10:
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic bus-off management */
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 183              		.loc 1 387 17
 184 00e6 7B68     		ldr	r3, [r7, #4]
 185 00e8 5B7E     		ldrb	r3, [r3, #25]	@ zero_extendqisi2
 186              		.loc 1 387 6
 187 00ea 012B     		cmp	r3, #1
 188 00ec 08D1     		bne	.L11
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 189              		.loc 1 389 5
 190 00ee 7B68     		ldr	r3, [r7, #4]
 191 00f0 1B68     		ldr	r3, [r3]
 192 00f2 1A68     		ldr	r2, [r3]
 193 00f4 7B68     		ldr	r3, [r7, #4]
 194 00f6 1B68     		ldr	r3, [r3]
 195 00f8 42F04002 		orr	r2, r2, #64
 196 00fc 1A60     		str	r2, [r3]
 197 00fe 07E0     		b	.L12
 198              	.L11:
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 199              		.loc 1 393 5
 200 0100 7B68     		ldr	r3, [r7, #4]
 201 0102 1B68     		ldr	r3, [r3]
 202 0104 1A68     		ldr	r2, [r3]
 203 0106 7B68     		ldr	r3, [r7, #4]
 204 0108 1B68     		ldr	r3, [r3]
 205 010a 22F04002 		bic	r2, r2, #64
 206 010e 1A60     		str	r2, [r3]
 207              	.L12:
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic wake-up mode */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 208              		.loc 1 397 17
 209 0110 7B68     		ldr	r3, [r7, #4]
 210 0112 9B7E     		ldrb	r3, [r3, #26]	@ zero_extendqisi2
 211              		.loc 1 397 6
 212 0114 012B     		cmp	r3, #1
 213 0116 08D1     		bne	.L13
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 214              		.loc 1 399 5
 215 0118 7B68     		ldr	r3, [r7, #4]
 216 011a 1B68     		ldr	r3, [r3]
 217 011c 1A68     		ldr	r2, [r3]
 218 011e 7B68     		ldr	r3, [r7, #4]
 219 0120 1B68     		ldr	r3, [r3]
 220 0122 42F02002 		orr	r2, r2, #32
 221 0126 1A60     		str	r2, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 12


 222 0128 07E0     		b	.L14
 223              	.L13:
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 224              		.loc 1 403 5
 225 012a 7B68     		ldr	r3, [r7, #4]
 226 012c 1B68     		ldr	r3, [r3]
 227 012e 1A68     		ldr	r2, [r3]
 228 0130 7B68     		ldr	r3, [r7, #4]
 229 0132 1B68     		ldr	r3, [r3]
 230 0134 22F02002 		bic	r2, r2, #32
 231 0138 1A60     		str	r2, [r3]
 232              	.L14:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the automatic retransmission */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 233              		.loc 1 407 17
 234 013a 7B68     		ldr	r3, [r7, #4]
 235 013c DB7E     		ldrb	r3, [r3, #27]	@ zero_extendqisi2
 236              		.loc 1 407 6
 237 013e 012B     		cmp	r3, #1
 238 0140 08D1     		bne	.L15
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 239              		.loc 1 409 5
 240 0142 7B68     		ldr	r3, [r7, #4]
 241 0144 1B68     		ldr	r3, [r3]
 242 0146 1A68     		ldr	r2, [r3]
 243 0148 7B68     		ldr	r3, [r7, #4]
 244 014a 1B68     		ldr	r3, [r3]
 245 014c 22F01002 		bic	r2, r2, #16
 246 0150 1A60     		str	r2, [r3]
 247 0152 07E0     		b	.L16
 248              	.L15:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 249              		.loc 1 413 5
 250 0154 7B68     		ldr	r3, [r7, #4]
 251 0156 1B68     		ldr	r3, [r3]
 252 0158 1A68     		ldr	r2, [r3]
 253 015a 7B68     		ldr	r3, [r7, #4]
 254 015c 1B68     		ldr	r3, [r3]
 255 015e 42F01002 		orr	r2, r2, #16
 256 0162 1A60     		str	r2, [r3]
 257              	.L16:
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 258              		.loc 1 417 17
 259 0164 7B68     		ldr	r3, [r7, #4]
 260 0166 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 13


 261              		.loc 1 417 6
 262 0168 012B     		cmp	r3, #1
 263 016a 08D1     		bne	.L17
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 264              		.loc 1 419 5
 265 016c 7B68     		ldr	r3, [r7, #4]
 266 016e 1B68     		ldr	r3, [r3]
 267 0170 1A68     		ldr	r2, [r3]
 268 0172 7B68     		ldr	r3, [r7, #4]
 269 0174 1B68     		ldr	r3, [r3]
 270 0176 42F00802 		orr	r2, r2, #8
 271 017a 1A60     		str	r2, [r3]
 272 017c 07E0     		b	.L18
 273              	.L17:
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 274              		.loc 1 423 5
 275 017e 7B68     		ldr	r3, [r7, #4]
 276 0180 1B68     		ldr	r3, [r3]
 277 0182 1A68     		ldr	r2, [r3]
 278 0184 7B68     		ldr	r3, [r7, #4]
 279 0186 1B68     		ldr	r3, [r3]
 280 0188 22F00802 		bic	r2, r2, #8
 281 018c 1A60     		str	r2, [r3]
 282              	.L18:
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the transmit FIFO priority */
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 283              		.loc 1 427 17
 284 018e 7B68     		ldr	r3, [r7, #4]
 285 0190 5B7F     		ldrb	r3, [r3, #29]	@ zero_extendqisi2
 286              		.loc 1 427 6
 287 0192 012B     		cmp	r3, #1
 288 0194 08D1     		bne	.L19
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 289              		.loc 1 429 5
 290 0196 7B68     		ldr	r3, [r7, #4]
 291 0198 1B68     		ldr	r3, [r3]
 292 019a 1A68     		ldr	r2, [r3]
 293 019c 7B68     		ldr	r3, [r7, #4]
 294 019e 1B68     		ldr	r3, [r3]
 295 01a0 42F00402 		orr	r2, r2, #4
 296 01a4 1A60     		str	r2, [r3]
 297 01a6 07E0     		b	.L20
 298              	.L19:
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 299              		.loc 1 433 5
 300 01a8 7B68     		ldr	r3, [r7, #4]
 301 01aa 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 14


 302 01ac 1A68     		ldr	r2, [r3]
 303 01ae 7B68     		ldr	r3, [r7, #4]
 304 01b0 1B68     		ldr	r3, [r3]
 305 01b2 22F00402 		bic	r2, r2, #4
 306 01b6 1A60     		str	r2, [r3]
 307              	.L20:
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Set the bit timing register */
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 308              		.loc 1 437 3
 309 01b8 7B68     		ldr	r3, [r7, #4]
 310 01ba 9A68     		ldr	r2, [r3, #8]
 311 01bc 7B68     		ldr	r3, [r7, #4]
 312 01be DB68     		ldr	r3, [r3, #12]
 313 01c0 1A43     		orrs	r2, r2, r3
 314 01c2 7B68     		ldr	r3, [r7, #4]
 315 01c4 1B69     		ldr	r3, [r3, #16]
 316 01c6 1A43     		orrs	r2, r2, r3
 317 01c8 7B68     		ldr	r3, [r7, #4]
 318 01ca 5B69     		ldr	r3, [r3, #20]
 319 01cc 42EA0301 		orr	r1, r2, r3
 320 01d0 7B68     		ldr	r3, [r7, #4]
 321 01d2 5B68     		ldr	r3, [r3, #4]
 322 01d4 5A1E     		subs	r2, r3, #1
 323 01d6 7B68     		ldr	r3, [r7, #4]
 324 01d8 1B68     		ldr	r3, [r3]
 325 01da 0A43     		orrs	r2, r2, r1
 326 01dc DA61     		str	r2, [r3, #28]
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the error code */
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 327              		.loc 1 444 19
 328 01de 7B68     		ldr	r3, [r7, #4]
 329 01e0 0022     		movs	r2, #0
 330 01e2 5A62     		str	r2, [r3, #36]
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Initialize the CAN state */
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 331              		.loc 1 447 15
 332 01e4 7B68     		ldr	r3, [r7, #4]
 333 01e6 0122     		movs	r2, #1
 334 01e8 83F82020 		strb	r2, [r3, #32]
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 335              		.loc 1 450 10
 336 01ec 0023     		movs	r3, #0
 337              	.L3:
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 338              		.loc 1 451 1
 339 01ee 1846     		mov	r0, r3
 340 01f0 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 15


 341              	.LCFI3:
 342              		.cfi_def_cfa_offset 8
 343 01f2 BD46     		mov	sp, r7
 344              	.LCFI4:
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 01f4 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE239:
 351              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 352              		.align	1
 353              		.global	HAL_CAN_DeInit
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	HAL_CAN_DeInit:
 359              	.LFB240:
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         reset values.
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 360              		.loc 1 461 1
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 0000 80B5     		push	{r7, lr}
 365              	.LCFI5:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 7, -8
 368              		.cfi_offset 14, -4
 369 0002 82B0     		sub	sp, sp, #8
 370              	.LCFI6:
 371              		.cfi_def_cfa_offset 16
 372 0004 00AF     		add	r7, sp, #0
 373              	.LCFI7:
 374              		.cfi_def_cfa_register 7
 375 0006 7860     		str	r0, [r7, #4]
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check CAN handle */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan == NULL)
 376              		.loc 1 463 6
 377 0008 7B68     		ldr	r3, [r7, #4]
 378 000a 002B     		cmp	r3, #0
 379 000c 01D1     		bne	.L22
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 380              		.loc 1 465 12
 381 000e 0123     		movs	r3, #1
 382 0010 15E0     		b	.L23
 383              	.L22:
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 16


 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Stop the CAN module */
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 384              		.loc 1 472 9
 385 0012 7868     		ldr	r0, [r7, #4]
 386 0014 FFF7FEFF 		bl	HAL_CAN_Stop
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 387              		.loc 1 485 3
 388 0018 7868     		ldr	r0, [r7, #4]
 389 001a FFF7FEFF 		bl	HAL_CAN_MspDeInit
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN peripheral */
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 390              		.loc 1 489 3
 391 001e 7B68     		ldr	r3, [r7, #4]
 392 0020 1B68     		ldr	r3, [r3]
 393 0022 1A68     		ldr	r2, [r3]
 394 0024 7B68     		ldr	r3, [r7, #4]
 395 0026 1B68     		ldr	r3, [r3]
 396 0028 42F40042 		orr	r2, r2, #32768
 397 002c 1A60     		str	r2, [r3]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 398              		.loc 1 492 19
 399 002e 7B68     		ldr	r3, [r7, #4]
 400 0030 0022     		movs	r2, #0
 401 0032 5A62     		str	r2, [r3, #36]
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Change CAN state */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 402              		.loc 1 495 15
 403 0034 7B68     		ldr	r3, [r7, #4]
 404 0036 0022     		movs	r2, #0
 405 0038 83F82020 		strb	r2, [r3, #32]
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return HAL_OK;
 406              		.loc 1 498 10
 407 003c 0023     		movs	r3, #0
 408              	.L23:
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 17


 409              		.loc 1 499 1
 410 003e 1846     		mov	r0, r3
 411 0040 0837     		adds	r7, r7, #8
 412              	.LCFI8:
 413              		.cfi_def_cfa_offset 8
 414 0042 BD46     		mov	sp, r7
 415              	.LCFI9:
 416              		.cfi_def_cfa_register 13
 417              		@ sp needed
 418 0044 80BD     		pop	{r7, pc}
 419              		.cfi_endproc
 420              	.LFE240:
 422              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 423              		.align	1
 424              		.weak	HAL_CAN_MspInit
 425              		.syntax unified
 426              		.thumb
 427              		.thumb_func
 429              	HAL_CAN_MspInit:
 430              	.LFB241:
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 431              		.loc 1 508 1
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 8
 434              		@ frame_needed = 1, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 436 0000 80B4     		push	{r7}
 437              	.LCFI10:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 83B0     		sub	sp, sp, #12
 441              	.LCFI11:
 442              		.cfi_def_cfa_offset 16
 443 0004 00AF     		add	r7, sp, #0
 444              	.LCFI12:
 445              		.cfi_def_cfa_register 7
 446 0006 7860     		str	r0, [r7, #4]
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 447              		.loc 1 515 1
 448 0008 00BF     		nop
 449 000a 0C37     		adds	r7, r7, #12
 450              	.LCFI13:
 451              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 18


 452 000c BD46     		mov	sp, r7
 453              	.LCFI14:
 454              		.cfi_def_cfa_register 13
 455              		@ sp needed
 456 000e 5DF8047B 		ldr	r7, [sp], #4
 457              	.LCFI15:
 458              		.cfi_restore 7
 459              		.cfi_def_cfa_offset 0
 460 0012 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE241:
 464              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 465              		.align	1
 466              		.weak	HAL_CAN_MspDeInit
 467              		.syntax unified
 468              		.thumb
 469              		.thumb_func
 471              	HAL_CAN_MspDeInit:
 472              	.LFB242:
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 473              		.loc 1 524 1
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI16:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 83B0     		sub	sp, sp, #12
 483              	.LCFI17:
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              	.LCFI18:
 487              		.cfi_def_cfa_register 7
 488 0006 7860     		str	r0, [r7, #4]
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 489              		.loc 1 531 1
 490 0008 00BF     		nop
 491 000a 0C37     		adds	r7, r7, #12
 492              	.LCFI19:
 493              		.cfi_def_cfa_offset 4
 494 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 19


 495              	.LCFI20:
 496              		.cfi_def_cfa_register 13
 497              		@ sp needed
 498 000e 5DF8047B 		ldr	r7, [sp], #4
 499              	.LCFI21:
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 0012 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE242:
 506              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 507              		.align	1
 508              		.global	HAL_CAN_ConfigFilter
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 513              	HAL_CAN_ConfigFilter:
 514              	.LFB243:
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                            void (* pCallback)(CAN_HandleTypeDef *_hcan))
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pCallback == NULL)
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 20


 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 21


 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         CAN callback is redirected to the weak predefined callback
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for CAN module
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one of the following values:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 22


 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID Tx Mailbox 0 Complete callback ID
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID Tx Mailbox 1 Complete callback ID
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID Tx Mailbox 2 Complete callback ID
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CB_ID Tx Mailbox 0 Abort callback ID
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CB_ID Tx Mailbox 1 Abort callback ID
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CB_ID Tx Mailbox 2 Abort callback ID
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID Rx Fifo 0 message pending callback ID
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CB_ID Rx Fifo 0 full callback ID
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID Rx Fifo 1 message pending callback ID
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CB_ID Rx Fifo 1 full callback ID
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CB_ID Sleep callback ID
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID Wake Up from Rx message callback ID
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CB_ID Error callback ID
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 23


 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     switch (CallbackID)
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       default :
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update the error code */
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Return error status */
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         status =  HAL_ERROR;
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         break;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 24


 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update the error code */
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return error status */
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status =  HAL_ERROR;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Configuration functions.
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****               ##### Configuration functions #####
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         contains the filter configuration information.
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, const CAN_FilterTypeDef *sFilterCon
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 515              		.loc 1 841 1
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 24
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520 0000 80B4     		push	{r7}
 521              	.LCFI22:
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 0002 87B0     		sub	sp, sp, #28
 525              	.LCFI23:
 526              		.cfi_def_cfa_offset 32
 527 0004 00AF     		add	r7, sp, #0
 528              	.LCFI24:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 25


 529              		.cfi_def_cfa_register 7
 530 0006 7860     		str	r0, [r7, #4]
 531 0008 3960     		str	r1, [r7]
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filternbrbitpos;
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 532              		.loc 1 843 16
 533 000a 7B68     		ldr	r3, [r7, #4]
 534 000c 1B68     		ldr	r3, [r3]
 535 000e 7B61     		str	r3, [r7, #20]
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 536              		.loc 1 844 24
 537 0010 7B68     		ldr	r3, [r7, #4]
 538 0012 93F82030 		ldrb	r3, [r3, #32]
 539 0016 FB74     		strb	r3, [r7, #19]
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 540              		.loc 1 846 6
 541 0018 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 542 001a 012B     		cmp	r3, #1
 543 001c 03D0     		beq	.L27
 544              		.loc 1 846 38 discriminator 1
 545 001e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 546 0020 022B     		cmp	r3, #2
 547 0022 40F0BE80 		bne	.L28
 548              	.L27:
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (hcan->Instance == CAN3)
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN3 is single instance with 14 dedicated filters banks */
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select master instance to access the filter banks */
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip = CAN1;
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check the parameters */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 26


 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select master instance to access the filter banks */
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     can_ip = CAN1;
 549              		.loc 1 881 12
 550 0026 654B     		ldr	r3, .L37
 551 0028 7B61     		str	r3, [r7, #20]
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the parameters */
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Initialisation mode for the filter */
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 552              		.loc 1 894 5
 553 002a 7B69     		ldr	r3, [r7, #20]
 554 002c D3F80032 		ldr	r3, [r3, #512]
 555 0030 43F00102 		orr	r2, r3, #1
 556 0034 7B69     		ldr	r3, [r7, #20]
 557 0036 C3F80022 		str	r2, [r3, #512]
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if defined(CAN3)
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the CAN instance */
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (can_ip == CAN1)
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select the start filter number of CAN2 slave instance */
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #elif defined(CAN2)
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 558              		.loc 1 907 5
 559 003a 7B69     		ldr	r3, [r7, #20]
 560 003c D3F80032 		ldr	r3, [r3, #512]
 561 0040 23F47C52 		bic	r2, r3, #16128
 562 0044 7B69     		ldr	r3, [r7, #20]
 563 0046 C3F80022 		str	r2, [r3, #512]
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 564              		.loc 1 908 5
 565 004a 7B69     		ldr	r3, [r7, #20]
 566 004c D3F80022 		ldr	r2, [r3, #512]
 567 0050 3B68     		ldr	r3, [r7]
 568 0052 5B6A     		ldr	r3, [r3, #36]
 569 0054 1B02     		lsls	r3, r3, #8
 570 0056 1A43     		orrs	r2, r2, r3
 571 0058 7B69     		ldr	r3, [r7, #20]
 572 005a C3F80022 		str	r2, [r3, #512]
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* CAN3 */
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Convert filter number into bit position */
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 27


 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 573              		.loc 1 912 52
 574 005e 3B68     		ldr	r3, [r7]
 575 0060 5B69     		ldr	r3, [r3, #20]
 576              		.loc 1 912 65
 577 0062 03F01F03 		and	r3, r3, #31
 578              		.loc 1 912 21
 579 0066 0122     		movs	r2, #1
 580 0068 02FA03F3 		lsl	r3, r2, r3
 581 006c FB60     		str	r3, [r7, #12]
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Deactivation */
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 582              		.loc 1 915 5
 583 006e 7B69     		ldr	r3, [r7, #20]
 584 0070 D3F81C22 		ldr	r2, [r3, #540]
 585 0074 FB68     		ldr	r3, [r7, #12]
 586 0076 DB43     		mvns	r3, r3
 587 0078 1A40     		ands	r2, r2, r3
 588 007a 7B69     		ldr	r3, [r7, #20]
 589 007c C3F81C22 		str	r2, [r3, #540]
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Scale */
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 590              		.loc 1 918 22
 591 0080 3B68     		ldr	r3, [r7]
 592 0082 DB69     		ldr	r3, [r3, #28]
 593              		.loc 1 918 8
 594 0084 002B     		cmp	r3, #0
 595 0086 23D1     		bne	.L29
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 16-bit scale for the filter */
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 596              		.loc 1 921 7
 597 0088 7B69     		ldr	r3, [r7, #20]
 598 008a D3F80C22 		ldr	r2, [r3, #524]
 599 008e FB68     		ldr	r3, [r7, #12]
 600 0090 DB43     		mvns	r3, r3
 601 0092 1A40     		ands	r2, r2, r3
 602 0094 7B69     		ldr	r3, [r7, #20]
 603 0096 C3F80C22 		str	r2, [r3, #524]
 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 604              		.loc 1 926 48
 605 009a 3B68     		ldr	r3, [r7]
 606 009c DB68     		ldr	r3, [r3, #12]
 607              		.loc 1 926 67
 608 009e 1904     		lsls	r1, r3, #16
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 609              		.loc 1 927 47
 610 00a0 3B68     		ldr	r3, [r7]
 611 00a2 5B68     		ldr	r3, [r3, #4]
 612              		.loc 1 927 22
 613 00a4 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 28


 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 614              		.loc 1 925 44
 615 00a6 3A68     		ldr	r2, [r7]
 616 00a8 5269     		ldr	r2, [r2, #20]
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 617              		.loc 1 926 75
 618 00aa 1943     		orrs	r1, r1, r3
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 619              		.loc 1 925 62
 620 00ac 7B69     		ldr	r3, [r7, #20]
 621 00ae 4832     		adds	r2, r2, #72
 622 00b0 43F83210 		str	r1, [r3, r2, lsl #3]
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 623              		.loc 1 932 48
 624 00b4 3B68     		ldr	r3, [r7]
 625 00b6 9B68     		ldr	r3, [r3, #8]
 626              		.loc 1 932 68
 627 00b8 1904     		lsls	r1, r3, #16
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 628              		.loc 1 933 47
 629 00ba 3B68     		ldr	r3, [r7]
 630 00bc 1B68     		ldr	r3, [r3]
 631              		.loc 1 933 22
 632 00be 9AB2     		uxth	r2, r3
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 633              		.loc 1 931 44
 634 00c0 3B68     		ldr	r3, [r7]
 635 00c2 5B69     		ldr	r3, [r3, #20]
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 636              		.loc 1 932 76
 637 00c4 0A43     		orrs	r2, r2, r1
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 638              		.loc 1 931 62
 639 00c6 7969     		ldr	r1, [r7, #20]
 640 00c8 4833     		adds	r3, r3, #72
 641 00ca DB00     		lsls	r3, r3, #3
 642 00cc 0B44     		add	r3, r3, r1
 643 00ce 5A60     		str	r2, [r3, #4]
 644              	.L29:
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 645              		.loc 1 936 22
 646 00d0 3B68     		ldr	r3, [r7]
 647 00d2 DB69     		ldr	r3, [r3, #28]
 648              		.loc 1 936 8
 649 00d4 012B     		cmp	r3, #1
 650 00d6 22D1     		bne	.L30
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit scale for the filter */
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 651              		.loc 1 939 7
 652 00d8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 29


 653 00da D3F80C22 		ldr	r2, [r3, #524]
 654 00de FB68     		ldr	r3, [r7, #12]
 655 00e0 1A43     		orrs	r2, r2, r3
 656 00e2 7B69     		ldr	r3, [r7, #20]
 657 00e4 C3F80C22 		str	r2, [r3, #524]
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 658              		.loc 1 943 48
 659 00e8 3B68     		ldr	r3, [r7]
 660 00ea 1B68     		ldr	r3, [r3]
 661              		.loc 1 943 64
 662 00ec 1904     		lsls	r1, r3, #16
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 663              		.loc 1 944 47
 664 00ee 3B68     		ldr	r3, [r7]
 665 00f0 5B68     		ldr	r3, [r3, #4]
 666              		.loc 1 944 22
 667 00f2 9BB2     		uxth	r3, r3
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 668              		.loc 1 942 44
 669 00f4 3A68     		ldr	r2, [r7]
 670 00f6 5269     		ldr	r2, [r2, #20]
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 671              		.loc 1 943 72
 672 00f8 1943     		orrs	r1, r1, r3
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 673              		.loc 1 942 62
 674 00fa 7B69     		ldr	r3, [r7, #20]
 675 00fc 4832     		adds	r2, r2, #72
 676 00fe 43F83210 		str	r1, [r3, r2, lsl #3]
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 677              		.loc 1 948 48
 678 0102 3B68     		ldr	r3, [r7]
 679 0104 9B68     		ldr	r3, [r3, #8]
 680              		.loc 1 948 68
 681 0106 1904     		lsls	r1, r3, #16
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 682              		.loc 1 949 47
 683 0108 3B68     		ldr	r3, [r7]
 684 010a DB68     		ldr	r3, [r3, #12]
 685              		.loc 1 949 22
 686 010c 9AB2     		uxth	r2, r3
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 687              		.loc 1 947 44
 688 010e 3B68     		ldr	r3, [r7]
 689 0110 5B69     		ldr	r3, [r3, #20]
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 690              		.loc 1 948 76
 691 0112 0A43     		orrs	r2, r2, r1
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 692              		.loc 1 947 62
 693 0114 7969     		ldr	r1, [r7, #20]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 30


 694 0116 4833     		adds	r3, r3, #72
 695 0118 DB00     		lsls	r3, r3, #3
 696 011a 0B44     		add	r3, r3, r1
 697 011c 5A60     		str	r2, [r3, #4]
 698              	.L30:
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter Mode */
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 699              		.loc 1 953 22
 700 011e 3B68     		ldr	r3, [r7]
 701 0120 9B69     		ldr	r3, [r3, #24]
 702              		.loc 1 953 8
 703 0122 002B     		cmp	r3, #0
 704 0124 09D1     		bne	.L31
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 705              		.loc 1 956 7
 706 0126 7B69     		ldr	r3, [r7, #20]
 707 0128 D3F80422 		ldr	r2, [r3, #516]
 708 012c FB68     		ldr	r3, [r7, #12]
 709 012e DB43     		mvns	r3, r3
 710 0130 1A40     		ands	r2, r2, r3
 711 0132 7B69     		ldr	r3, [r7, #20]
 712 0134 C3F80422 		str	r2, [r3, #516]
 713 0138 07E0     		b	.L32
 714              	.L31:
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Identifier list mode for the filter*/
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 715              		.loc 1 961 7
 716 013a 7B69     		ldr	r3, [r7, #20]
 717 013c D3F80422 		ldr	r2, [r3, #516]
 718 0140 FB68     		ldr	r3, [r7, #12]
 719 0142 1A43     		orrs	r2, r2, r3
 720 0144 7B69     		ldr	r3, [r7, #20]
 721 0146 C3F80422 		str	r2, [r3, #516]
 722              	.L32:
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter FIFO assignment */
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 723              		.loc 1 965 22
 724 014a 3B68     		ldr	r3, [r7]
 725 014c 1B69     		ldr	r3, [r3, #16]
 726              		.loc 1 965 8
 727 014e 002B     		cmp	r3, #0
 728 0150 09D1     		bne	.L33
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 729              		.loc 1 968 7
 730 0152 7B69     		ldr	r3, [r7, #20]
 731 0154 D3F81422 		ldr	r2, [r3, #532]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 31


 732 0158 FB68     		ldr	r3, [r7, #12]
 733 015a DB43     		mvns	r3, r3
 734 015c 1A40     		ands	r2, r2, r3
 735 015e 7B69     		ldr	r3, [r7, #20]
 736 0160 C3F81422 		str	r2, [r3, #532]
 737 0164 07E0     		b	.L34
 738              	.L33:
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 739              		.loc 1 973 7
 740 0166 7B69     		ldr	r3, [r7, #20]
 741 0168 D3F81422 		ldr	r2, [r3, #532]
 742 016c FB68     		ldr	r3, [r7, #12]
 743 016e 1A43     		orrs	r2, r2, r3
 744 0170 7B69     		ldr	r3, [r7, #20]
 745 0172 C3F81422 		str	r2, [r3, #532]
 746              	.L34:
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Filter activation */
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 747              		.loc 1 977 22
 748 0176 3B68     		ldr	r3, [r7]
 749 0178 1B6A     		ldr	r3, [r3, #32]
 750              		.loc 1 977 8
 751 017a 012B     		cmp	r3, #1
 752 017c 07D1     		bne	.L35
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 753              		.loc 1 979 7
 754 017e 7B69     		ldr	r3, [r7, #20]
 755 0180 D3F81C22 		ldr	r2, [r3, #540]
 756 0184 FB68     		ldr	r3, [r7, #12]
 757 0186 1A43     		orrs	r2, r2, r3
 758 0188 7B69     		ldr	r3, [r7, #20]
 759 018a C3F81C22 		str	r2, [r3, #540]
 760              	.L35:
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 761              		.loc 1 983 5
 762 018e 7B69     		ldr	r3, [r7, #20]
 763 0190 D3F80032 		ldr	r3, [r3, #512]
 764 0194 23F00102 		bic	r2, r3, #1
 765 0198 7B69     		ldr	r3, [r7, #20]
 766 019a C3F80022 		str	r2, [r3, #512]
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 767              		.loc 1 986 12
 768 019e 0023     		movs	r3, #0
 769 01a0 06E0     		b	.L36
 770              	.L28:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 32


 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 771              		.loc 1 991 21
 772 01a2 7B68     		ldr	r3, [r7, #4]
 773 01a4 5B6A     		ldr	r3, [r3, #36]
 774 01a6 43F48022 		orr	r2, r3, #262144
 775 01aa 7B68     		ldr	r3, [r7, #4]
 776 01ac 5A62     		str	r2, [r3, #36]
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 777              		.loc 1 993 12
 778 01ae 0123     		movs	r3, #1
 779              	.L36:
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 780              		.loc 1 995 1
 781 01b0 1846     		mov	r0, r3
 782 01b2 1C37     		adds	r7, r7, #28
 783              	.LCFI25:
 784              		.cfi_def_cfa_offset 4
 785 01b4 BD46     		mov	sp, r7
 786              	.LCFI26:
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 01b6 5DF8047B 		ldr	r7, [sp], #4
 790              	.LCFI27:
 791              		.cfi_restore 7
 792              		.cfi_def_cfa_offset 0
 793 01ba 7047     		bx	lr
 794              	.L38:
 795              		.align	2
 796              	.L37:
 797 01bc 00640040 		.word	1073767424
 798              		.cfi_endproc
 799              	.LFE243:
 801              		.section	.text.HAL_CAN_Start,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_CAN_Start
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 808              	HAL_CAN_Start:
 809              	.LFB244:
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Control functions
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                       ##### Control functions #####
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 33


1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              and activate the corresponding
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              transmission request
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                              pending on the selected Tx mailbox
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Start the CAN module.
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 810              		.loc 1 1035 1
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              	.LCFI28:
 816              		.cfi_def_cfa_offset 8
 817              		.cfi_offset 7, -8
 818              		.cfi_offset 14, -4
 819 0002 84B0     		sub	sp, sp, #16
 820              	.LCFI29:
 821              		.cfi_def_cfa_offset 24
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI30:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 826              		.loc 1 1038 11
 827 0008 7B68     		ldr	r3, [r7, #4]
 828 000a 93F82030 		ldrb	r3, [r3, #32]
 829 000e DBB2     		uxtb	r3, r3
 830              		.loc 1 1038 6
 831 0010 012B     		cmp	r3, #1
 832 0012 2ED1     		bne	.L40
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 34


1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
 833              		.loc 1 1041 17
 834 0014 7B68     		ldr	r3, [r7, #4]
 835 0016 0222     		movs	r2, #2
 836 0018 83F82020 		strb	r2, [r3, #32]
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request leave initialisation */
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 837              		.loc 1 1044 5
 838 001c 7B68     		ldr	r3, [r7, #4]
 839 001e 1B68     		ldr	r3, [r3]
 840 0020 1A68     		ldr	r2, [r3]
 841 0022 7B68     		ldr	r3, [r7, #4]
 842 0024 1B68     		ldr	r3, [r3]
 843 0026 22F00102 		bic	r2, r2, #1
 844 002a 1A60     		str	r2, [r3]
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
 845              		.loc 1 1047 17
 846 002c FFF7FEFF 		bl	HAL_GetTick
 847 0030 F860     		str	r0, [r7, #12]
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
 848              		.loc 1 1050 11
 849 0032 12E0     		b	.L41
 850              	.L43:
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 851              		.loc 1 1053 12
 852 0034 FFF7FEFF 		bl	HAL_GetTick
 853 0038 0246     		mov	r2, r0
 854              		.loc 1 1053 26
 855 003a FB68     		ldr	r3, [r7, #12]
 856 003c D31A     		subs	r3, r2, r3
 857              		.loc 1 1053 10
 858 003e 0A2B     		cmp	r3, #10
 859 0040 0BD9     		bls	.L41
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 860              		.loc 1 1056 25
 861 0042 7B68     		ldr	r3, [r7, #4]
 862 0044 5B6A     		ldr	r3, [r3, #36]
 863 0046 43F40032 		orr	r2, r3, #131072
 864 004a 7B68     		ldr	r3, [r7, #4]
 865 004c 5A62     		str	r2, [r3, #36]
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 866              		.loc 1 1059 21
 867 004e 7B68     		ldr	r3, [r7, #4]
 868 0050 0522     		movs	r2, #5
 869 0052 83F82020 		strb	r2, [r3, #32]
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 35


1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 870              		.loc 1 1061 16
 871 0056 0123     		movs	r3, #1
 872 0058 12E0     		b	.L42
 873              	.L41:
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 874              		.loc 1 1050 17
 875 005a 7B68     		ldr	r3, [r7, #4]
 876 005c 1B68     		ldr	r3, [r3]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 877              		.loc 1 1050 27
 878 005e 5B68     		ldr	r3, [r3, #4]
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 879              		.loc 1 1050 33
 880 0060 03F00103 		and	r3, r3, #1
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 881              		.loc 1 1050 11
 882 0064 002B     		cmp	r3, #0
 883 0066 E5D1     		bne	.L43
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 884              		.loc 1 1066 21
 885 0068 7B68     		ldr	r3, [r7, #4]
 886 006a 0022     		movs	r2, #0
 887 006c 5A62     		str	r2, [r3, #36]
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 888              		.loc 1 1069 12
 889 006e 0023     		movs	r3, #0
 890 0070 06E0     		b	.L42
 891              	.L40:
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
 892              		.loc 1 1074 21
 893 0072 7B68     		ldr	r3, [r7, #4]
 894 0074 5B6A     		ldr	r3, [r3, #36]
 895 0076 43F40022 		orr	r2, r3, #524288
 896 007a 7B68     		ldr	r3, [r7, #4]
 897 007c 5A62     		str	r2, [r3, #36]
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 898              		.loc 1 1076 12
 899 007e 0123     		movs	r3, #1
 900              	.L42:
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 901              		.loc 1 1078 1
 902 0080 1846     		mov	r0, r3
 903 0082 1037     		adds	r7, r7, #16
 904              	.LCFI31:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 36


 905              		.cfi_def_cfa_offset 8
 906 0084 BD46     		mov	sp, r7
 907              	.LCFI32:
 908              		.cfi_def_cfa_register 13
 909              		@ sp needed
 910 0086 80BD     		pop	{r7, pc}
 911              		.cfi_endproc
 912              	.LFE244:
 914              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 915              		.align	1
 916              		.global	HAL_CAN_Stop
 917              		.syntax unified
 918              		.thumb
 919              		.thumb_func
 921              	HAL_CAN_Stop:
 922              	.LFB245:
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 923              		.loc 1 1087 1
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 16
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              	.LCFI33:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 84B0     		sub	sp, sp, #16
 933              	.LCFI34:
 934              		.cfi_def_cfa_offset 24
 935 0004 00AF     		add	r7, sp, #0
 936              	.LCFI35:
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tickstart;
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
 939              		.loc 1 1090 11
 940 0008 7B68     		ldr	r3, [r7, #4]
 941 000a 93F82030 		ldrb	r3, [r3, #32]
 942 000e DBB2     		uxtb	r3, r3
 943              		.loc 1 1090 6
 944 0010 022B     		cmp	r3, #2
 945 0012 33D1     		bne	.L45
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request initialisation */
1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 946              		.loc 1 1093 5
 947 0014 7B68     		ldr	r3, [r7, #4]
 948 0016 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 37


 949 0018 1A68     		ldr	r2, [r3]
 950 001a 7B68     		ldr	r3, [r7, #4]
 951 001c 1B68     		ldr	r3, [r3]
 952 001e 42F00102 		orr	r2, r2, #1
 953 0022 1A60     		str	r2, [r3]
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get tick */
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     tickstart = HAL_GetTick();
 954              		.loc 1 1096 17
 955 0024 FFF7FEFF 		bl	HAL_GetTick
 956 0028 F860     		str	r0, [r7, #12]
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait the acknowledge */
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 957              		.loc 1 1099 11
 958 002a 12E0     		b	.L46
 959              	.L48:
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check for the Timeout */
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 960              		.loc 1 1102 12
 961 002c FFF7FEFF 		bl	HAL_GetTick
 962 0030 0246     		mov	r2, r0
 963              		.loc 1 1102 26
 964 0032 FB68     		ldr	r3, [r7, #12]
 965 0034 D31A     		subs	r3, r2, r3
 966              		.loc 1 1102 10
 967 0036 0A2B     		cmp	r3, #10
 968 0038 0BD9     		bls	.L46
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 969              		.loc 1 1105 25
 970 003a 7B68     		ldr	r3, [r7, #4]
 971 003c 5B6A     		ldr	r3, [r3, #36]
 972 003e 43F40032 		orr	r2, r3, #131072
 973 0042 7B68     		ldr	r3, [r7, #4]
 974 0044 5A62     		str	r2, [r3, #36]
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Change CAN state */
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
 975              		.loc 1 1108 21
 976 0046 7B68     		ldr	r3, [r7, #4]
 977 0048 0522     		movs	r2, #5
 978 004a 83F82020 		strb	r2, [r3, #32]
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 979              		.loc 1 1110 16
 980 004e 0123     		movs	r3, #1
 981 0050 1BE0     		b	.L47
 982              	.L46:
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 983              		.loc 1 1099 17
 984 0052 7B68     		ldr	r3, [r7, #4]
 985 0054 1B68     		ldr	r3, [r3]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 986              		.loc 1 1099 27
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 38


 987 0056 5B68     		ldr	r3, [r3, #4]
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 988              		.loc 1 1099 33
 989 0058 03F00103 		and	r3, r3, #1
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
 990              		.loc 1 1099 11
 991 005c 002B     		cmp	r3, #0
 992 005e E5D0     		beq	.L48
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Exit from sleep mode */
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 993              		.loc 1 1115 5
 994 0060 7B68     		ldr	r3, [r7, #4]
 995 0062 1B68     		ldr	r3, [r3]
 996 0064 1A68     		ldr	r2, [r3]
 997 0066 7B68     		ldr	r3, [r7, #4]
 998 0068 1B68     		ldr	r3, [r3]
 999 006a 22F00202 		bic	r2, r2, #2
 1000 006e 1A60     		str	r2, [r3]
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Change CAN peripheral state */
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 1001              		.loc 1 1118 17
 1002 0070 7B68     		ldr	r3, [r7, #4]
 1003 0072 0122     		movs	r2, #1
 1004 0074 83F82020 		strb	r2, [r3, #32]
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1005              		.loc 1 1121 12
 1006 0078 0023     		movs	r3, #0
 1007 007a 06E0     		b	.L47
 1008              	.L45:
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
 1009              		.loc 1 1126 21
 1010 007c 7B68     		ldr	r3, [r7, #4]
 1011 007e 5B6A     		ldr	r3, [r3, #36]
 1012 0080 43F48012 		orr	r2, r3, #1048576
 1013 0084 7B68     		ldr	r3, [r7, #4]
 1014 0086 5A62     		str	r2, [r3, #36]
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1015              		.loc 1 1128 12
 1016 0088 0123     		movs	r3, #1
 1017              	.L47:
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1018              		.loc 1 1130 1
 1019 008a 1846     		mov	r0, r3
 1020 008c 1037     		adds	r7, r7, #16
 1021              	.LCFI36:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 39


 1022              		.cfi_def_cfa_offset 8
 1023 008e BD46     		mov	sp, r7
 1024              	.LCFI37:
 1025              		.cfi_def_cfa_register 13
 1026              		@ sp needed
 1027 0090 80BD     		pop	{r7, pc}
 1028              		.cfi_endproc
 1029              	.LFE245:
 1031              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 1032              		.align	1
 1033              		.global	HAL_CAN_RequestSleep
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1038              	HAL_CAN_RequestSleep:
 1039              	.LFB246:
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of a CAN frame) has been completed.
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1040              		.loc 1 1142 1
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 16
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0000 80B4     		push	{r7}
 1046              	.LCFI38:
 1047              		.cfi_def_cfa_offset 4
 1048              		.cfi_offset 7, -4
 1049 0002 85B0     		sub	sp, sp, #20
 1050              	.LCFI39:
 1051              		.cfi_def_cfa_offset 24
 1052 0004 00AF     		add	r7, sp, #0
 1053              	.LCFI40:
 1054              		.cfi_def_cfa_register 7
 1055 0006 7860     		str	r0, [r7, #4]
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1056              		.loc 1 1143 24
 1057 0008 7B68     		ldr	r3, [r7, #4]
 1058 000a 93F82030 		ldrb	r3, [r3, #32]
 1059 000e FB73     		strb	r3, [r7, #15]
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1060              		.loc 1 1145 6
 1061 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1062 0012 012B     		cmp	r3, #1
 1063 0014 02D0     		beq	.L50
 1064              		.loc 1 1145 38 discriminator 1
 1065 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 40


 1066 0018 022B     		cmp	r3, #2
 1067 001a 09D1     		bne	.L51
 1068              	.L50:
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Request Sleep mode */
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1069              		.loc 1 1149 5
 1070 001c 7B68     		ldr	r3, [r7, #4]
 1071 001e 1B68     		ldr	r3, [r3]
 1072 0020 1A68     		ldr	r2, [r3]
 1073 0022 7B68     		ldr	r3, [r7, #4]
 1074 0024 1B68     		ldr	r3, [r3]
 1075 0026 42F00202 		orr	r2, r2, #2
 1076 002a 1A60     		str	r2, [r3]
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1077              		.loc 1 1152 12
 1078 002c 0023     		movs	r3, #0
 1079 002e 06E0     		b	.L52
 1080              	.L51:
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1081              		.loc 1 1157 21
 1082 0030 7B68     		ldr	r3, [r7, #4]
 1083 0032 5B6A     		ldr	r3, [r3, #36]
 1084 0034 43F48022 		orr	r2, r3, #262144
 1085 0038 7B68     		ldr	r3, [r7, #4]
 1086 003a 5A62     		str	r2, [r3, #36]
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1087              		.loc 1 1160 12
 1088 003c 0123     		movs	r3, #1
 1089              	.L52:
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1090              		.loc 1 1162 1
 1091 003e 1846     		mov	r0, r3
 1092 0040 1437     		adds	r7, r7, #20
 1093              	.LCFI41:
 1094              		.cfi_def_cfa_offset 4
 1095 0042 BD46     		mov	sp, r7
 1096              	.LCFI42:
 1097              		.cfi_def_cfa_register 13
 1098              		@ sp needed
 1099 0044 5DF8047B 		ldr	r7, [sp], #4
 1100              	.LCFI43:
 1101              		.cfi_restore 7
 1102              		.cfi_def_cfa_offset 0
 1103 0048 7047     		bx	lr
 1104              		.cfi_endproc
 1105              	.LFE246:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 41


 1107              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1108              		.align	1
 1109              		.global	HAL_CAN_WakeUp
 1110              		.syntax unified
 1111              		.thumb
 1112              		.thumb_func
 1114              	HAL_CAN_WakeUp:
 1115              	.LFB247:
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         is exited.
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status.
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1116              		.loc 1 1173 1
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 16
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120              		@ link register save eliminated.
 1121 0000 80B4     		push	{r7}
 1122              	.LCFI44:
 1123              		.cfi_def_cfa_offset 4
 1124              		.cfi_offset 7, -4
 1125 0002 85B0     		sub	sp, sp, #20
 1126              	.LCFI45:
 1127              		.cfi_def_cfa_offset 24
 1128 0004 00AF     		add	r7, sp, #0
 1129              	.LCFI46:
 1130              		.cfi_def_cfa_register 7
 1131 0006 7860     		str	r0, [r7, #4]
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   __IO uint32_t count = 0;
 1132              		.loc 1 1174 17
 1133 0008 0023     		movs	r3, #0
 1134 000a BB60     		str	r3, [r7, #8]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1135              		.loc 1 1175 24
 1136 000c 7B68     		ldr	r3, [r7, #4]
 1137 000e 93F82030 		ldrb	r3, [r3, #32]
 1138 0012 FB73     		strb	r3, [r7, #15]
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1139              		.loc 1 1177 6
 1140 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1141 0016 012B     		cmp	r3, #1
 1142 0018 02D0     		beq	.L54
 1143              		.loc 1 1177 38 discriminator 1
 1144 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1145 001c 022B     		cmp	r3, #2
 1146 001e 1FD1     		bne	.L55
 1147              	.L54:
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 42


1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wake up request */
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 1148              		.loc 1 1181 5
 1149 0020 7B68     		ldr	r3, [r7, #4]
 1150 0022 1B68     		ldr	r3, [r3]
 1151 0024 1A68     		ldr	r2, [r3]
 1152 0026 7B68     		ldr	r3, [r7, #4]
 1153 0028 1B68     		ldr	r3, [r3]
 1154 002a 22F00202 		bic	r2, r2, #2
 1155 002e 1A60     		str	r2, [r3]
 1156              	.L58:
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Wait sleep mode is exited */
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     do
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Increment counter */
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       count++;
 1157              		.loc 1 1187 12
 1158 0030 BB68     		ldr	r3, [r7, #8]
 1159 0032 0133     		adds	r3, r3, #1
 1160 0034 BB60     		str	r3, [r7, #8]
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check if timeout is reached */
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (count > CAN_WAKEUP_TIMEOUT_COUNTER)
 1161              		.loc 1 1190 17
 1162 0036 BB68     		ldr	r3, [r7, #8]
 1163              		.loc 1 1190 10
 1164 0038 104A     		ldr	r2, .L59
 1165 003a 9342     		cmp	r3, r2
 1166 003c 07D9     		bls	.L56
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 1167              		.loc 1 1193 25
 1168 003e 7B68     		ldr	r3, [r7, #4]
 1169 0040 5B6A     		ldr	r3, [r3, #36]
 1170 0042 43F40032 		orr	r2, r3, #131072
 1171 0046 7B68     		ldr	r3, [r7, #4]
 1172 0048 5A62     		str	r2, [r3, #36]
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 1173              		.loc 1 1195 16
 1174 004a 0123     		movs	r3, #1
 1175 004c 0FE0     		b	.L57
 1176              	.L56:
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     } while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
 1177              		.loc 1 1197 19
 1178 004e 7B68     		ldr	r3, [r7, #4]
 1179 0050 1B68     		ldr	r3, [r3]
 1180              		.loc 1 1197 29
 1181 0052 5B68     		ldr	r3, [r3, #4]
 1182              		.loc 1 1197 35
 1183 0054 03F00203 		and	r3, r3, #2
 1184              		.loc 1 1197 5
 1185 0058 002B     		cmp	r3, #0
 1186 005a E9D1     		bne	.L58
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 43


1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1187              		.loc 1 1200 12
 1188 005c 0023     		movs	r3, #0
 1189 005e 06E0     		b	.L57
 1190              	.L55:
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1191              		.loc 1 1205 21
 1192 0060 7B68     		ldr	r3, [r7, #4]
 1193 0062 5B6A     		ldr	r3, [r3, #36]
 1194 0064 43F48022 		orr	r2, r3, #262144
 1195 0068 7B68     		ldr	r3, [r7, #4]
 1196 006a 5A62     		str	r2, [r3, #36]
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1197              		.loc 1 1207 12
 1198 006c 0123     		movs	r3, #1
 1199              	.L57:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1200              		.loc 1 1209 1
 1201 006e 1846     		mov	r0, r3
 1202 0070 1437     		adds	r7, r7, #20
 1203              	.LCFI47:
 1204              		.cfi_def_cfa_offset 4
 1205 0072 BD46     		mov	sp, r7
 1206              	.LCFI48:
 1207              		.cfi_def_cfa_register 13
 1208              		@ sp needed
 1209 0074 5DF8047B 		ldr	r7, [sp], #4
 1210              	.LCFI49:
 1211              		.cfi_restore 7
 1212              		.cfi_def_cfa_offset 0
 1213 0078 7047     		bx	lr
 1214              	.L60:
 1215 007a 00BF     		.align	2
 1216              	.L59:
 1217 007c 40420F00 		.word	1000000
 1218              		.cfi_endproc
 1219              	.LFE247:
 1221              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1222              		.align	1
 1223              		.global	HAL_CAN_IsSleepActive
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1228              	HAL_CAN_IsSleepActive:
 1229              	.LFB248:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 44


1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(const CAN_HandleTypeDef *hcan)
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1230              		.loc 1 1220 1
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 16
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 1235 0000 80B4     		push	{r7}
 1236              	.LCFI50:
 1237              		.cfi_def_cfa_offset 4
 1238              		.cfi_offset 7, -4
 1239 0002 85B0     		sub	sp, sp, #20
 1240              	.LCFI51:
 1241              		.cfi_def_cfa_offset 24
 1242 0004 00AF     		add	r7, sp, #0
 1243              	.LCFI52:
 1244              		.cfi_def_cfa_register 7
 1245 0006 7860     		str	r0, [r7, #4]
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1246              		.loc 1 1221 12
 1247 0008 0023     		movs	r3, #0
 1248 000a FB60     		str	r3, [r7, #12]
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1249              		.loc 1 1222 24
 1250 000c 7B68     		ldr	r3, [r7, #4]
 1251 000e 93F82030 		ldrb	r3, [r3, #32]
 1252 0012 FB72     		strb	r3, [r7, #11]
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1253              		.loc 1 1224 6
 1254 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1255 0016 012B     		cmp	r3, #1
 1256 0018 02D0     		beq	.L62
 1257              		.loc 1 1224 38 discriminator 1
 1258 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1259 001c 022B     		cmp	r3, #2
 1260 001e 08D1     		bne	.L63
 1261              	.L62:
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Sleep mode */
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 1262              		.loc 1 1228 14
 1263 0020 7B68     		ldr	r3, [r7, #4]
 1264 0022 1B68     		ldr	r3, [r3]
 1265              		.loc 1 1228 24
 1266 0024 5B68     		ldr	r3, [r3, #4]
 1267              		.loc 1 1228 30
 1268 0026 03F00203 		and	r3, r3, #2
 1269              		.loc 1 1228 8
 1270 002a 002B     		cmp	r3, #0
 1271 002c 01D0     		beq	.L63
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 45


1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1272              		.loc 1 1230 14
 1273 002e 0123     		movs	r3, #1
 1274 0030 FB60     		str	r3, [r7, #12]
 1275              	.L63:
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return function status */
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1276              		.loc 1 1235 10
 1277 0032 FB68     		ldr	r3, [r7, #12]
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1278              		.loc 1 1236 1
 1279 0034 1846     		mov	r0, r3
 1280 0036 1437     		adds	r7, r7, #20
 1281              	.LCFI53:
 1282              		.cfi_def_cfa_offset 4
 1283 0038 BD46     		mov	sp, r7
 1284              	.LCFI54:
 1285              		.cfi_def_cfa_register 13
 1286              		@ sp needed
 1287 003a 5DF8047B 		ldr	r7, [sp], #4
 1288              	.LCFI55:
 1289              		.cfi_restore 7
 1290              		.cfi_def_cfa_offset 0
 1291 003e 7047     		bx	lr
 1292              		.cfi_endproc
 1293              	.LFE248:
 1295              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1296              		.align	1
 1297              		.global	HAL_CAN_AddTxMessage
 1298              		.syntax unified
 1299              		.thumb
 1300              		.thumb_func
 1302              	HAL_CAN_AddTxMessage:
 1303              	.LFB249:
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         corresponding transmission request.
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, const CAN_TxHeaderTypeDef *pHeader,
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                        const uint8_t aData[], uint32_t *pTxMailbox)
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1304              		.loc 1 1252 1
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 46


 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309 0000 80B4     		push	{r7}
 1310              	.LCFI56:
 1311              		.cfi_def_cfa_offset 4
 1312              		.cfi_offset 7, -4
 1313 0002 89B0     		sub	sp, sp, #36
 1314              	.LCFI57:
 1315              		.cfi_def_cfa_offset 40
 1316 0004 00AF     		add	r7, sp, #0
 1317              	.LCFI58:
 1318              		.cfi_def_cfa_register 7
 1319 0006 F860     		str	r0, [r7, #12]
 1320 0008 B960     		str	r1, [r7, #8]
 1321 000a 7A60     		str	r2, [r7, #4]
 1322 000c 3B60     		str	r3, [r7]
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1323              		.loc 1 1254 24
 1324 000e FB68     		ldr	r3, [r7, #12]
 1325 0010 93F82030 		ldrb	r3, [r3, #32]
 1326 0014 FB77     		strb	r3, [r7, #31]
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 1327              		.loc 1 1255 18
 1328 0016 FB68     		ldr	r3, [r7, #12]
 1329 0018 1B68     		ldr	r3, [r3]
 1330              		.loc 1 1255 12
 1331 001a 9B68     		ldr	r3, [r3, #8]
 1332 001c BB61     		str	r3, [r7, #24]
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check the parameters */
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1333              		.loc 1 1271 6
 1334 001e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1335 0020 012B     		cmp	r3, #1
 1336 0022 03D0     		beq	.L66
 1337              		.loc 1 1271 38 discriminator 1
 1338 0024 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1339 0026 022B     		cmp	r3, #2
 1340 0028 40F0AD80 		bne	.L67
 1341              	.L66:
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 47


1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
 1342              		.loc 1 1275 15
 1343 002c BB69     		ldr	r3, [r7, #24]
 1344 002e 03F08063 		and	r3, r3, #67108864
 1345              		.loc 1 1275 8
 1346 0032 002B     		cmp	r3, #0
 1347 0034 0AD1     		bne	.L68
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1348              		.loc 1 1276 15 discriminator 1
 1349 0036 BB69     		ldr	r3, [r7, #24]
 1350 0038 03F00063 		and	r3, r3, #134217728
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1351              		.loc 1 1275 38 discriminator 1
 1352 003c 002B     		cmp	r3, #0
 1353 003e 05D1     		bne	.L68
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
 1354              		.loc 1 1277 15
 1355 0040 BB69     		ldr	r3, [r7, #24]
 1356 0042 03F08053 		and	r3, r3, #268435456
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 1357              		.loc 1 1276 38
 1358 0046 002B     		cmp	r3, #0
 1359 0048 00F09580 		beq	.L69
 1360              	.L68:
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Select an empty transmit mailbox */
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
 1361              		.loc 1 1280 46
 1362 004c BB69     		ldr	r3, [r7, #24]
 1363 004e 1B0E     		lsrs	r3, r3, #24
 1364              		.loc 1 1280 23
 1365 0050 03F00303 		and	r3, r3, #3
 1366 0054 7B61     		str	r3, [r7, #20]
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Store the Tx mailbox */
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
 1367              		.loc 1 1283 33
 1368 0056 0122     		movs	r2, #1
 1369 0058 7B69     		ldr	r3, [r7, #20]
 1370 005a 9A40     		lsls	r2, r2, r3
 1371              		.loc 1 1283 19
 1372 005c 3B68     		ldr	r3, [r7]
 1373 005e 1A60     		str	r2, [r3]
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Id */
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
 1374              		.loc 1 1286 18
 1375 0060 BB68     		ldr	r3, [r7, #8]
 1376 0062 9B68     		ldr	r3, [r3, #8]
 1377              		.loc 1 1286 10
 1378 0064 002B     		cmp	r3, #0
 1379 0066 0DD1     		bne	.L70
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
 1380              		.loc 1 1288 68
 1381 0068 BB68     		ldr	r3, [r7, #8]
 1382 006a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 48


 1383              		.loc 1 1288 76
 1384 006c 5A05     		lsls	r2, r3, #21
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1385              		.loc 1 1289 67
 1386 006e BB68     		ldr	r3, [r7, #8]
 1387 0070 DB68     		ldr	r3, [r3, #12]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1388              		.loc 1 1288 13
 1389 0072 F968     		ldr	r1, [r7, #12]
 1390 0074 0968     		ldr	r1, [r1]
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1391              		.loc 1 1288 98
 1392 0076 1A43     		orrs	r2, r2, r3
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1393              		.loc 1 1288 57
 1394 0078 7B69     		ldr	r3, [r7, #20]
 1395 007a 1833     		adds	r3, r3, #24
 1396 007c 1B01     		lsls	r3, r3, #4
 1397 007e 0B44     		add	r3, r3, r1
 1398 0080 1A60     		str	r2, [r3]
 1399 0082 0FE0     		b	.L71
 1400              	.L70:
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
 1401              		.loc 1 1293 68
 1402 0084 BB68     		ldr	r3, [r7, #8]
 1403 0086 5B68     		ldr	r3, [r3, #4]
 1404              		.loc 1 1293 76
 1405 0088 DA00     		lsls	r2, r3, #3
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1406              		.loc 1 1294 67
 1407 008a BB68     		ldr	r3, [r7, #8]
 1408 008c 9B68     		ldr	r3, [r3, #8]
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1409              		.loc 1 1293 98
 1410 008e 1A43     		orrs	r2, r2, r3
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->RTR);
 1411              		.loc 1 1295 67
 1412 0090 BB68     		ldr	r3, [r7, #8]
 1413 0092 DB68     		ldr	r3, [r3, #12]
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1414              		.loc 1 1293 13
 1415 0094 F968     		ldr	r1, [r7, #12]
 1416 0096 0968     		ldr	r1, [r1]
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1417              		.loc 1 1294 73
 1418 0098 1A43     		orrs	r2, r2, r3
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                                            pHeader->IDE |
 1419              		.loc 1 1293 57
 1420 009a 7B69     		ldr	r3, [r7, #20]
 1421 009c 1833     		adds	r3, r3, #24
 1422 009e 1B01     		lsls	r3, r3, #4
 1423 00a0 0B44     		add	r3, r3, r1
 1424 00a2 1A60     		str	r2, [r3]
 1425              	.L71:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 49


1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the DLC */
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
 1426              		.loc 1 1299 11
 1427 00a4 FB68     		ldr	r3, [r7, #12]
 1428 00a6 1968     		ldr	r1, [r3]
 1429              		.loc 1 1299 66
 1430 00a8 BB68     		ldr	r3, [r7, #8]
 1431 00aa 1A69     		ldr	r2, [r3, #16]
 1432              		.loc 1 1299 56
 1433 00ac 7B69     		ldr	r3, [r7, #20]
 1434 00ae 1833     		adds	r3, r3, #24
 1435 00b0 1B01     		lsls	r3, r3, #4
 1436 00b2 0B44     		add	r3, r3, r1
 1437 00b4 0433     		adds	r3, r3, #4
 1438 00b6 1A60     		str	r2, [r3]
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
 1439              		.loc 1 1302 18
 1440 00b8 BB68     		ldr	r3, [r7, #8]
 1441 00ba 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 1442              		.loc 1 1302 10
 1443 00bc 012B     		cmp	r3, #1
 1444 00be 11D1     		bne	.L72
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
 1445              		.loc 1 1304 9
 1446 00c0 FB68     		ldr	r3, [r7, #12]
 1447 00c2 1A68     		ldr	r2, [r3]
 1448 00c4 7B69     		ldr	r3, [r7, #20]
 1449 00c6 1833     		adds	r3, r3, #24
 1450 00c8 1B01     		lsls	r3, r3, #4
 1451 00ca 1344     		add	r3, r3, r2
 1452 00cc 0433     		adds	r3, r3, #4
 1453 00ce 1B68     		ldr	r3, [r3]
 1454 00d0 FA68     		ldr	r2, [r7, #12]
 1455 00d2 1168     		ldr	r1, [r2]
 1456 00d4 43F48072 		orr	r2, r3, #256
 1457 00d8 7B69     		ldr	r3, [r7, #20]
 1458 00da 1833     		adds	r3, r3, #24
 1459 00dc 1B01     		lsls	r3, r3, #4
 1460 00de 0B44     		add	r3, r3, r1
 1461 00e0 0433     		adds	r3, r3, #4
 1462 00e2 1A60     		str	r2, [r3]
 1463              	.L72:
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set up the data field */
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
 1464              		.loc 1 1308 7
 1465 00e4 7B68     		ldr	r3, [r7, #4]
 1466 00e6 0733     		adds	r3, r3, #7
 1467 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 00ea 1A06     		lsls	r2, r3, #24
 1469 00ec 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 50


 1470 00ee 0633     		adds	r3, r3, #6
 1471 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1472 00f2 1B04     		lsls	r3, r3, #16
 1473 00f4 1A43     		orrs	r2, r2, r3
 1474 00f6 7B68     		ldr	r3, [r7, #4]
 1475 00f8 0533     		adds	r3, r3, #5
 1476 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1477 00fc 1B02     		lsls	r3, r3, #8
 1478 00fe 1343     		orrs	r3, r3, r2
 1479 0100 7A68     		ldr	r2, [r7, #4]
 1480 0102 0432     		adds	r2, r2, #4
 1481 0104 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1482 0106 1046     		mov	r0, r2
 1483 0108 FA68     		ldr	r2, [r7, #12]
 1484 010a 1168     		ldr	r1, [r2]
 1485 010c 43EA0002 		orr	r2, r3, r0
 1486 0110 7B69     		ldr	r3, [r7, #20]
 1487 0112 1B01     		lsls	r3, r3, #4
 1488 0114 0B44     		add	r3, r3, r1
 1489 0116 03F5C673 		add	r3, r3, #396
 1490 011a 1A60     		str	r2, [r3]
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
 1491              		.loc 1 1313 7
 1492 011c 7B68     		ldr	r3, [r7, #4]
 1493 011e 0333     		adds	r3, r3, #3
 1494 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1495 0122 1A06     		lsls	r2, r3, #24
 1496 0124 7B68     		ldr	r3, [r7, #4]
 1497 0126 0233     		adds	r3, r3, #2
 1498 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1499 012a 1B04     		lsls	r3, r3, #16
 1500 012c 1A43     		orrs	r2, r2, r3
 1501 012e 7B68     		ldr	r3, [r7, #4]
 1502 0130 0133     		adds	r3, r3, #1
 1503 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1504 0134 1B02     		lsls	r3, r3, #8
 1505 0136 1343     		orrs	r3, r3, r2
 1506 0138 7A68     		ldr	r2, [r7, #4]
 1507 013a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1508 013c 1046     		mov	r0, r2
 1509 013e FA68     		ldr	r2, [r7, #12]
 1510 0140 1168     		ldr	r1, [r2]
 1511 0142 43EA0002 		orr	r2, r3, r0
 1512 0146 7B69     		ldr	r3, [r7, #20]
 1513 0148 1B01     		lsls	r3, r3, #4
 1514 014a 0B44     		add	r3, r3, r1
 1515 014c 03F5C473 		add	r3, r3, #392
 1516 0150 1A60     		str	r2, [r3]
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 51


1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Request transmission */
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 1517              		.loc 1 1320 7
 1518 0152 FB68     		ldr	r3, [r7, #12]
 1519 0154 1A68     		ldr	r2, [r3]
 1520 0156 7B69     		ldr	r3, [r7, #20]
 1521 0158 1833     		adds	r3, r3, #24
 1522 015a 1B01     		lsls	r3, r3, #4
 1523 015c 1344     		add	r3, r3, r2
 1524 015e 1B68     		ldr	r3, [r3]
 1525 0160 FA68     		ldr	r2, [r7, #12]
 1526 0162 1168     		ldr	r1, [r2]
 1527 0164 43F00102 		orr	r2, r3, #1
 1528 0168 7B69     		ldr	r3, [r7, #20]
 1529 016a 1833     		adds	r3, r3, #24
 1530 016c 1B01     		lsls	r3, r3, #4
 1531 016e 0B44     		add	r3, r3, r1
 1532 0170 1A60     		str	r2, [r3]
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Return function status */
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_OK;
 1533              		.loc 1 1323 14
 1534 0172 0023     		movs	r3, #0
 1535 0174 0EE0     		b	.L73
 1536              	.L69:
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Update error code */
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 1537              		.loc 1 1328 23
 1538 0176 FB68     		ldr	r3, [r7, #12]
 1539 0178 5B6A     		ldr	r3, [r3, #36]
 1540 017a 43F40012 		orr	r2, r3, #2097152
 1541 017e FB68     		ldr	r3, [r7, #12]
 1542 0180 5A62     		str	r2, [r3, #36]
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       return HAL_ERROR;
 1543              		.loc 1 1330 14
 1544 0182 0123     		movs	r3, #1
 1545 0184 06E0     		b	.L73
 1546              	.L67:
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1547              		.loc 1 1336 21
 1548 0186 FB68     		ldr	r3, [r7, #12]
 1549 0188 5B6A     		ldr	r3, [r3, #36]
 1550 018a 43F48022 		orr	r2, r3, #262144
 1551 018e FB68     		ldr	r3, [r7, #12]
 1552 0190 5A62     		str	r2, [r3, #36]
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1553              		.loc 1 1338 12
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 52


 1554 0192 0123     		movs	r3, #1
 1555              	.L73:
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1556              		.loc 1 1340 1
 1557 0194 1846     		mov	r0, r3
 1558 0196 2437     		adds	r7, r7, #36
 1559              	.LCFI59:
 1560              		.cfi_def_cfa_offset 4
 1561 0198 BD46     		mov	sp, r7
 1562              	.LCFI60:
 1563              		.cfi_def_cfa_register 13
 1564              		@ sp needed
 1565 019a 5DF8047B 		ldr	r7, [sp], #4
 1566              	.LCFI61:
 1567              		.cfi_restore 7
 1568              		.cfi_def_cfa_offset 0
 1569 019e 7047     		bx	lr
 1570              		.cfi_endproc
 1571              	.LFE249:
 1573              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 1574              		.align	1
 1575              		.global	HAL_CAN_AbortTxRequest
 1576              		.syntax unified
 1577              		.thumb
 1578              		.thumb_func
 1580              	HAL_CAN_AbortTxRequest:
 1581              	.LFB250:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Abort transmission requests
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1582              		.loc 1 1351 1
 1583              		.cfi_startproc
 1584              		@ args = 0, pretend = 0, frame = 16
 1585              		@ frame_needed = 1, uses_anonymous_args = 0
 1586              		@ link register save eliminated.
 1587 0000 80B4     		push	{r7}
 1588              	.LCFI62:
 1589              		.cfi_def_cfa_offset 4
 1590              		.cfi_offset 7, -4
 1591 0002 85B0     		sub	sp, sp, #20
 1592              	.LCFI63:
 1593              		.cfi_def_cfa_offset 24
 1594 0004 00AF     		add	r7, sp, #0
 1595              	.LCFI64:
 1596              		.cfi_def_cfa_register 7
 1597 0006 7860     		str	r0, [r7, #4]
 1598 0008 3960     		str	r1, [r7]
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 53


 1599              		.loc 1 1352 24
 1600 000a 7B68     		ldr	r3, [r7, #4]
 1601 000c 93F82030 		ldrb	r3, [r3, #32]
 1602 0010 FB73     		strb	r3, [r7, #15]
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1603              		.loc 1 1357 6
 1604 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1605 0014 012B     		cmp	r3, #1
 1606 0016 02D0     		beq	.L75
 1607              		.loc 1 1357 38 discriminator 1
 1608 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1609 001a 022B     		cmp	r3, #2
 1610 001c 28D1     		bne	.L76
 1611              	.L75:
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
 1612              		.loc 1 1361 22
 1613 001e 3B68     		ldr	r3, [r7]
 1614 0020 03F00103 		and	r3, r3, #1
 1615              		.loc 1 1361 8
 1616 0024 002B     		cmp	r3, #0
 1617 0026 07D0     		beq	.L77
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
 1618              		.loc 1 1364 7
 1619 0028 7B68     		ldr	r3, [r7, #4]
 1620 002a 1B68     		ldr	r3, [r3]
 1621 002c 9A68     		ldr	r2, [r3, #8]
 1622 002e 7B68     		ldr	r3, [r7, #4]
 1623 0030 1B68     		ldr	r3, [r3]
 1624 0032 42F08002 		orr	r2, r2, #128
 1625 0036 9A60     		str	r2, [r3, #8]
 1626              	.L77:
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
 1627              		.loc 1 1368 22
 1628 0038 3B68     		ldr	r3, [r7]
 1629 003a 03F00203 		and	r3, r3, #2
 1630              		.loc 1 1368 8
 1631 003e 002B     		cmp	r3, #0
 1632 0040 07D0     		beq	.L78
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
 1633              		.loc 1 1371 7
 1634 0042 7B68     		ldr	r3, [r7, #4]
 1635 0044 1B68     		ldr	r3, [r3]
 1636 0046 9A68     		ldr	r2, [r3, #8]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 54


 1637 0048 7B68     		ldr	r3, [r7, #4]
 1638 004a 1B68     		ldr	r3, [r3]
 1639 004c 42F40042 		orr	r2, r2, #32768
 1640 0050 9A60     		str	r2, [r3, #8]
 1641              	.L78:
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
 1642              		.loc 1 1375 22
 1643 0052 3B68     		ldr	r3, [r7]
 1644 0054 03F00403 		and	r3, r3, #4
 1645              		.loc 1 1375 8
 1646 0058 002B     		cmp	r3, #0
 1647 005a 07D0     		beq	.L79
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
 1648              		.loc 1 1378 7
 1649 005c 7B68     		ldr	r3, [r7, #4]
 1650 005e 1B68     		ldr	r3, [r3]
 1651 0060 9A68     		ldr	r2, [r3, #8]
 1652 0062 7B68     		ldr	r3, [r7, #4]
 1653 0064 1B68     		ldr	r3, [r3]
 1654 0066 42F40002 		orr	r2, r2, #8388608
 1655 006a 9A60     		str	r2, [r3, #8]
 1656              	.L79:
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 1657              		.loc 1 1382 12
 1658 006c 0023     		movs	r3, #0
 1659 006e 06E0     		b	.L80
 1660              	.L76:
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 1661              		.loc 1 1387 21
 1662 0070 7B68     		ldr	r3, [r7, #4]
 1663 0072 5B6A     		ldr	r3, [r3, #36]
 1664 0074 43F48022 		orr	r2, r3, #262144
 1665 0078 7B68     		ldr	r3, [r7, #4]
 1666 007a 5A62     		str	r2, [r3, #36]
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 1667              		.loc 1 1389 12
 1668 007c 0123     		movs	r3, #1
 1669              	.L80:
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1670              		.loc 1 1391 1
 1671 007e 1846     		mov	r0, r3
 1672 0080 1437     		adds	r7, r7, #20
 1673              	.LCFI65:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 55


 1674              		.cfi_def_cfa_offset 4
 1675 0082 BD46     		mov	sp, r7
 1676              	.LCFI66:
 1677              		.cfi_def_cfa_register 13
 1678              		@ sp needed
 1679 0084 5DF8047B 		ldr	r7, [sp], #4
 1680              	.LCFI67:
 1681              		.cfi_restore 7
 1682              		.cfi_def_cfa_offset 0
 1683 0088 7047     		bx	lr
 1684              		.cfi_endproc
 1685              	.LFE250:
 1687              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 1688              		.align	1
 1689              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1694              	HAL_CAN_GetTxMailboxesFreeLevel:
 1695              	.LFB251:
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(const CAN_HandleTypeDef *hcan)
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1696              		.loc 1 1400 1
 1697              		.cfi_startproc
 1698              		@ args = 0, pretend = 0, frame = 16
 1699              		@ frame_needed = 1, uses_anonymous_args = 0
 1700              		@ link register save eliminated.
 1701 0000 80B4     		push	{r7}
 1702              	.LCFI68:
 1703              		.cfi_def_cfa_offset 4
 1704              		.cfi_offset 7, -4
 1705 0002 85B0     		sub	sp, sp, #20
 1706              	.LCFI69:
 1707              		.cfi_def_cfa_offset 24
 1708 0004 00AF     		add	r7, sp, #0
 1709              	.LCFI70:
 1710              		.cfi_def_cfa_register 7
 1711 0006 7860     		str	r0, [r7, #4]
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t freelevel = 0U;
 1712              		.loc 1 1401 12
 1713 0008 0023     		movs	r3, #0
 1714 000a FB60     		str	r3, [r7, #12]
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1715              		.loc 1 1402 24
 1716 000c 7B68     		ldr	r3, [r7, #4]
 1717 000e 93F82030 		ldrb	r3, [r3, #32]
 1718 0012 FB72     		strb	r3, [r7, #11]
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1719              		.loc 1 1404 6
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 56


 1720 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1721 0016 012B     		cmp	r3, #1
 1722 0018 02D0     		beq	.L82
 1723              		.loc 1 1404 38 discriminator 1
 1724 001a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1725 001c 022B     		cmp	r3, #2
 1726 001e 1DD1     		bne	.L83
 1727              	.L82:
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
 1728              		.loc 1 1408 14
 1729 0020 7B68     		ldr	r3, [r7, #4]
 1730 0022 1B68     		ldr	r3, [r3]
 1731              		.loc 1 1408 24
 1732 0024 9B68     		ldr	r3, [r3, #8]
 1733              		.loc 1 1408 30
 1734 0026 03F08063 		and	r3, r3, #67108864
 1735              		.loc 1 1408 8
 1736 002a 002B     		cmp	r3, #0
 1737 002c 02D0     		beq	.L84
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1738              		.loc 1 1410 16
 1739 002e FB68     		ldr	r3, [r7, #12]
 1740 0030 0133     		adds	r3, r3, #1
 1741 0032 FB60     		str	r3, [r7, #12]
 1742              	.L84:
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
 1743              		.loc 1 1414 14
 1744 0034 7B68     		ldr	r3, [r7, #4]
 1745 0036 1B68     		ldr	r3, [r3]
 1746              		.loc 1 1414 24
 1747 0038 9B68     		ldr	r3, [r3, #8]
 1748              		.loc 1 1414 30
 1749 003a 03F00063 		and	r3, r3, #134217728
 1750              		.loc 1 1414 8
 1751 003e 002B     		cmp	r3, #0
 1752 0040 02D0     		beq	.L85
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1753              		.loc 1 1416 16
 1754 0042 FB68     		ldr	r3, [r7, #12]
 1755 0044 0133     		adds	r3, r3, #1
 1756 0046 FB60     		str	r3, [r7, #12]
 1757              	.L85:
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
 1758              		.loc 1 1420 14
 1759 0048 7B68     		ldr	r3, [r7, #4]
 1760 004a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 57


 1761              		.loc 1 1420 24
 1762 004c 9B68     		ldr	r3, [r3, #8]
 1763              		.loc 1 1420 30
 1764 004e 03F08053 		and	r3, r3, #268435456
 1765              		.loc 1 1420 8
 1766 0052 002B     		cmp	r3, #0
 1767 0054 02D0     		beq	.L83
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       freelevel++;
 1768              		.loc 1 1422 16
 1769 0056 FB68     		ldr	r3, [r7, #12]
 1770 0058 0133     		adds	r3, r3, #1
 1771 005a FB60     		str	r3, [r7, #12]
 1772              	.L83:
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return freelevel;
 1773              		.loc 1 1427 10
 1774 005c FB68     		ldr	r3, [r7, #12]
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1775              		.loc 1 1428 1
 1776 005e 1846     		mov	r0, r3
 1777 0060 1437     		adds	r7, r7, #20
 1778              	.LCFI71:
 1779              		.cfi_def_cfa_offset 4
 1780 0062 BD46     		mov	sp, r7
 1781              	.LCFI72:
 1782              		.cfi_def_cfa_register 13
 1783              		@ sp needed
 1784 0064 5DF8047B 		ldr	r7, [sp], #4
 1785              	.LCFI73:
 1786              		.cfi_restore 7
 1787              		.cfi_def_cfa_offset 0
 1788 0068 7047     		bx	lr
 1789              		.cfi_endproc
 1790              	.LFE251:
 1792              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 1793              		.align	1
 1794              		.global	HAL_CAN_IsTxMessagePending
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1799              	HAL_CAN_IsTxMessagePending:
 1800              	.LFB252:
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         Mailboxes.
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Status
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 58


1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *                Tx Mailbox.
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(const CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1801              		.loc 1 1443 1
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 16
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806 0000 80B4     		push	{r7}
 1807              	.LCFI74:
 1808              		.cfi_def_cfa_offset 4
 1809              		.cfi_offset 7, -4
 1810 0002 85B0     		sub	sp, sp, #20
 1811              	.LCFI75:
 1812              		.cfi_def_cfa_offset 24
 1813 0004 00AF     		add	r7, sp, #0
 1814              	.LCFI76:
 1815              		.cfi_def_cfa_register 7
 1816 0006 7860     		str	r0, [r7, #4]
 1817 0008 3960     		str	r1, [r7]
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t status = 0U;
 1818              		.loc 1 1444 12
 1819 000a 0023     		movs	r3, #0
 1820 000c FB60     		str	r3, [r7, #12]
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1821              		.loc 1 1445 24
 1822 000e 7B68     		ldr	r3, [r7, #4]
 1823 0010 93F82030 		ldrb	r3, [r3, #32]
 1824 0014 FB72     		strb	r3, [r7, #11]
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1825              		.loc 1 1450 6
 1826 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1827 0018 012B     		cmp	r3, #1
 1828 001a 02D0     		beq	.L88
 1829              		.loc 1 1450 38 discriminator 1
 1830 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1831 001e 022B     		cmp	r3, #2
 1832 0020 0BD1     		bne	.L89
 1833              	.L88:
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
 1834              		.loc 1 1454 14
 1835 0022 7B68     		ldr	r3, [r7, #4]
 1836 0024 1B68     		ldr	r3, [r3]
 1837              		.loc 1 1454 24
 1838 0026 9A68     		ldr	r2, [r3, #8]
 1839              		.loc 1 1454 45
 1840 0028 3B68     		ldr	r3, [r7]
 1841 002a 9B06     		lsls	r3, r3, #26
 1842              		.loc 1 1454 30
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 59


 1843 002c 1A40     		ands	r2, r2, r3
 1844              		.loc 1 1454 83
 1845 002e 3B68     		ldr	r3, [r7]
 1846 0030 9B06     		lsls	r3, r3, #26
 1847              		.loc 1 1454 8
 1848 0032 9A42     		cmp	r2, r3
 1849 0034 01D0     		beq	.L89
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       status = 1U;
 1850              		.loc 1 1456 14
 1851 0036 0123     		movs	r3, #1
 1852 0038 FB60     		str	r3, [r7, #12]
 1853              	.L89:
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return status */
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 1854              		.loc 1 1461 10
 1855 003a FB68     		ldr	r3, [r7, #12]
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1856              		.loc 1 1462 1
 1857 003c 1846     		mov	r0, r3
 1858 003e 1437     		adds	r7, r7, #20
 1859              	.LCFI77:
 1860              		.cfi_def_cfa_offset 4
 1861 0040 BD46     		mov	sp, r7
 1862              	.LCFI78:
 1863              		.cfi_def_cfa_register 13
 1864              		@ sp needed
 1865 0042 5DF8047B 		ldr	r7, [sp], #4
 1866              	.LCFI79:
 1867              		.cfi_restore 7
 1868              		.cfi_def_cfa_offset 0
 1869 0046 7047     		bx	lr
 1870              		.cfi_endproc
 1871              	.LFE252:
 1873              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 1874              		.align	1
 1875              		.global	HAL_CAN_GetTxTimestamp
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1880              	HAL_CAN_GetTxTimestamp:
 1881              	.LFB253:
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             mode is enabled.
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         read.
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(const CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 60


1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1882              		.loc 1 1475 1
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 32
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886              		@ link register save eliminated.
 1887 0000 80B4     		push	{r7}
 1888              	.LCFI80:
 1889              		.cfi_def_cfa_offset 4
 1890              		.cfi_offset 7, -4
 1891 0002 89B0     		sub	sp, sp, #36
 1892              	.LCFI81:
 1893              		.cfi_def_cfa_offset 40
 1894 0004 00AF     		add	r7, sp, #0
 1895              	.LCFI82:
 1896              		.cfi_def_cfa_register 7
 1897 0006 7860     		str	r0, [r7, #4]
 1898 0008 3960     		str	r1, [r7]
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t timestamp = 0U;
 1899              		.loc 1 1476 12
 1900 000a 0023     		movs	r3, #0
 1901 000c FB61     		str	r3, [r7, #28]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t transmitmailbox;
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1902              		.loc 1 1478 24
 1903 000e 7B68     		ldr	r3, [r7, #4]
 1904 0010 93F82030 		ldrb	r3, [r3, #32]
 1905 0014 FB76     		strb	r3, [r7, #27]
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 1906              		.loc 1 1483 6
 1907 0016 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1908 0018 012B     		cmp	r3, #1
 1909 001a 02D0     		beq	.L92
 1910              		.loc 1 1483 38 discriminator 1
 1911 001c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1912 001e 022B     		cmp	r3, #2
 1913 0020 1CD1     		bne	.L93
 1914              	.L92:
 1915 0022 3B68     		ldr	r3, [r7]
 1916 0024 FB60     		str	r3, [r7, #12]
 1917              	.LBB6:
 1918              	.LBB7:
 1919              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 61


  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 62


  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 63


 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 64


 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 65


 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 66


 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 67


 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1920              		.loc 2 380 4
 1921 0026 FB68     		ldr	r3, [r7, #12]
 1922              		.syntax unified
 1923              	@ 380 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1924 0028 93FAA3F3 		rbit r3, r3
 1925              	@ 0 "" 2
 1926              		.thumb
 1927              		.syntax unified
 1928 002c BB60     		str	r3, [r7, #8]
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1929              		.loc 2 393 10
 1930 002e BB68     		ldr	r3, [r7, #8]
 1931 0030 3B61     		str	r3, [r7, #16]
 1932              	.LBE7:
 1933              	.LBE6:
 1934              	.LBB8:
 1935              	.LBB9:
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 68


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1936              		.loc 2 414 6
 1937 0032 3B69     		ldr	r3, [r7, #16]
 1938 0034 002B     		cmp	r3, #0
 1939 0036 01D1     		bne	.L95
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 1940              		.loc 2 416 12
 1941 0038 2023     		movs	r3, #32
 1942 003a 03E0     		b	.L96
 1943              	.L95:
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1944              		.loc 2 418 10
 1945 003c 3B69     		ldr	r3, [r7, #16]
 1946 003e B3FA83F3 		clz	r3, r3
 1947 0042 DBB2     		uxtb	r3, r3
 1948              	.L96:
 1949              	.LBE9:
 1950              	.LBE8:
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Select the Tx mailbox */
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
 1951              		.loc 1 1487 21
 1952 0044 7B61     		str	r3, [r7, #20]
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get timestamp */
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
 1953              		.loc 1 1490 22
 1954 0046 7B68     		ldr	r3, [r7, #4]
 1955 0048 1A68     		ldr	r2, [r3]
 1956              		.loc 1 1490 61
 1957 004a 7B69     		ldr	r3, [r7, #20]
 1958 004c 1833     		adds	r3, r3, #24
 1959 004e 1B01     		lsls	r3, r3, #4
 1960 0050 1344     		add	r3, r3, r2
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 69


 1961 0052 0433     		adds	r3, r3, #4
 1962 0054 1B68     		ldr	r3, [r3]
 1963              		.loc 1 1490 85
 1964 0056 1B0C     		lsrs	r3, r3, #16
 1965              		.loc 1 1490 15
 1966 0058 9BB2     		uxth	r3, r3
 1967 005a FB61     		str	r3, [r7, #28]
 1968              	.L93:
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the timestamp */
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return timestamp;
 1969              		.loc 1 1494 10
 1970 005c FB69     		ldr	r3, [r7, #28]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 1971              		.loc 1 1495 1
 1972 005e 1846     		mov	r0, r3
 1973 0060 2437     		adds	r7, r7, #36
 1974              	.LCFI83:
 1975              		.cfi_def_cfa_offset 4
 1976 0062 BD46     		mov	sp, r7
 1977              	.LCFI84:
 1978              		.cfi_def_cfa_register 13
 1979              		@ sp needed
 1980 0064 5DF8047B 		ldr	r7, [sp], #4
 1981              	.LCFI85:
 1982              		.cfi_restore 7
 1983              		.cfi_def_cfa_offset 0
 1984 0068 7047     		bx	lr
 1985              		.cfi_endproc
 1986              	.LFE253:
 1988              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 1989              		.align	1
 1990              		.global	HAL_CAN_GetRxMessage
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1995              	HAL_CAN_GetRxMessage:
 1996              	.LFB254:
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         of the Rx frame will be stored.
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo,
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                                        CAN_RxHeaderTypeDef *pHeader, uint8_t aData[])
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 1997              		.loc 1 1510 1
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 70


 2000              		@ frame_needed = 1, uses_anonymous_args = 0
 2001              		@ link register save eliminated.
 2002 0000 80B4     		push	{r7}
 2003              	.LCFI86:
 2004              		.cfi_def_cfa_offset 4
 2005              		.cfi_offset 7, -4
 2006 0002 87B0     		sub	sp, sp, #28
 2007              	.LCFI87:
 2008              		.cfi_def_cfa_offset 32
 2009 0004 00AF     		add	r7, sp, #0
 2010              	.LCFI88:
 2011              		.cfi_def_cfa_register 7
 2012 0006 F860     		str	r0, [r7, #12]
 2013 0008 B960     		str	r1, [r7, #8]
 2014 000a 7A60     		str	r2, [r7, #4]
 2015 000c 3B60     		str	r3, [r7]
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2016              		.loc 1 1511 24
 2017 000e FB68     		ldr	r3, [r7, #12]
 2018 0010 93F82030 		ldrb	r3, [r3, #32]
 2019 0014 FB75     		strb	r3, [r7, #23]
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2020              		.loc 1 1515 6
 2021 0016 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2022 0018 012B     		cmp	r3, #1
 2023 001a 03D0     		beq	.L99
 2024              		.loc 1 1515 38 discriminator 1
 2025 001c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2026 001e 022B     		cmp	r3, #2
 2027 0020 40F00381 		bne	.L100
 2028              	.L99:
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check the Rx FIFO */
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 2029              		.loc 1 1519 8
 2030 0024 BB68     		ldr	r3, [r7, #8]
 2031 0026 002B     		cmp	r3, #0
 2032 0028 0ED1     		bne	.L101
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
 2033              		.loc 1 1522 16
 2034 002a FB68     		ldr	r3, [r7, #12]
 2035 002c 1B68     		ldr	r3, [r3]
 2036              		.loc 1 1522 26
 2037 002e DB68     		ldr	r3, [r3, #12]
 2038              		.loc 1 1522 33
 2039 0030 03F00303 		and	r3, r3, #3
 2040              		.loc 1 1522 10
 2041 0034 002B     		cmp	r3, #0
 2042 0036 16D1     		bne	.L102
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 71


1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 2043              		.loc 1 1525 25
 2044 0038 FB68     		ldr	r3, [r7, #12]
 2045 003a 5B6A     		ldr	r3, [r3, #36]
 2046 003c 43F40012 		orr	r2, r3, #2097152
 2047 0040 FB68     		ldr	r3, [r7, #12]
 2048 0042 5A62     		str	r2, [r3, #36]
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 2049              		.loc 1 1527 16
 2050 0044 0123     		movs	r3, #1
 2051 0046 F7E0     		b	.L103
 2052              	.L101:
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
 2053              		.loc 1 1533 16
 2054 0048 FB68     		ldr	r3, [r7, #12]
 2055 004a 1B68     		ldr	r3, [r3]
 2056              		.loc 1 1533 26
 2057 004c 1B69     		ldr	r3, [r3, #16]
 2058              		.loc 1 1533 33
 2059 004e 03F00303 		and	r3, r3, #3
 2060              		.loc 1 1533 10
 2061 0052 002B     		cmp	r3, #0
 2062 0054 07D1     		bne	.L102
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Update error code */
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
 2063              		.loc 1 1536 25
 2064 0056 FB68     		ldr	r3, [r7, #12]
 2065 0058 5B6A     		ldr	r3, [r3, #36]
 2066 005a 43F40012 		orr	r2, r3, #2097152
 2067 005e FB68     		ldr	r3, [r7, #12]
 2068 0060 5A62     		str	r2, [r3, #36]
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         return HAL_ERROR;
 2069              		.loc 1 1538 16
 2070 0062 0123     		movs	r3, #1
 2071 0064 E8E0     		b	.L103
 2072              	.L102:
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the header */
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
 2073              		.loc 1 1543 39
 2074 0066 FB68     		ldr	r3, [r7, #12]
 2075 0068 1A68     		ldr	r2, [r3]
 2076              		.loc 1 1543 71
 2077 006a BB68     		ldr	r3, [r7, #8]
 2078 006c 1B33     		adds	r3, r3, #27
 2079 006e 1B01     		lsls	r3, r3, #4
 2080 0070 1344     		add	r3, r3, r2
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 72


 2081 0072 1B68     		ldr	r3, [r3]
 2082              		.loc 1 1543 33
 2083 0074 03F00402 		and	r2, r3, #4
 2084              		.loc 1 1543 18
 2085 0078 7B68     		ldr	r3, [r7, #4]
 2086 007a 9A60     		str	r2, [r3, #8]
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2087              		.loc 1 1544 16
 2088 007c 7B68     		ldr	r3, [r7, #4]
 2089 007e 9B68     		ldr	r3, [r3, #8]
 2090              		.loc 1 1544 8
 2091 0080 002B     		cmp	r3, #0
 2092 0082 0CD1     		bne	.L104
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
 2093              		.loc 1 1546 45
 2094 0084 FB68     		ldr	r3, [r7, #12]
 2095 0086 1A68     		ldr	r2, [r3]
 2096              		.loc 1 1546 77
 2097 0088 BB68     		ldr	r3, [r7, #8]
 2098 008a 1B33     		adds	r3, r3, #27
 2099 008c 1B01     		lsls	r3, r3, #4
 2100 008e 1344     		add	r3, r3, r2
 2101 0090 1B68     		ldr	r3, [r3]
 2102              		.loc 1 1546 83
 2103 0092 5B0D     		lsrs	r3, r3, #21
 2104 0094 C3F30A02 		ubfx	r2, r3, #0, #11
 2105              		.loc 1 1546 22
 2106 0098 7B68     		ldr	r3, [r7, #4]
 2107 009a 1A60     		str	r2, [r3]
 2108 009c 0BE0     		b	.L105
 2109              	.L104:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) &
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2110              		.loc 1 1551 29
 2111 009e FB68     		ldr	r3, [r7, #12]
 2112 00a0 1A68     		ldr	r2, [r3]
 2113              		.loc 1 1551 61
 2114 00a2 BB68     		ldr	r3, [r7, #8]
 2115 00a4 1B33     		adds	r3, r3, #27
 2116 00a6 1B01     		lsls	r3, r3, #4
 2117 00a8 1344     		add	r3, r3, r2
 2118 00aa 1B68     		ldr	r3, [r3]
 2119              		.loc 1 1551 67
 2120 00ac DB08     		lsrs	r3, r3, #3
 2121 00ae 23F06042 		bic	r2, r3, #-536870912
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                         hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_RI0R_EXID_Pos;
 2122              		.loc 1 1550 22
 2123 00b2 7B68     		ldr	r3, [r7, #4]
 2124 00b4 5A60     		str	r2, [r3, #4]
 2125              	.L105:
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
 2126              		.loc 1 1553 40
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 73


 2127 00b6 FB68     		ldr	r3, [r7, #12]
 2128 00b8 1A68     		ldr	r2, [r3]
 2129              		.loc 1 1553 72
 2130 00ba BB68     		ldr	r3, [r7, #8]
 2131 00bc 1B33     		adds	r3, r3, #27
 2132 00be 1B01     		lsls	r3, r3, #4
 2133 00c0 1344     		add	r3, r3, r2
 2134 00c2 1B68     		ldr	r3, [r3]
 2135              		.loc 1 1553 34
 2136 00c4 03F00202 		and	r2, r3, #2
 2137              		.loc 1 1553 18
 2138 00c8 7B68     		ldr	r3, [r7, #4]
 2139 00ca DA60     		str	r2, [r3, #12]
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (((CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos) >= 8U)
 2140              		.loc 1 1554 31
 2141 00cc FB68     		ldr	r3, [r7, #12]
 2142 00ce 1A68     		ldr	r2, [r3]
 2143              		.loc 1 1554 63
 2144 00d0 BB68     		ldr	r3, [r7, #8]
 2145 00d2 1B33     		adds	r3, r3, #27
 2146 00d4 1B01     		lsls	r3, r3, #4
 2147 00d6 1344     		add	r3, r3, r2
 2148 00d8 0433     		adds	r3, r3, #4
 2149 00da 1B68     		ldr	r3, [r3]
 2150              		.loc 1 1554 92
 2151 00dc 03F00803 		and	r3, r3, #8
 2152              		.loc 1 1554 8
 2153 00e0 002B     		cmp	r3, #0
 2154 00e2 03D0     		beq	.L106
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Truncate DLC to 8 if received field is over range */
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = 8U;
 2155              		.loc 1 1557 20
 2156 00e4 7B68     		ldr	r3, [r7, #4]
 2157 00e6 0822     		movs	r2, #8
 2158 00e8 1A61     		str	r2, [r3, #16]
 2159 00ea 0BE0     		b	.L107
 2160              	.L106:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_P
 2161              		.loc 1 1561 43
 2162 00ec FB68     		ldr	r3, [r7, #12]
 2163 00ee 1A68     		ldr	r2, [r3]
 2164              		.loc 1 1561 75
 2165 00f0 BB68     		ldr	r3, [r7, #8]
 2166 00f2 1B33     		adds	r3, r3, #27
 2167 00f4 1B01     		lsls	r3, r3, #4
 2168 00f6 1344     		add	r3, r3, r2
 2169 00f8 0433     		adds	r3, r3, #4
 2170 00fa 1B68     		ldr	r3, [r3]
 2171              		.loc 1 1561 82
 2172 00fc 03F00F02 		and	r2, r3, #15
 2173              		.loc 1 1561 20
 2174 0100 7B68     		ldr	r3, [r7, #4]
 2175 0102 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 74


 2176              	.L107:
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2177              		.loc 1 1563 54
 2178 0104 FB68     		ldr	r3, [r7, #12]
 2179 0106 1A68     		ldr	r2, [r3]
 2180              		.loc 1 1563 86
 2181 0108 BB68     		ldr	r3, [r7, #8]
 2182 010a 1B33     		adds	r3, r3, #27
 2183 010c 1B01     		lsls	r3, r3, #4
 2184 010e 1344     		add	r3, r3, r2
 2185 0110 0433     		adds	r3, r3, #4
 2186 0112 1B68     		ldr	r3, [r3]
 2187              		.loc 1 1563 93
 2188 0114 1B0A     		lsrs	r3, r3, #8
 2189 0116 DAB2     		uxtb	r2, r3
 2190              		.loc 1 1563 31
 2191 0118 7B68     		ldr	r3, [r7, #4]
 2192 011a 9A61     		str	r2, [r3, #24]
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2193              		.loc 1 1564 48
 2194 011c FB68     		ldr	r3, [r7, #12]
 2195 011e 1A68     		ldr	r2, [r3]
 2196              		.loc 1 1564 80
 2197 0120 BB68     		ldr	r3, [r7, #8]
 2198 0122 1B33     		adds	r3, r3, #27
 2199 0124 1B01     		lsls	r3, r3, #4
 2200 0126 1344     		add	r3, r3, r2
 2201 0128 0433     		adds	r3, r3, #4
 2202 012a 1B68     		ldr	r3, [r3]
 2203              		.loc 1 1564 87
 2204 012c 1B0C     		lsrs	r3, r3, #16
 2205 012e 9AB2     		uxth	r2, r3
 2206              		.loc 1 1564 24
 2207 0130 7B68     		ldr	r3, [r7, #4]
 2208 0132 5A61     		str	r2, [r3, #20]
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Get the data */
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2209              		.loc 1 1567 49
 2210 0134 FB68     		ldr	r3, [r7, #12]
 2211 0136 1A68     		ldr	r2, [r3]
 2212              		.loc 1 1567 81
 2213 0138 BB68     		ldr	r3, [r7, #8]
 2214 013a 1B01     		lsls	r3, r3, #4
 2215 013c 1344     		add	r3, r3, r2
 2216 013e 03F5DC73 		add	r3, r3, #440
 2217 0142 1B68     		ldr	r3, [r3]
 2218              		.loc 1 1567 16
 2219 0144 DAB2     		uxtb	r2, r3
 2220              		.loc 1 1567 14
 2221 0146 3B68     		ldr	r3, [r7]
 2222 0148 1A70     		strb	r2, [r3]
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2223              		.loc 1 1568 49
 2224 014a FB68     		ldr	r3, [r7, #12]
 2225 014c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 75


 2226              		.loc 1 1568 81
 2227 014e BB68     		ldr	r3, [r7, #8]
 2228 0150 1B01     		lsls	r3, r3, #4
 2229 0152 1344     		add	r3, r3, r2
 2230 0154 03F5DC73 		add	r3, r3, #440
 2231 0158 1B68     		ldr	r3, [r3]
 2232              		.loc 1 1568 88
 2233 015a 1A0A     		lsrs	r2, r3, #8
 2234              		.loc 1 1568 10
 2235 015c 3B68     		ldr	r3, [r7]
 2236 015e 0133     		adds	r3, r3, #1
 2237              		.loc 1 1568 16
 2238 0160 D2B2     		uxtb	r2, r2
 2239              		.loc 1 1568 14
 2240 0162 1A70     		strb	r2, [r3]
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2241              		.loc 1 1569 49
 2242 0164 FB68     		ldr	r3, [r7, #12]
 2243 0166 1A68     		ldr	r2, [r3]
 2244              		.loc 1 1569 81
 2245 0168 BB68     		ldr	r3, [r7, #8]
 2246 016a 1B01     		lsls	r3, r3, #4
 2247 016c 1344     		add	r3, r3, r2
 2248 016e 03F5DC73 		add	r3, r3, #440
 2249 0172 1B68     		ldr	r3, [r3]
 2250              		.loc 1 1569 88
 2251 0174 1A0C     		lsrs	r2, r3, #16
 2252              		.loc 1 1569 10
 2253 0176 3B68     		ldr	r3, [r7]
 2254 0178 0233     		adds	r3, r3, #2
 2255              		.loc 1 1569 16
 2256 017a D2B2     		uxtb	r2, r2
 2257              		.loc 1 1569 14
 2258 017c 1A70     		strb	r2, [r3]
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2259              		.loc 1 1570 49
 2260 017e FB68     		ldr	r3, [r7, #12]
 2261 0180 1A68     		ldr	r2, [r3]
 2262              		.loc 1 1570 81
 2263 0182 BB68     		ldr	r3, [r7, #8]
 2264 0184 1B01     		lsls	r3, r3, #4
 2265 0186 1344     		add	r3, r3, r2
 2266 0188 03F5DC73 		add	r3, r3, #440
 2267 018c 1B68     		ldr	r3, [r3]
 2268              		.loc 1 1570 88
 2269 018e 1A0E     		lsrs	r2, r3, #24
 2270              		.loc 1 1570 10
 2271 0190 3B68     		ldr	r3, [r7]
 2272 0192 0333     		adds	r3, r3, #3
 2273              		.loc 1 1570 16
 2274 0194 D2B2     		uxtb	r2, r2
 2275              		.loc 1 1570 14
 2276 0196 1A70     		strb	r2, [r3]
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2277              		.loc 1 1571 49
 2278 0198 FB68     		ldr	r3, [r7, #12]
 2279 019a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 76


 2280              		.loc 1 1571 81
 2281 019c BB68     		ldr	r3, [r7, #8]
 2282 019e 1B01     		lsls	r3, r3, #4
 2283 01a0 1344     		add	r3, r3, r2
 2284 01a2 03F5DE73 		add	r3, r3, #444
 2285 01a6 1A68     		ldr	r2, [r3]
 2286              		.loc 1 1571 10
 2287 01a8 3B68     		ldr	r3, [r7]
 2288 01aa 0433     		adds	r3, r3, #4
 2289              		.loc 1 1571 16
 2290 01ac D2B2     		uxtb	r2, r2
 2291              		.loc 1 1571 14
 2292 01ae 1A70     		strb	r2, [r3]
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2293              		.loc 1 1572 49
 2294 01b0 FB68     		ldr	r3, [r7, #12]
 2295 01b2 1A68     		ldr	r2, [r3]
 2296              		.loc 1 1572 81
 2297 01b4 BB68     		ldr	r3, [r7, #8]
 2298 01b6 1B01     		lsls	r3, r3, #4
 2299 01b8 1344     		add	r3, r3, r2
 2300 01ba 03F5DE73 		add	r3, r3, #444
 2301 01be 1B68     		ldr	r3, [r3]
 2302              		.loc 1 1572 88
 2303 01c0 1A0A     		lsrs	r2, r3, #8
 2304              		.loc 1 1572 10
 2305 01c2 3B68     		ldr	r3, [r7]
 2306 01c4 0533     		adds	r3, r3, #5
 2307              		.loc 1 1572 16
 2308 01c6 D2B2     		uxtb	r2, r2
 2309              		.loc 1 1572 14
 2310 01c8 1A70     		strb	r2, [r3]
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2311              		.loc 1 1573 49
 2312 01ca FB68     		ldr	r3, [r7, #12]
 2313 01cc 1A68     		ldr	r2, [r3]
 2314              		.loc 1 1573 81
 2315 01ce BB68     		ldr	r3, [r7, #8]
 2316 01d0 1B01     		lsls	r3, r3, #4
 2317 01d2 1344     		add	r3, r3, r2
 2318 01d4 03F5DE73 		add	r3, r3, #444
 2319 01d8 1B68     		ldr	r3, [r3]
 2320              		.loc 1 1573 88
 2321 01da 1A0C     		lsrs	r2, r3, #16
 2322              		.loc 1 1573 10
 2323 01dc 3B68     		ldr	r3, [r7]
 2324 01de 0633     		adds	r3, r3, #6
 2325              		.loc 1 1573 16
 2326 01e0 D2B2     		uxtb	r2, r2
 2327              		.loc 1 1573 14
 2328 01e2 1A70     		strb	r2, [r3]
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2329              		.loc 1 1574 49
 2330 01e4 FB68     		ldr	r3, [r7, #12]
 2331 01e6 1A68     		ldr	r2, [r3]
 2332              		.loc 1 1574 81
 2333 01e8 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 77


 2334 01ea 1B01     		lsls	r3, r3, #4
 2335 01ec 1344     		add	r3, r3, r2
 2336 01ee 03F5DE73 		add	r3, r3, #444
 2337 01f2 1B68     		ldr	r3, [r3]
 2338              		.loc 1 1574 88
 2339 01f4 1A0E     		lsrs	r2, r3, #24
 2340              		.loc 1 1574 10
 2341 01f6 3B68     		ldr	r3, [r7]
 2342 01f8 0733     		adds	r3, r3, #7
 2343              		.loc 1 1574 16
 2344 01fa D2B2     		uxtb	r2, r2
 2345              		.loc 1 1574 14
 2346 01fc 1A70     		strb	r2, [r3]
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Release the FIFO */
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
 2347              		.loc 1 1577 8
 2348 01fe BB68     		ldr	r3, [r7, #8]
 2349 0200 002B     		cmp	r3, #0
 2350 0202 08D1     		bne	.L108
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 0 */
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
 2351              		.loc 1 1580 7
 2352 0204 FB68     		ldr	r3, [r7, #12]
 2353 0206 1B68     		ldr	r3, [r3]
 2354 0208 DA68     		ldr	r2, [r3, #12]
 2355 020a FB68     		ldr	r3, [r7, #12]
 2356 020c 1B68     		ldr	r3, [r3]
 2357 020e 42F02002 		orr	r2, r2, #32
 2358 0212 DA60     		str	r2, [r3, #12]
 2359 0214 07E0     		b	.L109
 2360              	.L108:
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Release RX FIFO 1 */
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
 2361              		.loc 1 1585 7
 2362 0216 FB68     		ldr	r3, [r7, #12]
 2363 0218 1B68     		ldr	r3, [r3]
 2364 021a 1A69     		ldr	r2, [r3, #16]
 2365 021c FB68     		ldr	r3, [r7, #12]
 2366 021e 1B68     		ldr	r3, [r3]
 2367 0220 42F02002 		orr	r2, r2, #32
 2368 0224 1A61     		str	r2, [r3, #16]
 2369              	.L109:
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2370              		.loc 1 1589 12
 2371 0226 0023     		movs	r3, #0
 2372 0228 06E0     		b	.L103
 2373              	.L100:
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 78


1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2374              		.loc 1 1594 21
 2375 022a FB68     		ldr	r3, [r7, #12]
 2376 022c 5B6A     		ldr	r3, [r3, #36]
 2377 022e 43F48022 		orr	r2, r3, #262144
 2378 0232 FB68     		ldr	r3, [r7, #12]
 2379 0234 5A62     		str	r2, [r3, #36]
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2380              		.loc 1 1596 12
 2381 0236 0123     		movs	r3, #1
 2382              	.L103:
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2383              		.loc 1 1598 1
 2384 0238 1846     		mov	r0, r3
 2385 023a 1C37     		adds	r7, r7, #28
 2386              	.LCFI89:
 2387              		.cfi_def_cfa_offset 4
 2388 023c BD46     		mov	sp, r7
 2389              	.LCFI90:
 2390              		.cfi_def_cfa_register 13
 2391              		@ sp needed
 2392 023e 5DF8047B 		ldr	r7, [sp], #4
 2393              	.LCFI91:
 2394              		.cfi_restore 7
 2395              		.cfi_def_cfa_offset 0
 2396 0242 7047     		bx	lr
 2397              		.cfi_endproc
 2398              	.LFE254:
 2400              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 2401              		.align	1
 2402              		.global	HAL_CAN_GetRxFifoFillLevel
 2403              		.syntax unified
 2404              		.thumb
 2405              		.thumb_func
 2407              	HAL_CAN_GetRxFifoFillLevel:
 2408              	.LFB255:
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(const CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2409              		.loc 1 1609 1
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 16
 2412              		@ frame_needed = 1, uses_anonymous_args = 0
 2413              		@ link register save eliminated.
 2414 0000 80B4     		push	{r7}
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 79


 2415              	.LCFI92:
 2416              		.cfi_def_cfa_offset 4
 2417              		.cfi_offset 7, -4
 2418 0002 85B0     		sub	sp, sp, #20
 2419              	.LCFI93:
 2420              		.cfi_def_cfa_offset 24
 2421 0004 00AF     		add	r7, sp, #0
 2422              	.LCFI94:
 2423              		.cfi_def_cfa_register 7
 2424 0006 7860     		str	r0, [r7, #4]
 2425 0008 3960     		str	r1, [r7]
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t filllevel = 0U;
 2426              		.loc 1 1610 12
 2427 000a 0023     		movs	r3, #0
 2428 000c FB60     		str	r3, [r7, #12]
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2429              		.loc 1 1611 24
 2430 000e 7B68     		ldr	r3, [r7, #4]
 2431 0010 93F82030 		ldrb	r3, [r3, #32]
 2432 0014 FB72     		strb	r3, [r7, #11]
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2433              		.loc 1 1616 6
 2434 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2435 0018 012B     		cmp	r3, #1
 2436 001a 02D0     		beq	.L111
 2437              		.loc 1 1616 38 discriminator 1
 2438 001c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 2439 001e 022B     		cmp	r3, #2
 2440 0020 0FD1     		bne	.L112
 2441              	.L111:
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
 2442              		.loc 1 1619 8
 2443 0022 3B68     		ldr	r3, [r7]
 2444 0024 002B     		cmp	r3, #0
 2445 0026 06D1     		bne	.L113
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
 2446              		.loc 1 1621 23
 2447 0028 7B68     		ldr	r3, [r7, #4]
 2448 002a 1B68     		ldr	r3, [r3]
 2449              		.loc 1 1621 33
 2450 002c DB68     		ldr	r3, [r3, #12]
 2451              		.loc 1 1621 17
 2452 002e 03F00303 		and	r3, r3, #3
 2453 0032 FB60     		str	r3, [r7, #12]
 2454 0034 05E0     		b	.L112
 2455              	.L113:
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 80


 2456              		.loc 1 1625 23
 2457 0036 7B68     		ldr	r3, [r7, #4]
 2458 0038 1B68     		ldr	r3, [r3]
 2459              		.loc 1 1625 33
 2460 003a 1B69     		ldr	r3, [r3, #16]
 2461              		.loc 1 1625 17
 2462 003c 03F00303 		and	r3, r3, #3
 2463 0040 FB60     		str	r3, [r7, #12]
 2464              	.L112:
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return Rx FIFO fill level */
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return filllevel;
 2465              		.loc 1 1630 10
 2466 0042 FB68     		ldr	r3, [r7, #12]
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2467              		.loc 1 1631 1
 2468 0044 1846     		mov	r0, r3
 2469 0046 1437     		adds	r7, r7, #20
 2470              	.LCFI95:
 2471              		.cfi_def_cfa_offset 4
 2472 0048 BD46     		mov	sp, r7
 2473              	.LCFI96:
 2474              		.cfi_def_cfa_register 13
 2475              		@ sp needed
 2476 004a 5DF8047B 		ldr	r7, [sp], #4
 2477              	.LCFI97:
 2478              		.cfi_restore 7
 2479              		.cfi_def_cfa_offset 0
 2480 004e 7047     		bx	lr
 2481              		.cfi_endproc
 2482              	.LFE255:
 2484              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2485              		.align	1
 2486              		.global	HAL_CAN_ActivateNotification
 2487              		.syntax unified
 2488              		.thumb
 2489              		.thumb_func
 2491              	HAL_CAN_ActivateNotification:
 2492              	.LFB256:
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief    Interrupts management
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                        ##### Interrupts management #####
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]  This section provides functions allowing to:
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 81


1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Enable interrupts.
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2493              		.loc 1 1662 1
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 16
 2496              		@ frame_needed = 1, uses_anonymous_args = 0
 2497              		@ link register save eliminated.
 2498 0000 80B4     		push	{r7}
 2499              	.LCFI98:
 2500              		.cfi_def_cfa_offset 4
 2501              		.cfi_offset 7, -4
 2502 0002 85B0     		sub	sp, sp, #20
 2503              	.LCFI99:
 2504              		.cfi_def_cfa_offset 24
 2505 0004 00AF     		add	r7, sp, #0
 2506              	.LCFI100:
 2507              		.cfi_def_cfa_register 7
 2508 0006 7860     		str	r0, [r7, #4]
 2509 0008 3960     		str	r1, [r7]
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2510              		.loc 1 1663 24
 2511 000a 7B68     		ldr	r3, [r7, #4]
 2512 000c 93F82030 		ldrb	r3, [r3, #32]
 2513 0010 FB73     		strb	r3, [r7, #15]
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2514              		.loc 1 1668 6
 2515 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2516 0014 012B     		cmp	r3, #1
 2517 0016 02D0     		beq	.L116
 2518              		.loc 1 1668 38 discriminator 1
 2519 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2520 001a 022B     		cmp	r3, #2
 2521 001c 09D1     		bne	.L117
 2522              	.L116:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Enable the selected interrupts */
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
 2523              		.loc 1 1672 5
 2524 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 82


 2525 0020 1B68     		ldr	r3, [r3]
 2526 0022 5969     		ldr	r1, [r3, #20]
 2527 0024 7B68     		ldr	r3, [r7, #4]
 2528 0026 1B68     		ldr	r3, [r3]
 2529 0028 3A68     		ldr	r2, [r7]
 2530 002a 0A43     		orrs	r2, r2, r1
 2531 002c 5A61     		str	r2, [r3, #20]
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2532              		.loc 1 1675 12
 2533 002e 0023     		movs	r3, #0
 2534 0030 06E0     		b	.L118
 2535              	.L117:
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2536              		.loc 1 1680 21
 2537 0032 7B68     		ldr	r3, [r7, #4]
 2538 0034 5B6A     		ldr	r3, [r3, #36]
 2539 0036 43F48022 		orr	r2, r3, #262144
 2540 003a 7B68     		ldr	r3, [r7, #4]
 2541 003c 5A62     		str	r2, [r3, #36]
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2542              		.loc 1 1682 12
 2543 003e 0123     		movs	r3, #1
 2544              	.L118:
1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2545              		.loc 1 1684 1
 2546 0040 1846     		mov	r0, r3
 2547 0042 1437     		adds	r7, r7, #20
 2548              	.LCFI101:
 2549              		.cfi_def_cfa_offset 4
 2550 0044 BD46     		mov	sp, r7
 2551              	.LCFI102:
 2552              		.cfi_def_cfa_register 13
 2553              		@ sp needed
 2554 0046 5DF8047B 		ldr	r7, [sp], #4
 2555              	.LCFI103:
 2556              		.cfi_restore 7
 2557              		.cfi_def_cfa_offset 0
 2558 004a 7047     		bx	lr
 2559              		.cfi_endproc
 2560              	.LFE256:
 2562              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2563              		.align	1
 2564              		.global	HAL_CAN_DeactivateNotification
 2565              		.syntax unified
 2566              		.thumb
 2567              		.thumb_func
 2569              	HAL_CAN_DeactivateNotification:
 2570              	.LFB257:
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 83


1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Disable interrupts.
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2571              		.loc 1 1695 1
 2572              		.cfi_startproc
 2573              		@ args = 0, pretend = 0, frame = 16
 2574              		@ frame_needed = 1, uses_anonymous_args = 0
 2575              		@ link register save eliminated.
 2576 0000 80B4     		push	{r7}
 2577              	.LCFI104:
 2578              		.cfi_def_cfa_offset 4
 2579              		.cfi_offset 7, -4
 2580 0002 85B0     		sub	sp, sp, #20
 2581              	.LCFI105:
 2582              		.cfi_def_cfa_offset 24
 2583 0004 00AF     		add	r7, sp, #0
 2584              	.LCFI106:
 2585              		.cfi_def_cfa_register 7
 2586 0006 7860     		str	r0, [r7, #4]
 2587 0008 3960     		str	r1, [r7]
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2588              		.loc 1 1696 24
 2589 000a 7B68     		ldr	r3, [r7, #4]
 2590 000c 93F82030 		ldrb	r3, [r3, #32]
 2591 0010 FB73     		strb	r3, [r7, #15]
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Check function parameters */
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 2592              		.loc 1 1701 6
 2593 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2594 0014 012B     		cmp	r3, #1
 2595 0016 02D0     		beq	.L120
 2596              		.loc 1 1701 38 discriminator 1
 2597 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2598 001a 022B     		cmp	r3, #2
 2599 001c 0AD1     		bne	.L121
 2600              	.L120:
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Disable the selected interrupts */
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
 2601              		.loc 1 1705 5
 2602 001e 7B68     		ldr	r3, [r7, #4]
 2603 0020 1B68     		ldr	r3, [r3]
 2604 0022 5969     		ldr	r1, [r3, #20]
 2605 0024 3B68     		ldr	r3, [r7]
 2606 0026 DA43     		mvns	r2, r3
 2607 0028 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 84


 2608 002a 1B68     		ldr	r3, [r3]
 2609 002c 0A40     		ands	r2, r2, r1
 2610 002e 5A61     		str	r2, [r3, #20]
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Return function status */
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_OK;
 2611              		.loc 1 1708 12
 2612 0030 0023     		movs	r3, #0
 2613 0032 06E0     		b	.L122
 2614              	.L121:
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 2615              		.loc 1 1713 21
 2616 0034 7B68     		ldr	r3, [r7, #4]
 2617 0036 5B6A     		ldr	r3, [r3, #36]
 2618 0038 43F48022 		orr	r2, r3, #262144
 2619 003c 7B68     		ldr	r3, [r7, #4]
 2620 003e 5A62     		str	r2, [r3, #36]
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     return HAL_ERROR;
 2621              		.loc 1 1715 12
 2622 0040 0123     		movs	r3, #1
 2623              	.L122:
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 2624              		.loc 1 1717 1
 2625 0042 1846     		mov	r0, r3
 2626 0044 1437     		adds	r7, r7, #20
 2627              	.LCFI107:
 2628              		.cfi_def_cfa_offset 4
 2629 0046 BD46     		mov	sp, r7
 2630              	.LCFI108:
 2631              		.cfi_def_cfa_register 13
 2632              		@ sp needed
 2633 0048 5DF8047B 		ldr	r7, [sp], #4
 2634              	.LCFI109:
 2635              		.cfi_restore 7
 2636              		.cfi_def_cfa_offset 0
 2637 004c 7047     		bx	lr
 2638              		.cfi_endproc
 2639              	.LFE257:
 2641              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2642              		.align	1
 2643              		.global	HAL_CAN_IRQHandler
 2644              		.syntax unified
 2645              		.thumb
 2646              		.thumb_func
 2648              	HAL_CAN_IRQHandler:
 2649              	.LFB258:
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 85


1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 2650              		.loc 1 1726 1
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 40
 2653              		@ frame_needed = 1, uses_anonymous_args = 0
 2654 0000 80B5     		push	{r7, lr}
 2655              	.LCFI110:
 2656              		.cfi_def_cfa_offset 8
 2657              		.cfi_offset 7, -8
 2658              		.cfi_offset 14, -4
 2659 0002 8AB0     		sub	sp, sp, #40
 2660              	.LCFI111:
 2661              		.cfi_def_cfa_offset 48
 2662 0004 00AF     		add	r7, sp, #0
 2663              	.LCFI112:
 2664              		.cfi_def_cfa_register 7
 2665 0006 7860     		str	r0, [r7, #4]
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2666              		.loc 1 1727 12
 2667 0008 0023     		movs	r3, #0
 2668 000a 7B62     		str	r3, [r7, #36]
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 2669              		.loc 1 1728 25
 2670 000c 7B68     		ldr	r3, [r7, #4]
 2671 000e 1B68     		ldr	r3, [r3]
 2672              		.loc 1 1728 12
 2673 0010 5B69     		ldr	r3, [r3, #20]
 2674 0012 3B62     		str	r3, [r7, #32]
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 2675              		.loc 1 1729 23
 2676 0014 7B68     		ldr	r3, [r7, #4]
 2677 0016 1B68     		ldr	r3, [r3]
 2678              		.loc 1 1729 12
 2679 0018 5B68     		ldr	r3, [r3, #4]
 2680 001a FB61     		str	r3, [r7, #28]
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 2681              		.loc 1 1730 23
 2682 001c 7B68     		ldr	r3, [r7, #4]
 2683 001e 1B68     		ldr	r3, [r3]
 2684              		.loc 1 1730 12
 2685 0020 9B68     		ldr	r3, [r3, #8]
 2686 0022 BB61     		str	r3, [r7, #24]
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 2687              		.loc 1 1731 24
 2688 0024 7B68     		ldr	r3, [r7, #4]
 2689 0026 1B68     		ldr	r3, [r3]
 2690              		.loc 1 1731 12
 2691 0028 DB68     		ldr	r3, [r3, #12]
 2692 002a 7B61     		str	r3, [r7, #20]
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 2693              		.loc 1 1732 24
 2694 002c 7B68     		ldr	r3, [r7, #4]
 2695 002e 1B68     		ldr	r3, [r3]
 2696              		.loc 1 1732 12
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 86


 2697 0030 1B69     		ldr	r3, [r3, #16]
 2698 0032 3B61     		str	r3, [r7, #16]
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 2699              		.loc 1 1733 23
 2700 0034 7B68     		ldr	r3, [r7, #4]
 2701 0036 1B68     		ldr	r3, [r3]
 2702              		.loc 1 1733 12
 2703 0038 9B69     		ldr	r3, [r3, #24]
 2704 003a FB60     		str	r3, [r7, #12]
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
 2705              		.loc 1 1736 19
 2706 003c 3B6A     		ldr	r3, [r7, #32]
 2707 003e 03F00103 		and	r3, r3, #1
 2708              		.loc 1 1736 6
 2709 0042 002B     		cmp	r3, #0
 2710 0044 7CD0     		beq	.L124
1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
 2711              		.loc 1 1739 19
 2712 0046 BB69     		ldr	r3, [r7, #24]
 2713 0048 03F00103 		and	r3, r3, #1
 2714              		.loc 1 1739 8
 2715 004c 002B     		cmp	r3, #0
 2716 004e 23D0     		beq	.L125
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
 2717              		.loc 1 1742 7
 2718 0050 7B68     		ldr	r3, [r7, #4]
 2719 0052 1B68     		ldr	r3, [r3]
 2720 0054 0122     		movs	r2, #1
 2721 0056 9A60     		str	r2, [r3, #8]
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
 2722              		.loc 1 1744 21
 2723 0058 BB69     		ldr	r3, [r7, #24]
 2724 005a 03F00203 		and	r3, r3, #2
 2725              		.loc 1 1744 10
 2726 005e 002B     		cmp	r3, #0
 2727 0060 03D0     		beq	.L126
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
 2728              		.loc 1 1752 9
 2729 0062 7868     		ldr	r0, [r7, #4]
 2730 0064 FFF7FEFF 		bl	HAL_CAN_TxMailbox0CompleteCallback
 2731 0068 16E0     		b	.L125
 2732              	.L126:
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 87


1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
 2733              		.loc 1 1757 23
 2734 006a BB69     		ldr	r3, [r7, #24]
 2735 006c 03F00403 		and	r3, r3, #4
 2736              		.loc 1 1757 12
 2737 0070 002B     		cmp	r3, #0
 2738 0072 04D0     		beq	.L127
1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
 2739              		.loc 1 1760 21
 2740 0074 7B6A     		ldr	r3, [r7, #36]
 2741 0076 43F40063 		orr	r3, r3, #2048
 2742 007a 7B62     		str	r3, [r7, #36]
 2743 007c 0CE0     		b	.L125
 2744              	.L127:
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
 2745              		.loc 1 1762 28
 2746 007e BB69     		ldr	r3, [r7, #24]
 2747 0080 03F00803 		and	r3, r3, #8
 2748              		.loc 1 1762 17
 2749 0084 002B     		cmp	r3, #0
 2750 0086 04D0     		beq	.L128
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
 2751              		.loc 1 1765 21
 2752 0088 7B6A     		ldr	r3, [r7, #36]
 2753 008a 43F48053 		orr	r3, r3, #4096
 2754 008e 7B62     		str	r3, [r7, #36]
 2755 0090 02E0     		b	.L125
 2756              	.L128:
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
 2757              		.loc 1 1775 11
 2758 0092 7868     		ldr	r0, [r7, #4]
 2759 0094 FFF7FEFF 		bl	HAL_CAN_TxMailbox0AbortCallback
 2760              	.L125:
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 88


 2761              		.loc 1 1782 19
 2762 0098 BB69     		ldr	r3, [r7, #24]
 2763 009a 03F48073 		and	r3, r3, #256
 2764              		.loc 1 1782 8
 2765 009e 002B     		cmp	r3, #0
 2766 00a0 24D0     		beq	.L129
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
 2767              		.loc 1 1785 7
 2768 00a2 7B68     		ldr	r3, [r7, #4]
 2769 00a4 1B68     		ldr	r3, [r3]
 2770 00a6 4FF48072 		mov	r2, #256
 2771 00aa 9A60     		str	r2, [r3, #8]
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
 2772              		.loc 1 1787 21
 2773 00ac BB69     		ldr	r3, [r7, #24]
 2774 00ae 03F40073 		and	r3, r3, #512
 2775              		.loc 1 1787 10
 2776 00b2 002B     		cmp	r3, #0
 2777 00b4 03D0     		beq	.L130
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
 2778              		.loc 1 1795 9
 2779 00b6 7868     		ldr	r0, [r7, #4]
 2780 00b8 FFF7FEFF 		bl	HAL_CAN_TxMailbox1CompleteCallback
 2781 00bc 16E0     		b	.L129
 2782              	.L130:
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
 2783              		.loc 1 1800 23
 2784 00be BB69     		ldr	r3, [r7, #24]
 2785 00c0 03F48063 		and	r3, r3, #1024
 2786              		.loc 1 1800 12
 2787 00c4 002B     		cmp	r3, #0
 2788 00c6 04D0     		beq	.L131
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
 2789              		.loc 1 1803 21
 2790 00c8 7B6A     		ldr	r3, [r7, #36]
 2791 00ca 43F40053 		orr	r3, r3, #8192
 2792 00ce 7B62     		str	r3, [r7, #36]
 2793 00d0 0CE0     		b	.L129
 2794              	.L131:
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 89


 2795              		.loc 1 1805 28
 2796 00d2 BB69     		ldr	r3, [r7, #24]
 2797 00d4 03F40063 		and	r3, r3, #2048
 2798              		.loc 1 1805 17
 2799 00d8 002B     		cmp	r3, #0
 2800 00da 04D0     		beq	.L132
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
 2801              		.loc 1 1808 21
 2802 00dc 7B6A     		ldr	r3, [r7, #36]
 2803 00de 43F48043 		orr	r3, r3, #16384
 2804 00e2 7B62     		str	r3, [r7, #36]
 2805 00e4 02E0     		b	.L129
 2806              	.L132:
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
 2807              		.loc 1 1818 11
 2808 00e6 7868     		ldr	r0, [r7, #4]
 2809 00e8 FFF7FEFF 		bl	HAL_CAN_TxMailbox1AbortCallback
 2810              	.L129:
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
 2811              		.loc 1 1825 19
 2812 00ec BB69     		ldr	r3, [r7, #24]
 2813 00ee 03F48033 		and	r3, r3, #65536
 2814              		.loc 1 1825 8
 2815 00f2 002B     		cmp	r3, #0
 2816 00f4 24D0     		beq	.L124
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
 2817              		.loc 1 1828 7
 2818 00f6 7B68     		ldr	r3, [r7, #4]
 2819 00f8 1B68     		ldr	r3, [r3]
 2820 00fa 4FF48032 		mov	r2, #65536
 2821 00fe 9A60     		str	r2, [r3, #8]
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
 2822              		.loc 1 1830 21
 2823 0100 BB69     		ldr	r3, [r7, #24]
 2824 0102 03F40033 		and	r3, r3, #131072
 2825              		.loc 1 1830 10
 2826 0106 002B     		cmp	r3, #0
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 90


 2827 0108 03D0     		beq	.L133
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call registered callback*/
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Call weak (surcharged) callback */
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
 2828              		.loc 1 1838 9
 2829 010a 7868     		ldr	r0, [r7, #4]
 2830 010c FFF7FEFF 		bl	HAL_CAN_TxMailbox2CompleteCallback
 2831 0110 16E0     		b	.L124
 2832              	.L133:
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       else
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
 2833              		.loc 1 1843 23
 2834 0112 BB69     		ldr	r3, [r7, #24]
 2835 0114 03F48023 		and	r3, r3, #262144
 2836              		.loc 1 1843 12
 2837 0118 002B     		cmp	r3, #0
 2838 011a 04D0     		beq	.L134
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
 2839              		.loc 1 1846 21
 2840 011c 7B6A     		ldr	r3, [r7, #36]
 2841 011e 43F40043 		orr	r3, r3, #32768
 2842 0122 7B62     		str	r3, [r7, #36]
 2843 0124 0CE0     		b	.L124
 2844              	.L134:
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
 2845              		.loc 1 1848 28
 2846 0126 BB69     		ldr	r3, [r7, #24]
 2847 0128 03F40023 		and	r3, r3, #524288
 2848              		.loc 1 1848 17
 2849 012c 002B     		cmp	r3, #0
 2850 012e 04D0     		beq	.L135
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Update error code */
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
 2851              		.loc 1 1851 21
 2852 0130 7B6A     		ldr	r3, [r7, #36]
 2853 0132 43F48033 		orr	r3, r3, #65536
 2854 0136 7B62     		str	r3, [r7, #36]
 2855 0138 02E0     		b	.L124
 2856              	.L135:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         else
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call registered callback*/
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 91


1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           /* Call weak (surcharged) callback */
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
 2857              		.loc 1 1861 11
 2858 013a 7868     		ldr	r0, [r7, #4]
 2859 013c FFF7FEFF 		bl	HAL_CAN_TxMailbox2AbortCallback
 2860              	.L124:
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
 2861              		.loc 1 1869 19
 2862 0140 3B6A     		ldr	r3, [r7, #32]
 2863 0142 03F00803 		and	r3, r3, #8
 2864              		.loc 1 1869 6
 2865 0146 002B     		cmp	r3, #0
 2866 0148 0CD0     		beq	.L136
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
 2867              		.loc 1 1871 20
 2868 014a 7B69     		ldr	r3, [r7, #20]
 2869 014c 03F01003 		and	r3, r3, #16
 2870              		.loc 1 1871 8
 2871 0150 002B     		cmp	r3, #0
 2872 0152 07D0     		beq	.L136
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
 2873              		.loc 1 1874 17
 2874 0154 7B6A     		ldr	r3, [r7, #36]
 2875 0156 43F40073 		orr	r3, r3, #512
 2876 015a 7B62     		str	r3, [r7, #36]
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
 2877              		.loc 1 1877 7
 2878 015c 7B68     		ldr	r3, [r7, #4]
 2879 015e 1B68     		ldr	r3, [r3]
 2880 0160 1022     		movs	r2, #16
 2881 0162 DA60     		str	r2, [r3, #12]
 2882              	.L136:
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
 2883              		.loc 1 1882 19
 2884 0164 3B6A     		ldr	r3, [r7, #32]
 2885 0166 03F00403 		and	r3, r3, #4
 2886              		.loc 1 1882 6
 2887 016a 002B     		cmp	r3, #0
 2888 016c 0BD0     		beq	.L137
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 92


1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
 2889              		.loc 1 1884 20
 2890 016e 7B69     		ldr	r3, [r7, #20]
 2891 0170 03F00803 		and	r3, r3, #8
 2892              		.loc 1 1884 8
 2893 0174 002B     		cmp	r3, #0
 2894 0176 06D0     		beq	.L137
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
 2895              		.loc 1 1887 7
 2896 0178 7B68     		ldr	r3, [r7, #4]
 2897 017a 1B68     		ldr	r3, [r3]
 2898 017c 0822     		movs	r2, #8
 2899 017e DA60     		str	r2, [r3, #12]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
 2900              		.loc 1 1895 7
 2901 0180 7868     		ldr	r0, [r7, #4]
 2902 0182 FFF7FEFF 		bl	HAL_CAN_RxFifo0FullCallback
 2903              	.L137:
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
 2904              		.loc 1 1901 19
 2905 0186 3B6A     		ldr	r3, [r7, #32]
 2906 0188 03F00203 		and	r3, r3, #2
 2907              		.loc 1 1901 6
 2908 018c 002B     		cmp	r3, #0
 2909 018e 09D0     		beq	.L138
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
 2910              		.loc 1 1904 14
 2911 0190 7B68     		ldr	r3, [r7, #4]
 2912 0192 1B68     		ldr	r3, [r3]
 2913              		.loc 1 1904 24
 2914 0194 DB68     		ldr	r3, [r3, #12]
 2915              		.loc 1 1904 31
 2916 0196 03F00303 		and	r3, r3, #3
 2917              		.loc 1 1904 8
 2918 019a 002B     		cmp	r3, #0
 2919 019c 02D0     		beq	.L138
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 0 message pending Callback */
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 93


1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
 2920              		.loc 1 1912 7
 2921 019e 7868     		ldr	r0, [r7, #4]
 2922 01a0 FFF7FEFF 		bl	HAL_CAN_RxFifo0MsgPendingCallback
 2923              	.L138:
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
 2924              		.loc 1 1918 19
 2925 01a4 3B6A     		ldr	r3, [r7, #32]
 2926 01a6 03F04003 		and	r3, r3, #64
 2927              		.loc 1 1918 6
 2928 01aa 002B     		cmp	r3, #0
 2929 01ac 0CD0     		beq	.L139
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
 2930              		.loc 1 1920 20
 2931 01ae 3B69     		ldr	r3, [r7, #16]
 2932 01b0 03F01003 		and	r3, r3, #16
 2933              		.loc 1 1920 8
 2934 01b4 002B     		cmp	r3, #0
 2935 01b6 07D0     		beq	.L139
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
 2936              		.loc 1 1923 17
 2937 01b8 7B6A     		ldr	r3, [r7, #36]
 2938 01ba 43F48063 		orr	r3, r3, #1024
 2939 01be 7B62     		str	r3, [r7, #36]
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
 2940              		.loc 1 1926 7
 2941 01c0 7B68     		ldr	r3, [r7, #4]
 2942 01c2 1B68     		ldr	r3, [r3]
 2943 01c4 1022     		movs	r2, #16
 2944 01c6 1A61     		str	r2, [r3, #16]
 2945              	.L139:
1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
 2946              		.loc 1 1931 19
 2947 01c8 3B6A     		ldr	r3, [r7, #32]
 2948 01ca 03F02003 		and	r3, r3, #32
 2949              		.loc 1 1931 6
 2950 01ce 002B     		cmp	r3, #0
 2951 01d0 0BD0     		beq	.L140
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 94


 2952              		.loc 1 1933 20
 2953 01d2 3B69     		ldr	r3, [r7, #16]
 2954 01d4 03F00803 		and	r3, r3, #8
 2955              		.loc 1 1933 8
 2956 01d8 002B     		cmp	r3, #0
 2957 01da 06D0     		beq	.L140
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
 2958              		.loc 1 1936 7
 2959 01dc 7B68     		ldr	r3, [r7, #4]
 2960 01de 1B68     		ldr	r3, [r3]
 2961 01e0 0822     		movs	r2, #8
 2962 01e2 1A61     		str	r2, [r3, #16]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
 2963              		.loc 1 1944 7
 2964 01e4 7868     		ldr	r0, [r7, #4]
 2965 01e6 FFF7FEFF 		bl	HAL_CAN_RxFifo1FullCallback
 2966              	.L140:
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
 2967              		.loc 1 1950 19
 2968 01ea 3B6A     		ldr	r3, [r7, #32]
 2969 01ec 03F01003 		and	r3, r3, #16
 2970              		.loc 1 1950 6
 2971 01f0 002B     		cmp	r3, #0
 2972 01f2 09D0     		beq	.L141
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check if message is still pending */
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
 2973              		.loc 1 1953 14
 2974 01f4 7B68     		ldr	r3, [r7, #4]
 2975 01f6 1B68     		ldr	r3, [r3]
 2976              		.loc 1 1953 24
 2977 01f8 1B69     		ldr	r3, [r3, #16]
 2978              		.loc 1 1953 31
 2979 01fa 03F00303 		and	r3, r3, #3
 2980              		.loc 1 1953 8
 2981 01fe 002B     		cmp	r3, #0
 2982 0200 02D0     		beq	.L141
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Receive FIFO 1 message pending Callback */
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 95


1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
 2983              		.loc 1 1961 7
 2984 0202 7868     		ldr	r0, [r7, #4]
 2985 0204 FFF7FEFF 		bl	HAL_CAN_RxFifo1MsgPendingCallback
 2986              	.L141:
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
 2987              		.loc 1 1967 19
 2988 0208 3B6A     		ldr	r3, [r7, #32]
 2989 020a 03F40033 		and	r3, r3, #131072
 2990              		.loc 1 1967 6
 2991 020e 002B     		cmp	r3, #0
 2992 0210 0BD0     		beq	.L142
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
 2993              		.loc 1 1969 19
 2994 0212 FB69     		ldr	r3, [r7, #28]
 2995 0214 03F01003 		and	r3, r3, #16
 2996              		.loc 1 1969 8
 2997 0218 002B     		cmp	r3, #0
 2998 021a 06D0     		beq	.L142
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
 2999              		.loc 1 1972 7
 3000 021c 7B68     		ldr	r3, [r7, #4]
 3001 021e 1B68     		ldr	r3, [r3]
 3002 0220 1022     		movs	r2, #16
 3003 0222 5A60     		str	r2, [r3, #4]
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep Callback */
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->SleepCallback(hcan);
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
 3004              		.loc 1 1980 7
 3005 0224 7868     		ldr	r0, [r7, #4]
 3006 0226 FFF7FEFF 		bl	HAL_CAN_SleepCallback
 3007              	.L142:
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
 3008              		.loc 1 1986 19
 3009 022a 3B6A     		ldr	r3, [r7, #32]
 3010 022c 03F48033 		and	r3, r3, #65536
 3011              		.loc 1 1986 6
 3012 0230 002B     		cmp	r3, #0
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 96


 3013 0232 0BD0     		beq	.L143
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
 3014              		.loc 1 1988 19
 3015 0234 FB69     		ldr	r3, [r7, #28]
 3016 0236 03F00803 		and	r3, r3, #8
 3017              		.loc 1 1988 8
 3018 023a 002B     		cmp	r3, #0
 3019 023c 06D0     		beq	.L143
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Clear WakeUp Flag */
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
 3020              		.loc 1 1991 7
 3021 023e 7B68     		ldr	r3, [r7, #4]
 3022 0240 1B68     		ldr	r3, [r3]
 3023 0242 0822     		movs	r2, #8
 3024 0244 5A60     		str	r2, [r3, #4]
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* WakeUp Callback */
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call registered callback*/
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Call weak (surcharged) callback */
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
 3025              		.loc 1 1999 7
 3026 0246 7868     		ldr	r0, [r7, #4]
 3027 0248 FFF7FEFF 		bl	HAL_CAN_WakeUpFromRxMsgCallback
 3028              	.L143:
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Error interrupts management *********************************************/
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
 3029              		.loc 1 2005 19
 3030 024c 3B6A     		ldr	r3, [r7, #32]
 3031 024e 03F40043 		and	r3, r3, #32768
 3032              		.loc 1 2005 6
 3033 0252 002B     		cmp	r3, #0
 3034 0254 7BD0     		beq	.L144
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
 3035              		.loc 1 2007 19
 3036 0256 FB69     		ldr	r3, [r7, #28]
 3037 0258 03F00403 		and	r3, r3, #4
 3038              		.loc 1 2007 8
 3039 025c 002B     		cmp	r3, #0
 3040 025e 72D0     		beq	.L145
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Warning Flag */
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
 3041              		.loc 1 2010 24
 3042 0260 3B6A     		ldr	r3, [r7, #32]
 3043 0262 03F48073 		and	r3, r3, #256
 3044              		.loc 1 2010 10
 3045 0266 002B     		cmp	r3, #0
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 97


 3046 0268 08D0     		beq	.L146
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3047              		.loc 1 2011 22 discriminator 1
 3048 026a FB68     		ldr	r3, [r7, #12]
 3049 026c 03F00103 		and	r3, r3, #1
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3050              		.loc 1 2010 55 discriminator 1
 3051 0270 002B     		cmp	r3, #0
 3052 0272 03D0     		beq	.L146
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Warning */
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
 3053              		.loc 1 2014 19
 3054 0274 7B6A     		ldr	r3, [r7, #36]
 3055 0276 43F00103 		orr	r3, r3, #1
 3056 027a 7B62     		str	r3, [r7, #36]
 3057              	.L146:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Error Passive Flag */
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
 3058              		.loc 1 2020 24
 3059 027c 3B6A     		ldr	r3, [r7, #32]
 3060 027e 03F40073 		and	r3, r3, #512
 3061              		.loc 1 2020 10
 3062 0282 002B     		cmp	r3, #0
 3063 0284 08D0     		beq	.L147
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3064              		.loc 1 2021 22 discriminator 1
 3065 0286 FB68     		ldr	r3, [r7, #12]
 3066 0288 03F00203 		and	r3, r3, #2
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3067              		.loc 1 2020 55 discriminator 1
 3068 028c 002B     		cmp	r3, #0
 3069 028e 03D0     		beq	.L147
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Error Passive */
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
 3070              		.loc 1 2024 19
 3071 0290 7B6A     		ldr	r3, [r7, #36]
 3072 0292 43F00203 		orr	r3, r3, #2
 3073 0296 7B62     		str	r3, [r7, #36]
 3074              	.L147:
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Bus-off Flag */
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
 3075              		.loc 1 2030 24
 3076 0298 3B6A     		ldr	r3, [r7, #32]
 3077 029a 03F48063 		and	r3, r3, #1024
 3078              		.loc 1 2030 10
 3079 029e 002B     		cmp	r3, #0
 3080 02a0 08D0     		beq	.L148
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 98


2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3081              		.loc 1 2031 22 discriminator 1
 3082 02a2 FB68     		ldr	r3, [r7, #12]
 3083 02a4 03F00403 		and	r3, r3, #4
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3084              		.loc 1 2030 48 discriminator 1
 3085 02a8 002B     		cmp	r3, #0
 3086 02aa 03D0     		beq	.L148
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
 3087              		.loc 1 2034 19
 3088 02ac 7B6A     		ldr	r3, [r7, #36]
 3089 02ae 43F00403 		orr	r3, r3, #4
 3090 02b2 7B62     		str	r3, [r7, #36]
 3091              	.L148:
2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Check Last Error Code Flag */
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
 3092              		.loc 1 2040 24
 3093 02b4 3B6A     		ldr	r3, [r7, #32]
 3094 02b6 03F40063 		and	r3, r3, #2048
 3095              		.loc 1 2040 10
 3096 02ba 002B     		cmp	r3, #0
 3097 02bc 43D0     		beq	.L145
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3098              		.loc 1 2041 22 discriminator 1
 3099 02be FB68     		ldr	r3, [r7, #12]
 3100 02c0 03F07003 		and	r3, r3, #112
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3101              		.loc 1 2040 57 discriminator 1
 3102 02c4 002B     		cmp	r3, #0
 3103 02c6 3ED0     		beq	.L145
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       {
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
 3104              		.loc 1 2043 26
 3105 02c8 FB68     		ldr	r3, [r7, #12]
 3106 02ca 03F07003 		and	r3, r3, #112
 3107              		.loc 1 2043 9
 3108 02ce 602B     		cmp	r3, #96
 3109 02d0 2BD0     		beq	.L149
 3110 02d2 602B     		cmp	r3, #96
 3111 02d4 2ED8     		bhi	.L158
 3112 02d6 502B     		cmp	r3, #80
 3113 02d8 22D0     		beq	.L151
 3114 02da 502B     		cmp	r3, #80
 3115 02dc 2AD8     		bhi	.L158
 3116 02de 402B     		cmp	r3, #64
 3117 02e0 19D0     		beq	.L152
 3118 02e2 402B     		cmp	r3, #64
 3119 02e4 26D8     		bhi	.L158
 3120 02e6 302B     		cmp	r3, #48
 3121 02e8 10D0     		beq	.L153
 3122 02ea 302B     		cmp	r3, #48
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 99


 3123 02ec 22D8     		bhi	.L158
 3124 02ee 102B     		cmp	r3, #16
 3125 02f0 02D0     		beq	.L154
 3126 02f2 202B     		cmp	r3, #32
 3127 02f4 05D0     		beq	.L155
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         {
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Form error */
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             /* Set CAN error code to CRC error */
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3128              		.loc 1 2070 13
 3129 02f6 1DE0     		b	.L158
 3130              	.L154:
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3131              		.loc 1 2047 23
 3132 02f8 7B6A     		ldr	r3, [r7, #36]
 3133 02fa 43F00803 		orr	r3, r3, #8
 3134 02fe 7B62     		str	r3, [r7, #36]
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 3135              		.loc 1 2048 13
 3136 0300 19E0     		b	.L156
 3137              	.L155:
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3138              		.loc 1 2051 23
 3139 0302 7B6A     		ldr	r3, [r7, #36]
 3140 0304 43F01003 		orr	r3, r3, #16
 3141 0308 7B62     		str	r3, [r7, #36]
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 3142              		.loc 1 2052 13
 3143 030a 14E0     		b	.L156
 3144              	.L153:
2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3145              		.loc 1 2055 23
 3146 030c 7B6A     		ldr	r3, [r7, #36]
 3147 030e 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 100


 3148 0312 7B62     		str	r3, [r7, #36]
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 3149              		.loc 1 2056 13
 3150 0314 0FE0     		b	.L156
 3151              	.L152:
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3152              		.loc 1 2059 23
 3153 0316 7B6A     		ldr	r3, [r7, #36]
 3154 0318 43F04003 		orr	r3, r3, #64
 3155 031c 7B62     		str	r3, [r7, #36]
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3156              		.loc 1 2060 13
 3157 031e 0AE0     		b	.L156
 3158              	.L151:
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3159              		.loc 1 2063 23
 3160 0320 7B6A     		ldr	r3, [r7, #36]
 3161 0322 43F08003 		orr	r3, r3, #128
 3162 0326 7B62     		str	r3, [r7, #36]
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3163              		.loc 1 2064 13
 3164 0328 05E0     		b	.L156
 3165              	.L149:
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             break;
 3166              		.loc 1 2067 23
 3167 032a 7B6A     		ldr	r3, [r7, #36]
 3168 032c 43F48073 		orr	r3, r3, #256
 3169 0330 7B62     		str	r3, [r7, #36]
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****           default:
 3170              		.loc 1 2068 13
 3171 0332 00E0     		b	.L156
 3172              	.L158:
 3173              		.loc 1 2070 13
 3174 0334 00BF     		nop
 3175              	.L156:
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         }
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         /* Clear Last error code Flag */
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
 3176              		.loc 1 2074 9
 3177 0336 7B68     		ldr	r3, [r7, #4]
 3178 0338 1B68     		ldr	r3, [r3]
 3179 033a 9A69     		ldr	r2, [r3, #24]
 3180 033c 7B68     		ldr	r3, [r7, #4]
 3181 033e 1B68     		ldr	r3, [r3]
 3182 0340 22F07002 		bic	r2, r2, #112
 3183 0344 9A61     		str	r2, [r3, #24]
 3184              	.L145:
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       }
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Clear ERRI Flag */
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
 3185              		.loc 1 2079 5
 3186 0346 7B68     		ldr	r3, [r7, #4]
 3187 0348 1B68     		ldr	r3, [r3]
 3188 034a 0422     		movs	r2, #4
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 101


 3189 034c 5A60     		str	r2, [r3, #4]
 3190              	.L144:
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
 3191              		.loc 1 2083 6
 3192 034e 7B6A     		ldr	r3, [r7, #36]
 3193 0350 002B     		cmp	r3, #0
 3194 0352 08D0     		beq	.L159
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code in handle */
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
 3195              		.loc 1 2086 21
 3196 0354 7B68     		ldr	r3, [r7, #4]
 3197 0356 5A6A     		ldr	r2, [r3, #36]
 3198 0358 7B6A     		ldr	r3, [r7, #36]
 3199 035a 1A43     		orrs	r2, r2, r3
 3200 035c 7B68     		ldr	r3, [r7, #4]
 3201 035e 5A62     		str	r2, [r3, #36]
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call Error callback function */
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call registered callback*/
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #else
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Call weak (surcharged) callback */
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
 3202              		.loc 1 2094 5
 3203 0360 7868     		ldr	r0, [r7, #4]
 3204 0362 FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 3205              	.L159:
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3206              		.loc 1 2097 1
 3207 0366 00BF     		nop
 3208 0368 2837     		adds	r7, r7, #40
 3209              	.LCFI113:
 3210              		.cfi_def_cfa_offset 8
 3211 036a BD46     		mov	sp, r7
 3212              	.LCFI114:
 3213              		.cfi_def_cfa_register 13
 3214              		@ sp needed
 3215 036c 80BD     		pop	{r7, pc}
 3216              		.cfi_endproc
 3217              	.LFE258:
 3219              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
 3220              		.align	1
 3221              		.weak	HAL_CAN_TxMailbox0CompleteCallback
 3222              		.syntax unified
 3223              		.thumb
 3224              		.thumb_func
 3226              	HAL_CAN_TxMailbox0CompleteCallback:
 3227              	.LFB259:
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 102


2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Callback functions
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****                           ##### Callback functions #####
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides the following callback functions:
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3228              		.loc 1 2137 1
 3229              		.cfi_startproc
 3230              		@ args = 0, pretend = 0, frame = 8
 3231              		@ frame_needed = 1, uses_anonymous_args = 0
 3232              		@ link register save eliminated.
 3233 0000 80B4     		push	{r7}
 3234              	.LCFI115:
 3235              		.cfi_def_cfa_offset 4
 3236              		.cfi_offset 7, -4
 3237 0002 83B0     		sub	sp, sp, #12
 3238              	.LCFI116:
 3239              		.cfi_def_cfa_offset 16
 3240 0004 00AF     		add	r7, sp, #0
 3241              	.LCFI117:
 3242              		.cfi_def_cfa_register 7
 3243 0006 7860     		str	r0, [r7, #4]
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 103


2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3244              		.loc 1 2145 1
 3245 0008 00BF     		nop
 3246 000a 0C37     		adds	r7, r7, #12
 3247              	.LCFI118:
 3248              		.cfi_def_cfa_offset 4
 3249 000c BD46     		mov	sp, r7
 3250              	.LCFI119:
 3251              		.cfi_def_cfa_register 13
 3252              		@ sp needed
 3253 000e 5DF8047B 		ldr	r7, [sp], #4
 3254              	.LCFI120:
 3255              		.cfi_restore 7
 3256              		.cfi_def_cfa_offset 0
 3257 0012 7047     		bx	lr
 3258              		.cfi_endproc
 3259              	.LFE259:
 3261              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
 3262              		.align	1
 3263              		.weak	HAL_CAN_TxMailbox1CompleteCallback
 3264              		.syntax unified
 3265              		.thumb
 3266              		.thumb_func
 3268              	HAL_CAN_TxMailbox1CompleteCallback:
 3269              	.LFB260:
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3270              		.loc 1 2154 1
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 8
 3273              		@ frame_needed = 1, uses_anonymous_args = 0
 3274              		@ link register save eliminated.
 3275 0000 80B4     		push	{r7}
 3276              	.LCFI121:
 3277              		.cfi_def_cfa_offset 4
 3278              		.cfi_offset 7, -4
 3279 0002 83B0     		sub	sp, sp, #12
 3280              	.LCFI122:
 3281              		.cfi_def_cfa_offset 16
 3282 0004 00AF     		add	r7, sp, #0
 3283              	.LCFI123:
 3284              		.cfi_def_cfa_register 7
 3285 0006 7860     		str	r0, [r7, #4]
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 104


2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3286              		.loc 1 2162 1
 3287 0008 00BF     		nop
 3288 000a 0C37     		adds	r7, r7, #12
 3289              	.LCFI124:
 3290              		.cfi_def_cfa_offset 4
 3291 000c BD46     		mov	sp, r7
 3292              	.LCFI125:
 3293              		.cfi_def_cfa_register 13
 3294              		@ sp needed
 3295 000e 5DF8047B 		ldr	r7, [sp], #4
 3296              	.LCFI126:
 3297              		.cfi_restore 7
 3298              		.cfi_def_cfa_offset 0
 3299 0012 7047     		bx	lr
 3300              		.cfi_endproc
 3301              	.LFE260:
 3303              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 3304              		.align	1
 3305              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 3306              		.syntax unified
 3307              		.thumb
 3308              		.thumb_func
 3310              	HAL_CAN_TxMailbox2CompleteCallback:
 3311              	.LFB261:
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3312              		.loc 1 2171 1
 3313              		.cfi_startproc
 3314              		@ args = 0, pretend = 0, frame = 8
 3315              		@ frame_needed = 1, uses_anonymous_args = 0
 3316              		@ link register save eliminated.
 3317 0000 80B4     		push	{r7}
 3318              	.LCFI127:
 3319              		.cfi_def_cfa_offset 4
 3320              		.cfi_offset 7, -4
 3321 0002 83B0     		sub	sp, sp, #12
 3322              	.LCFI128:
 3323              		.cfi_def_cfa_offset 16
 3324 0004 00AF     		add	r7, sp, #0
 3325              	.LCFI129:
 3326              		.cfi_def_cfa_register 7
 3327 0006 7860     		str	r0, [r7, #4]
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 105


2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3328              		.loc 1 2179 1
 3329 0008 00BF     		nop
 3330 000a 0C37     		adds	r7, r7, #12
 3331              	.LCFI130:
 3332              		.cfi_def_cfa_offset 4
 3333 000c BD46     		mov	sp, r7
 3334              	.LCFI131:
 3335              		.cfi_def_cfa_register 13
 3336              		@ sp needed
 3337 000e 5DF8047B 		ldr	r7, [sp], #4
 3338              	.LCFI132:
 3339              		.cfi_restore 7
 3340              		.cfi_def_cfa_offset 0
 3341 0012 7047     		bx	lr
 3342              		.cfi_endproc
 3343              	.LFE261:
 3345              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 3346              		.align	1
 3347              		.weak	HAL_CAN_TxMailbox0AbortCallback
 3348              		.syntax unified
 3349              		.thumb
 3350              		.thumb_func
 3352              	HAL_CAN_TxMailbox0AbortCallback:
 3353              	.LFB262:
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3354              		.loc 1 2188 1
 3355              		.cfi_startproc
 3356              		@ args = 0, pretend = 0, frame = 8
 3357              		@ frame_needed = 1, uses_anonymous_args = 0
 3358              		@ link register save eliminated.
 3359 0000 80B4     		push	{r7}
 3360              	.LCFI133:
 3361              		.cfi_def_cfa_offset 4
 3362              		.cfi_offset 7, -4
 3363 0002 83B0     		sub	sp, sp, #12
 3364              	.LCFI134:
 3365              		.cfi_def_cfa_offset 16
 3366 0004 00AF     		add	r7, sp, #0
 3367              	.LCFI135:
 3368              		.cfi_def_cfa_register 7
 3369 0006 7860     		str	r0, [r7, #4]
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 106


2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3370              		.loc 1 2196 1
 3371 0008 00BF     		nop
 3372 000a 0C37     		adds	r7, r7, #12
 3373              	.LCFI136:
 3374              		.cfi_def_cfa_offset 4
 3375 000c BD46     		mov	sp, r7
 3376              	.LCFI137:
 3377              		.cfi_def_cfa_register 13
 3378              		@ sp needed
 3379 000e 5DF8047B 		ldr	r7, [sp], #4
 3380              	.LCFI138:
 3381              		.cfi_restore 7
 3382              		.cfi_def_cfa_offset 0
 3383 0012 7047     		bx	lr
 3384              		.cfi_endproc
 3385              	.LFE262:
 3387              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 3388              		.align	1
 3389              		.weak	HAL_CAN_TxMailbox1AbortCallback
 3390              		.syntax unified
 3391              		.thumb
 3392              		.thumb_func
 3394              	HAL_CAN_TxMailbox1AbortCallback:
 3395              	.LFB263:
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3396              		.loc 1 2205 1
 3397              		.cfi_startproc
 3398              		@ args = 0, pretend = 0, frame = 8
 3399              		@ frame_needed = 1, uses_anonymous_args = 0
 3400              		@ link register save eliminated.
 3401 0000 80B4     		push	{r7}
 3402              	.LCFI139:
 3403              		.cfi_def_cfa_offset 4
 3404              		.cfi_offset 7, -4
 3405 0002 83B0     		sub	sp, sp, #12
 3406              	.LCFI140:
 3407              		.cfi_def_cfa_offset 16
 3408 0004 00AF     		add	r7, sp, #0
 3409              	.LCFI141:
 3410              		.cfi_def_cfa_register 7
 3411 0006 7860     		str	r0, [r7, #4]
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 107


2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3412              		.loc 1 2213 1
 3413 0008 00BF     		nop
 3414 000a 0C37     		adds	r7, r7, #12
 3415              	.LCFI142:
 3416              		.cfi_def_cfa_offset 4
 3417 000c BD46     		mov	sp, r7
 3418              	.LCFI143:
 3419              		.cfi_def_cfa_register 13
 3420              		@ sp needed
 3421 000e 5DF8047B 		ldr	r7, [sp], #4
 3422              	.LCFI144:
 3423              		.cfi_restore 7
 3424              		.cfi_def_cfa_offset 0
 3425 0012 7047     		bx	lr
 3426              		.cfi_endproc
 3427              	.LFE263:
 3429              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 3430              		.align	1
 3431              		.weak	HAL_CAN_TxMailbox2AbortCallback
 3432              		.syntax unified
 3433              		.thumb
 3434              		.thumb_func
 3436              	HAL_CAN_TxMailbox2AbortCallback:
 3437              	.LFB264:
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3438              		.loc 1 2222 1
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 8
 3441              		@ frame_needed = 1, uses_anonymous_args = 0
 3442              		@ link register save eliminated.
 3443 0000 80B4     		push	{r7}
 3444              	.LCFI145:
 3445              		.cfi_def_cfa_offset 4
 3446              		.cfi_offset 7, -4
 3447 0002 83B0     		sub	sp, sp, #12
 3448              	.LCFI146:
 3449              		.cfi_def_cfa_offset 16
 3450 0004 00AF     		add	r7, sp, #0
 3451              	.LCFI147:
 3452              		.cfi_def_cfa_register 7
 3453 0006 7860     		str	r0, [r7, #4]
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 108


2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3454              		.loc 1 2230 1
 3455 0008 00BF     		nop
 3456 000a 0C37     		adds	r7, r7, #12
 3457              	.LCFI148:
 3458              		.cfi_def_cfa_offset 4
 3459 000c BD46     		mov	sp, r7
 3460              	.LCFI149:
 3461              		.cfi_def_cfa_register 13
 3462              		@ sp needed
 3463 000e 5DF8047B 		ldr	r7, [sp], #4
 3464              	.LCFI150:
 3465              		.cfi_restore 7
 3466              		.cfi_def_cfa_offset 0
 3467 0012 7047     		bx	lr
 3468              		.cfi_endproc
 3469              	.LFE264:
 3471              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 3472              		.align	1
 3473              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 3474              		.syntax unified
 3475              		.thumb
 3476              		.thumb_func
 3478              	HAL_CAN_RxFifo0MsgPendingCallback:
 3479              	.LFB265:
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3480              		.loc 1 2239 1
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 8
 3483              		@ frame_needed = 1, uses_anonymous_args = 0
 3484              		@ link register save eliminated.
 3485 0000 80B4     		push	{r7}
 3486              	.LCFI151:
 3487              		.cfi_def_cfa_offset 4
 3488              		.cfi_offset 7, -4
 3489 0002 83B0     		sub	sp, sp, #12
 3490              	.LCFI152:
 3491              		.cfi_def_cfa_offset 16
 3492 0004 00AF     		add	r7, sp, #0
 3493              	.LCFI153:
 3494              		.cfi_def_cfa_register 7
 3495 0006 7860     		str	r0, [r7, #4]
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 109


2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3496              		.loc 1 2247 1
 3497 0008 00BF     		nop
 3498 000a 0C37     		adds	r7, r7, #12
 3499              	.LCFI154:
 3500              		.cfi_def_cfa_offset 4
 3501 000c BD46     		mov	sp, r7
 3502              	.LCFI155:
 3503              		.cfi_def_cfa_register 13
 3504              		@ sp needed
 3505 000e 5DF8047B 		ldr	r7, [sp], #4
 3506              	.LCFI156:
 3507              		.cfi_restore 7
 3508              		.cfi_def_cfa_offset 0
 3509 0012 7047     		bx	lr
 3510              		.cfi_endproc
 3511              	.LFE265:
 3513              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 3514              		.align	1
 3515              		.weak	HAL_CAN_RxFifo0FullCallback
 3516              		.syntax unified
 3517              		.thumb
 3518              		.thumb_func
 3520              	HAL_CAN_RxFifo0FullCallback:
 3521              	.LFB266:
2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3522              		.loc 1 2256 1
 3523              		.cfi_startproc
 3524              		@ args = 0, pretend = 0, frame = 8
 3525              		@ frame_needed = 1, uses_anonymous_args = 0
 3526              		@ link register save eliminated.
 3527 0000 80B4     		push	{r7}
 3528              	.LCFI157:
 3529              		.cfi_def_cfa_offset 4
 3530              		.cfi_offset 7, -4
 3531 0002 83B0     		sub	sp, sp, #12
 3532              	.LCFI158:
 3533              		.cfi_def_cfa_offset 16
 3534 0004 00AF     		add	r7, sp, #0
 3535              	.LCFI159:
 3536              		.cfi_def_cfa_register 7
 3537 0006 7860     		str	r0, [r7, #4]
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 110


2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3538              		.loc 1 2264 1
 3539 0008 00BF     		nop
 3540 000a 0C37     		adds	r7, r7, #12
 3541              	.LCFI160:
 3542              		.cfi_def_cfa_offset 4
 3543 000c BD46     		mov	sp, r7
 3544              	.LCFI161:
 3545              		.cfi_def_cfa_register 13
 3546              		@ sp needed
 3547 000e 5DF8047B 		ldr	r7, [sp], #4
 3548              	.LCFI162:
 3549              		.cfi_restore 7
 3550              		.cfi_def_cfa_offset 0
 3551 0012 7047     		bx	lr
 3552              		.cfi_endproc
 3553              	.LFE266:
 3555              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 3556              		.align	1
 3557              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 3558              		.syntax unified
 3559              		.thumb
 3560              		.thumb_func
 3562              	HAL_CAN_RxFifo1MsgPendingCallback:
 3563              	.LFB267:
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3564              		.loc 1 2273 1
 3565              		.cfi_startproc
 3566              		@ args = 0, pretend = 0, frame = 8
 3567              		@ frame_needed = 1, uses_anonymous_args = 0
 3568              		@ link register save eliminated.
 3569 0000 80B4     		push	{r7}
 3570              	.LCFI163:
 3571              		.cfi_def_cfa_offset 4
 3572              		.cfi_offset 7, -4
 3573 0002 83B0     		sub	sp, sp, #12
 3574              	.LCFI164:
 3575              		.cfi_def_cfa_offset 16
 3576 0004 00AF     		add	r7, sp, #0
 3577              	.LCFI165:
 3578              		.cfi_def_cfa_register 7
 3579 0006 7860     		str	r0, [r7, #4]
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 111


2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3580              		.loc 1 2281 1
 3581 0008 00BF     		nop
 3582 000a 0C37     		adds	r7, r7, #12
 3583              	.LCFI166:
 3584              		.cfi_def_cfa_offset 4
 3585 000c BD46     		mov	sp, r7
 3586              	.LCFI167:
 3587              		.cfi_def_cfa_register 13
 3588              		@ sp needed
 3589 000e 5DF8047B 		ldr	r7, [sp], #4
 3590              	.LCFI168:
 3591              		.cfi_restore 7
 3592              		.cfi_def_cfa_offset 0
 3593 0012 7047     		bx	lr
 3594              		.cfi_endproc
 3595              	.LFE267:
 3597              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 3598              		.align	1
 3599              		.weak	HAL_CAN_RxFifo1FullCallback
 3600              		.syntax unified
 3601              		.thumb
 3602              		.thumb_func
 3604              	HAL_CAN_RxFifo1FullCallback:
 3605              	.LFB268:
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3606              		.loc 1 2290 1
 3607              		.cfi_startproc
 3608              		@ args = 0, pretend = 0, frame = 8
 3609              		@ frame_needed = 1, uses_anonymous_args = 0
 3610              		@ link register save eliminated.
 3611 0000 80B4     		push	{r7}
 3612              	.LCFI169:
 3613              		.cfi_def_cfa_offset 4
 3614              		.cfi_offset 7, -4
 3615 0002 83B0     		sub	sp, sp, #12
 3616              	.LCFI170:
 3617              		.cfi_def_cfa_offset 16
 3618 0004 00AF     		add	r7, sp, #0
 3619              	.LCFI171:
 3620              		.cfi_def_cfa_register 7
 3621 0006 7860     		str	r0, [r7, #4]
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 112


2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             file
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3622              		.loc 1 2298 1
 3623 0008 00BF     		nop
 3624 000a 0C37     		adds	r7, r7, #12
 3625              	.LCFI172:
 3626              		.cfi_def_cfa_offset 4
 3627 000c BD46     		mov	sp, r7
 3628              	.LCFI173:
 3629              		.cfi_def_cfa_register 13
 3630              		@ sp needed
 3631 000e 5DF8047B 		ldr	r7, [sp], #4
 3632              	.LCFI174:
 3633              		.cfi_restore 7
 3634              		.cfi_def_cfa_offset 0
 3635 0012 7047     		bx	lr
 3636              		.cfi_endproc
 3637              	.LFE268:
 3639              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 3640              		.align	1
 3641              		.weak	HAL_CAN_SleepCallback
 3642              		.syntax unified
 3643              		.thumb
 3644              		.thumb_func
 3646              	HAL_CAN_SleepCallback:
 3647              	.LFB269:
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Sleep callback.
2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3648              		.loc 1 2307 1
 3649              		.cfi_startproc
 3650              		@ args = 0, pretend = 0, frame = 8
 3651              		@ frame_needed = 1, uses_anonymous_args = 0
 3652              		@ link register save eliminated.
 3653 0000 80B4     		push	{r7}
 3654              	.LCFI175:
 3655              		.cfi_def_cfa_offset 4
 3656              		.cfi_offset 7, -4
 3657 0002 83B0     		sub	sp, sp, #12
 3658              	.LCFI176:
 3659              		.cfi_def_cfa_offset 16
 3660 0004 00AF     		add	r7, sp, #0
 3661              	.LCFI177:
 3662              		.cfi_def_cfa_register 7
 3663 0006 7860     		str	r0, [r7, #4]
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 113


2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3664              		.loc 1 2314 1
 3665 0008 00BF     		nop
 3666 000a 0C37     		adds	r7, r7, #12
 3667              	.LCFI178:
 3668              		.cfi_def_cfa_offset 4
 3669 000c BD46     		mov	sp, r7
 3670              	.LCFI179:
 3671              		.cfi_def_cfa_register 13
 3672              		@ sp needed
 3673 000e 5DF8047B 		ldr	r7, [sp], #4
 3674              	.LCFI180:
 3675              		.cfi_restore 7
 3676              		.cfi_def_cfa_offset 0
 3677 0012 7047     		bx	lr
 3678              		.cfi_endproc
 3679              	.LFE269:
 3681              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 3682              		.align	1
 3683              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 3684              		.syntax unified
 3685              		.thumb
 3686              		.thumb_func
 3688              	HAL_CAN_WakeUpFromRxMsgCallback:
 3689              	.LFB270:
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3690              		.loc 1 2323 1
 3691              		.cfi_startproc
 3692              		@ args = 0, pretend = 0, frame = 8
 3693              		@ frame_needed = 1, uses_anonymous_args = 0
 3694              		@ link register save eliminated.
 3695 0000 80B4     		push	{r7}
 3696              	.LCFI181:
 3697              		.cfi_def_cfa_offset 4
 3698              		.cfi_offset 7, -4
 3699 0002 83B0     		sub	sp, sp, #12
 3700              	.LCFI182:
 3701              		.cfi_def_cfa_offset 16
 3702 0004 00AF     		add	r7, sp, #0
 3703              	.LCFI183:
 3704              		.cfi_def_cfa_register 7
 3705 0006 7860     		str	r0, [r7, #4]
2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 114


2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             user file
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3706              		.loc 1 2331 1
 3707 0008 00BF     		nop
 3708 000a 0C37     		adds	r7, r7, #12
 3709              	.LCFI184:
 3710              		.cfi_def_cfa_offset 4
 3711 000c BD46     		mov	sp, r7
 3712              	.LCFI185:
 3713              		.cfi_def_cfa_register 13
 3714              		@ sp needed
 3715 000e 5DF8047B 		ldr	r7, [sp], #4
 3716              	.LCFI186:
 3717              		.cfi_restore 7
 3718              		.cfi_def_cfa_offset 0
 3719 0012 7047     		bx	lr
 3720              		.cfi_endproc
 3721              	.LFE270:
 3723              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 3724              		.align	1
 3725              		.weak	HAL_CAN_ErrorCallback
 3726              		.syntax unified
 3727              		.thumb
 3728              		.thumb_func
 3730              	HAL_CAN_ErrorCallback:
 3731              	.LFB271:
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Error CAN callback.
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval None
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3732              		.loc 1 2340 1
 3733              		.cfi_startproc
 3734              		@ args = 0, pretend = 0, frame = 8
 3735              		@ frame_needed = 1, uses_anonymous_args = 0
 3736              		@ link register save eliminated.
 3737 0000 80B4     		push	{r7}
 3738              	.LCFI187:
 3739              		.cfi_def_cfa_offset 4
 3740              		.cfi_offset 7, -4
 3741 0002 83B0     		sub	sp, sp, #12
 3742              	.LCFI188:
 3743              		.cfi_def_cfa_offset 16
 3744 0004 00AF     		add	r7, sp, #0
 3745              	.LCFI189:
 3746              		.cfi_def_cfa_register 7
 3747 0006 7860     		str	r0, [r7, #4]
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   UNUSED(hcan);
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 115


2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****    */
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3748              		.loc 1 2347 1
 3749 0008 00BF     		nop
 3750 000a 0C37     		adds	r7, r7, #12
 3751              	.LCFI190:
 3752              		.cfi_def_cfa_offset 4
 3753 000c BD46     		mov	sp, r7
 3754              	.LCFI191:
 3755              		.cfi_def_cfa_register 13
 3756              		@ sp needed
 3757 000e 5DF8047B 		ldr	r7, [sp], #4
 3758              	.LCFI192:
 3759              		.cfi_restore 7
 3760              		.cfi_def_cfa_offset 0
 3761 0012 7047     		bx	lr
 3762              		.cfi_endproc
 3763              	.LFE271:
 3765              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3766              		.align	1
 3767              		.global	HAL_CAN_GetState
 3768              		.syntax unified
 3769              		.thumb
 3770              		.thumb_func
 3772              	HAL_CAN_GetState:
 3773              	.LFB272:
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @}
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief   CAN Peripheral State functions
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @verbatim
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   ==============================================================================
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     [..]
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     This subsection provides functions allowing to :
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** @endverbatim
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @{
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN state.
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL state
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(const CAN_HandleTypeDef *hcan)
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 116


 3774              		.loc 1 2377 1
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 16
 3777              		@ frame_needed = 1, uses_anonymous_args = 0
 3778              		@ link register save eliminated.
 3779 0000 80B4     		push	{r7}
 3780              	.LCFI193:
 3781              		.cfi_def_cfa_offset 4
 3782              		.cfi_offset 7, -4
 3783 0002 85B0     		sub	sp, sp, #20
 3784              	.LCFI194:
 3785              		.cfi_def_cfa_offset 24
 3786 0004 00AF     		add	r7, sp, #0
 3787              	.LCFI195:
 3788              		.cfi_def_cfa_register 7
 3789 0006 7860     		str	r0, [r7, #4]
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3790              		.loc 1 2378 24
 3791 0008 7B68     		ldr	r3, [r7, #4]
 3792 000a 93F82030 		ldrb	r3, [r3, #32]
 3793 000e FB73     		strb	r3, [r7, #15]
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3794              		.loc 1 2380 6
 3795 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3796 0012 012B     		cmp	r3, #1
 3797 0014 02D0     		beq	.L174
 3798              		.loc 1 2380 38 discriminator 1
 3799 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3800 0018 022B     		cmp	r3, #2
 3801 001a 12D1     		bne	.L175
 3802              	.L174:
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 3803              		.loc 1 2384 14
 3804 001c 7B68     		ldr	r3, [r7, #4]
 3805 001e 1B68     		ldr	r3, [r3]
 3806              		.loc 1 2384 24
 3807 0020 5B68     		ldr	r3, [r3, #4]
 3808              		.loc 1 2384 30
 3809 0022 03F00203 		and	r3, r3, #2
 3810              		.loc 1 2384 8
 3811 0026 002B     		cmp	r3, #0
 3812 0028 02D0     		beq	.L176
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode is active */
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
 3813              		.loc 1 2387 13
 3814 002a 0423     		movs	r3, #4
 3815 002c FB73     		strb	r3, [r7, #15]
 3816 002e 08E0     		b	.L175
 3817              	.L176:
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Check sleep mode request flag */
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 117


 3818              		.loc 1 2390 19
 3819 0030 7B68     		ldr	r3, [r7, #4]
 3820 0032 1B68     		ldr	r3, [r3]
 3821              		.loc 1 2390 29
 3822 0034 1B68     		ldr	r3, [r3]
 3823              		.loc 1 2390 35
 3824 0036 03F00203 		and	r3, r3, #2
 3825              		.loc 1 2390 13
 3826 003a 002B     		cmp	r3, #0
 3827 003c 01D0     		beq	.L175
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Sleep mode request is pending */
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
 3828              		.loc 1 2393 13
 3829 003e 0323     		movs	r3, #3
 3830 0040 FB73     		strb	r3, [r7, #15]
 3831              	.L175:
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     else
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     {
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     }
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN state */
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return state;
 3832              		.loc 1 2402 10
 3833 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3834              		.loc 1 2403 1
 3835 0044 1846     		mov	r0, r3
 3836 0046 1437     		adds	r7, r7, #20
 3837              	.LCFI196:
 3838              		.cfi_def_cfa_offset 4
 3839 0048 BD46     		mov	sp, r7
 3840              	.LCFI197:
 3841              		.cfi_def_cfa_register 13
 3842              		@ sp needed
 3843 004a 5DF8047B 		ldr	r7, [sp], #4
 3844              	.LCFI198:
 3845              		.cfi_restore 7
 3846              		.cfi_def_cfa_offset 0
 3847 004e 7047     		bx	lr
 3848              		.cfi_endproc
 3849              	.LFE272:
 3851              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3852              		.align	1
 3853              		.global	HAL_CAN_GetError
 3854              		.syntax unified
 3855              		.thumb
 3856              		.thumb_func
 3858              	HAL_CAN_GetError:
 3859              	.LFB273:
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Return the CAN error code.
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 118


2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval CAN Error Code
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** uint32_t HAL_CAN_GetError(const CAN_HandleTypeDef *hcan)
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3860              		.loc 1 2412 1
 3861              		.cfi_startproc
 3862              		@ args = 0, pretend = 0, frame = 8
 3863              		@ frame_needed = 1, uses_anonymous_args = 0
 3864              		@ link register save eliminated.
 3865 0000 80B4     		push	{r7}
 3866              	.LCFI199:
 3867              		.cfi_def_cfa_offset 4
 3868              		.cfi_offset 7, -4
 3869 0002 83B0     		sub	sp, sp, #12
 3870              	.LCFI200:
 3871              		.cfi_def_cfa_offset 16
 3872 0004 00AF     		add	r7, sp, #0
 3873              	.LCFI201:
 3874              		.cfi_def_cfa_register 7
 3875 0006 7860     		str	r0, [r7, #4]
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return CAN error code */
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return hcan->ErrorCode;
 3876              		.loc 1 2414 14
 3877 0008 7B68     		ldr	r3, [r7, #4]
 3878 000a 5B6A     		ldr	r3, [r3, #36]
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3879              		.loc 1 2415 1
 3880 000c 1846     		mov	r0, r3
 3881 000e 0C37     		adds	r7, r7, #12
 3882              	.LCFI202:
 3883              		.cfi_def_cfa_offset 4
 3884 0010 BD46     		mov	sp, r7
 3885              	.LCFI203:
 3886              		.cfi_def_cfa_register 13
 3887              		@ sp needed
 3888 0012 5DF8047B 		ldr	r7, [sp], #4
 3889              	.LCFI204:
 3890              		.cfi_restore 7
 3891              		.cfi_def_cfa_offset 0
 3892 0016 7047     		bx	lr
 3893              		.cfi_endproc
 3894              	.LFE273:
 3896              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3897              		.align	1
 3898              		.global	HAL_CAN_ResetError
 3899              		.syntax unified
 3900              		.thumb
 3901              		.thumb_func
 3903              	HAL_CAN_ResetError:
 3904              	.LFB274:
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** /**
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @brief  Reset the CAN error code.
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   *         the configuration information for the specified CAN.
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   * @retval HAL status
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 119


2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   */
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** {
 3905              		.loc 1 2424 1
 3906              		.cfi_startproc
 3907              		@ args = 0, pretend = 0, frame = 16
 3908              		@ frame_needed = 1, uses_anonymous_args = 0
 3909              		@ link register save eliminated.
 3910 0000 80B4     		push	{r7}
 3911              	.LCFI205:
 3912              		.cfi_def_cfa_offset 4
 3913              		.cfi_offset 7, -4
 3914 0002 85B0     		sub	sp, sp, #20
 3915              	.LCFI206:
 3916              		.cfi_def_cfa_offset 24
 3917 0004 00AF     		add	r7, sp, #0
 3918              	.LCFI207:
 3919              		.cfi_def_cfa_register 7
 3920 0006 7860     		str	r0, [r7, #4]
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3921              		.loc 1 2425 21
 3922 0008 0023     		movs	r3, #0
 3923 000a FB73     		strb	r3, [r7, #15]
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3924              		.loc 1 2426 24
 3925 000c 7B68     		ldr	r3, [r7, #4]
 3926 000e 93F82030 		ldrb	r3, [r3, #32]
 3927 0012 BB73     		strb	r3, [r7, #14]
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3928              		.loc 1 2428 6
 3929 0014 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3930 0016 012B     		cmp	r3, #1
 3931 0018 02D0     		beq	.L181
 3932              		.loc 1 2428 38 discriminator 1
 3933 001a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3934 001c 022B     		cmp	r3, #2
 3935 001e 03D1     		bne	.L182
 3936              	.L181:
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Reset CAN error code */
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode = 0U;
 3937              		.loc 1 2432 21
 3938 0020 7B68     		ldr	r3, [r7, #4]
 3939 0022 0022     		movs	r2, #0
 3940 0024 5A62     		str	r2, [r3, #36]
 3941 0026 07E0     		b	.L183
 3942              	.L182:
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   else
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   {
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     /* Update error code */
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3943              		.loc 1 2437 21
 3944 0028 7B68     		ldr	r3, [r7, #4]
 3945 002a 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 120


 3946 002c 43F48022 		orr	r2, r3, #262144
 3947 0030 7B68     		ldr	r3, [r7, #4]
 3948 0032 5A62     		str	r2, [r3, #36]
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****     status = HAL_ERROR;
 3949              		.loc 1 2439 12
 3950 0034 0123     		movs	r3, #1
 3951 0036 FB73     		strb	r3, [r7, #15]
 3952              	.L183:
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   }
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** 
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   /* Return the status */
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c ****   return status;
 3953              		.loc 1 2443 10
 3954 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_can.c **** }
 3955              		.loc 1 2444 1
 3956 003a 1846     		mov	r0, r3
 3957 003c 1437     		adds	r7, r7, #20
 3958              	.LCFI208:
 3959              		.cfi_def_cfa_offset 4
 3960 003e BD46     		mov	sp, r7
 3961              	.LCFI209:
 3962              		.cfi_def_cfa_register 13
 3963              		@ sp needed
 3964 0040 5DF8047B 		ldr	r7, [sp], #4
 3965              	.LCFI210:
 3966              		.cfi_restore 7
 3967              		.cfi_def_cfa_offset 0
 3968 0044 7047     		bx	lr
 3969              		.cfi_endproc
 3970              	.LFE274:
 3972              		.text
 3973              	.Letext0:
 3974              		.file 3 "d:\\st\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default
 3975              		.file 4 "d:\\st\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 3976              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 3977              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 3978              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 3979              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 121


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_can.c
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:20     .text.HAL_CAN_Init:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:26     .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:429    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:352    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:358    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:921    .text.HAL_CAN_Stop:00000000 HAL_CAN_Stop
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:471    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:423    .text.HAL_CAN_MspInit:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:465    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:507    .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:513    .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:797    .text.HAL_CAN_ConfigFilter:000001bc $d
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:802    .text.HAL_CAN_Start:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:808    .text.HAL_CAN_Start:00000000 HAL_CAN_Start
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:915    .text.HAL_CAN_Stop:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1032   .text.HAL_CAN_RequestSleep:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1038   .text.HAL_CAN_RequestSleep:00000000 HAL_CAN_RequestSleep
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1108   .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1114   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1217   .text.HAL_CAN_WakeUp:0000007c $d
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1222   .text.HAL_CAN_IsSleepActive:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1228   .text.HAL_CAN_IsSleepActive:00000000 HAL_CAN_IsSleepActive
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1296   .text.HAL_CAN_AddTxMessage:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1302   .text.HAL_CAN_AddTxMessage:00000000 HAL_CAN_AddTxMessage
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1574   .text.HAL_CAN_AbortTxRequest:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1580   .text.HAL_CAN_AbortTxRequest:00000000 HAL_CAN_AbortTxRequest
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1688   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1694   .text.HAL_CAN_GetTxMailboxesFreeLevel:00000000 HAL_CAN_GetTxMailboxesFreeLevel
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1793   .text.HAL_CAN_IsTxMessagePending:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1799   .text.HAL_CAN_IsTxMessagePending:00000000 HAL_CAN_IsTxMessagePending
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1874   .text.HAL_CAN_GetTxTimestamp:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1880   .text.HAL_CAN_GetTxTimestamp:00000000 HAL_CAN_GetTxTimestamp
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1989   .text.HAL_CAN_GetRxMessage:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:1995   .text.HAL_CAN_GetRxMessage:00000000 HAL_CAN_GetRxMessage
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2401   .text.HAL_CAN_GetRxFifoFillLevel:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2407   .text.HAL_CAN_GetRxFifoFillLevel:00000000 HAL_CAN_GetRxFifoFillLevel
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2485   .text.HAL_CAN_ActivateNotification:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2491   .text.HAL_CAN_ActivateNotification:00000000 HAL_CAN_ActivateNotification
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2563   .text.HAL_CAN_DeactivateNotification:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2569   .text.HAL_CAN_DeactivateNotification:00000000 HAL_CAN_DeactivateNotification
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2642   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:2648   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3226   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 HAL_CAN_TxMailbox0CompleteCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3352   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 HAL_CAN_TxMailbox0AbortCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3268   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 HAL_CAN_TxMailbox1CompleteCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3394   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 HAL_CAN_TxMailbox1AbortCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3310   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 HAL_CAN_TxMailbox2CompleteCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3436   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 HAL_CAN_TxMailbox2AbortCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3520   .text.HAL_CAN_RxFifo0FullCallback:00000000 HAL_CAN_RxFifo0FullCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3478   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3604   .text.HAL_CAN_RxFifo1FullCallback:00000000 HAL_CAN_RxFifo1FullCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3562   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 HAL_CAN_RxFifo1MsgPendingCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3646   .text.HAL_CAN_SleepCallback:00000000 HAL_CAN_SleepCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3688   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 HAL_CAN_WakeUpFromRxMsgCallback
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3730   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
ARM GAS  C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s 			page 122


C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3220   .text.HAL_CAN_TxMailbox0CompleteCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3262   .text.HAL_CAN_TxMailbox1CompleteCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3304   .text.HAL_CAN_TxMailbox2CompleteCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3346   .text.HAL_CAN_TxMailbox0AbortCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3388   .text.HAL_CAN_TxMailbox1AbortCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3430   .text.HAL_CAN_TxMailbox2AbortCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3472   .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3514   .text.HAL_CAN_RxFifo0FullCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3556   .text.HAL_CAN_RxFifo1MsgPendingCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3598   .text.HAL_CAN_RxFifo1FullCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3640   .text.HAL_CAN_SleepCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3682   .text.HAL_CAN_WakeUpFromRxMsgCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3724   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3766   .text.HAL_CAN_GetState:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3772   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3852   .text.HAL_CAN_GetError:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3858   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3897   .text.HAL_CAN_ResetError:00000000 $t
C:\Users\16323\AppData\Local\Temp\ccFnjPkm.s:3903   .text.HAL_CAN_ResetError:00000000 HAL_CAN_ResetError

UNDEFINED SYMBOLS
HAL_GetTick
