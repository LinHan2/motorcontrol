ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw"
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 0024F400 		.word	16000000
  26              		.global	AHBPrescTable
  27              		.section	.rodata.AHBPrescTable,"a"
  28              		.align	2
  31              	AHBPrescTable:
  32 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\001\002\003\004\006"
  32      00000000 
  32      01020304 
  32      06
  33 000d 070809   		.ascii	"\007\010\011"
  34              		.global	APBPrescTable
  35              		.section	.rodata.APBPrescTable,"a"
  36              		.align	2
  39              	APBPrescTable:
  40 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004"
  40      01020304 
  41              		.section	.text.SystemInit,"ax",%progbits
  42              		.align	1
  43              		.global	SystemInit
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	SystemInit:
  49              	.LFB239:
  50              		.file 1 "Core/Src/system_stm32f4xx.c"
   1:Core/Src/system_stm32f4xx.c **** /**
   2:Core/Src/system_stm32f4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:Core/Src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32f4xx.c ****   *
   7:Core/Src/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
   8:Core/Src/system_stm32f4xx.c ****   *   user application:
   9:Core/Src/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  10:Core/Src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 2


  11:Core/Src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  12:Core/Src/system_stm32f4xx.c ****   *
  13:Core/Src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  15:Core/Src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32f4xx.c ****   *                                     
  17:Core/Src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32f4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32f4xx.c ****   *
  21:Core/Src/system_stm32f4xx.c ****   *
  22:Core/Src/system_stm32f4xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32f4xx.c ****   * @attention
  24:Core/Src/system_stm32f4xx.c ****   *
  25:Core/Src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2017 STMicroelectronics</center></h2>
  26:Core/Src/system_stm32f4xx.c ****   *
  27:Core/Src/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  28:Core/Src/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  29:Core/Src/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  30:Core/Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  31:Core/Src/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  32:Core/Src/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  33:Core/Src/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  34:Core/Src/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  35:Core/Src/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  36:Core/Src/system_stm32f4xx.c ****   *      without specific prior written permission.
  37:Core/Src/system_stm32f4xx.c ****   *
  38:Core/Src/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  39:Core/Src/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  40:Core/Src/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  41:Core/Src/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  42:Core/Src/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  43:Core/Src/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  44:Core/Src/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  45:Core/Src/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  46:Core/Src/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  47:Core/Src/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  48:Core/Src/system_stm32f4xx.c ****   *
  49:Core/Src/system_stm32f4xx.c ****   ******************************************************************************
  50:Core/Src/system_stm32f4xx.c ****   */
  51:Core/Src/system_stm32f4xx.c **** 
  52:Core/Src/system_stm32f4xx.c **** /** @addtogroup CMSIS
  53:Core/Src/system_stm32f4xx.c ****   * @{
  54:Core/Src/system_stm32f4xx.c ****   */
  55:Core/Src/system_stm32f4xx.c **** 
  56:Core/Src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  57:Core/Src/system_stm32f4xx.c ****   * @{
  58:Core/Src/system_stm32f4xx.c ****   */  
  59:Core/Src/system_stm32f4xx.c ****   
  60:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  61:Core/Src/system_stm32f4xx.c ****   * @{
  62:Core/Src/system_stm32f4xx.c ****   */
  63:Core/Src/system_stm32f4xx.c **** 
  64:Core/Src/system_stm32f4xx.c **** 
  65:Core/Src/system_stm32f4xx.c **** #include "stm32f4xx.h"
  66:Core/Src/system_stm32f4xx.c **** 
  67:Core/Src/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 3


  68:Core/Src/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  69:Core/Src/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  70:Core/Src/system_stm32f4xx.c **** 
  71:Core/Src/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  72:Core/Src/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  73:Core/Src/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  74:Core/Src/system_stm32f4xx.c **** 
  75:Core/Src/system_stm32f4xx.c **** /**
  76:Core/Src/system_stm32f4xx.c ****   * @}
  77:Core/Src/system_stm32f4xx.c ****   */
  78:Core/Src/system_stm32f4xx.c **** 
  79:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  80:Core/Src/system_stm32f4xx.c ****   * @{
  81:Core/Src/system_stm32f4xx.c ****   */
  82:Core/Src/system_stm32f4xx.c **** 
  83:Core/Src/system_stm32f4xx.c **** /**
  84:Core/Src/system_stm32f4xx.c ****   * @}
  85:Core/Src/system_stm32f4xx.c ****   */
  86:Core/Src/system_stm32f4xx.c **** 
  87:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  88:Core/Src/system_stm32f4xx.c ****   * @{
  89:Core/Src/system_stm32f4xx.c ****   */
  90:Core/Src/system_stm32f4xx.c **** 
  91:Core/Src/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  92:Core/Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  93:Core/Src/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  94:Core/Src/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  95:Core/Src/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  96:Core/Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  97:Core/Src/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
  98:Core/Src/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
  99:Core/Src/system_stm32f4xx.c ****  
 100:Core/Src/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
 101:Core/Src/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 102:Core/Src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 103:Core/Src/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
 104:Core/Src/system_stm32f4xx.c ****           STM32F479xx */
 105:Core/Src/system_stm32f4xx.c **** 
 106:Core/Src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 107:Core/Src/system_stm32f4xx.c ****      Internal SRAM. */
 108:Core/Src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 109:Core/Src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 110:Core/Src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 111:Core/Src/system_stm32f4xx.c **** /******************************************************************************/
 112:Core/Src/system_stm32f4xx.c **** 
 113:Core/Src/system_stm32f4xx.c **** /**
 114:Core/Src/system_stm32f4xx.c ****   * @}
 115:Core/Src/system_stm32f4xx.c ****   */
 116:Core/Src/system_stm32f4xx.c **** 
 117:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 118:Core/Src/system_stm32f4xx.c ****   * @{
 119:Core/Src/system_stm32f4xx.c ****   */
 120:Core/Src/system_stm32f4xx.c **** 
 121:Core/Src/system_stm32f4xx.c **** /**
 122:Core/Src/system_stm32f4xx.c ****   * @}
 123:Core/Src/system_stm32f4xx.c ****   */
 124:Core/Src/system_stm32f4xx.c **** 
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 4


 125:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 126:Core/Src/system_stm32f4xx.c ****   * @{
 127:Core/Src/system_stm32f4xx.c ****   */
 128:Core/Src/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 129:Core/Src/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 130:Core/Src/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 131:Core/Src/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 132:Core/Src/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 133:Core/Src/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 134:Core/Src/system_stm32f4xx.c ****                variable is updated automatically.
 135:Core/Src/system_stm32f4xx.c ****   */
 136:Core/Src/system_stm32f4xx.c **** uint32_t SystemCoreClock = 16000000;
 137:Core/Src/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 138:Core/Src/system_stm32f4xx.c **** const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 139:Core/Src/system_stm32f4xx.c **** /**
 140:Core/Src/system_stm32f4xx.c ****   * @}
 141:Core/Src/system_stm32f4xx.c ****   */
 142:Core/Src/system_stm32f4xx.c **** 
 143:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 144:Core/Src/system_stm32f4xx.c ****   * @{
 145:Core/Src/system_stm32f4xx.c ****   */
 146:Core/Src/system_stm32f4xx.c **** 
 147:Core/Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 148:Core/Src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 149:Core/Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 150:Core/Src/system_stm32f4xx.c **** 
 151:Core/Src/system_stm32f4xx.c **** /**
 152:Core/Src/system_stm32f4xx.c ****   * @}
 153:Core/Src/system_stm32f4xx.c ****   */
 154:Core/Src/system_stm32f4xx.c **** 
 155:Core/Src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 156:Core/Src/system_stm32f4xx.c ****   * @{
 157:Core/Src/system_stm32f4xx.c ****   */
 158:Core/Src/system_stm32f4xx.c **** 
 159:Core/Src/system_stm32f4xx.c **** /**
 160:Core/Src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 161:Core/Src/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 162:Core/Src/system_stm32f4xx.c ****   *         configuration.
 163:Core/Src/system_stm32f4xx.c ****   * @param  None
 164:Core/Src/system_stm32f4xx.c ****   * @retval None
 165:Core/Src/system_stm32f4xx.c ****   */
 166:Core/Src/system_stm32f4xx.c **** void SystemInit(void)
 167:Core/Src/system_stm32f4xx.c **** {
  51              		.loc 1 167 1
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 1, uses_anonymous_args = 0
  55              		@ link register save eliminated.
  56 0000 80B4     		push	{r7}
  57              	.LCFI0:
  58              		.cfi_def_cfa_offset 4
  59              		.cfi_offset 7, -4
  60 0002 00AF     		add	r7, sp, #0
  61              	.LCFI1:
  62              		.cfi_def_cfa_register 7
 168:Core/Src/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 169:Core/Src/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 5


 170:Core/Src/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  63              		.loc 1 170 16
  64 0004 084B     		ldr	r3, .L2
  65 0006 D3F88830 		ldr	r3, [r3, #136]
  66 000a 074A     		ldr	r2, .L2
  67 000c 43F47003 		orr	r3, r3, #15728640
  68 0010 C2F88830 		str	r3, [r2, #136]
 171:Core/Src/system_stm32f4xx.c ****   #endif
 172:Core/Src/system_stm32f4xx.c **** 
 173:Core/Src/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 174:Core/Src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 175:Core/Src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 176:Core/Src/system_stm32f4xx.c **** 
 177:Core/Src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 178:Core/Src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 179:Core/Src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 180:Core/Src/system_stm32f4xx.c **** #else
 181:Core/Src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  69              		.loc 1 181 6
  70 0014 044B     		ldr	r3, .L2
  71              		.loc 1 181 13
  72 0016 4FF00062 		mov	r2, #134217728
  73 001a 9A60     		str	r2, [r3, #8]
 182:Core/Src/system_stm32f4xx.c **** #endif
 183:Core/Src/system_stm32f4xx.c **** }
  74              		.loc 1 183 1
  75 001c 00BF     		nop
  76 001e BD46     		mov	sp, r7
  77              	.LCFI2:
  78              		.cfi_def_cfa_register 13
  79              		@ sp needed
  80 0020 5DF8047B 		ldr	r7, [sp], #4
  81              	.LCFI3:
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0024 7047     		bx	lr
  85              	.L3:
  86 0026 00BF     		.align	2
  87              	.L2:
  88 0028 00ED00E0 		.word	-536810240
  89              		.cfi_endproc
  90              	.LFE239:
  92              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  93              		.align	1
  94              		.global	SystemCoreClockUpdate
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  99              	SystemCoreClockUpdate:
 100              	.LFB240:
 184:Core/Src/system_stm32f4xx.c **** 
 185:Core/Src/system_stm32f4xx.c **** /**
 186:Core/Src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 187:Core/Src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 188:Core/Src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 189:Core/Src/system_stm32f4xx.c ****   *         other parameters.
 190:Core/Src/system_stm32f4xx.c ****   *           
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 6


 191:Core/Src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 192:Core/Src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 193:Core/Src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 194:Core/Src/system_stm32f4xx.c ****   *     
 195:Core/Src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 196:Core/Src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 197:Core/Src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 198:Core/Src/system_stm32f4xx.c ****   *             
 199:Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 200:Core/Src/system_stm32f4xx.c ****   *                                              
 201:Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 202:Core/Src/system_stm32f4xx.c ****   *                          
 203:Core/Src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 204:Core/Src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 205:Core/Src/system_stm32f4xx.c ****   *         
 206:Core/Src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 207:Core/Src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 208:Core/Src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 209:Core/Src/system_stm32f4xx.c ****   *    
 210:Core/Src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 211:Core/Src/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 212:Core/Src/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 213:Core/Src/system_stm32f4xx.c ****   *              may have wrong result.
 214:Core/Src/system_stm32f4xx.c ****   *                
 215:Core/Src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 216:Core/Src/system_stm32f4xx.c ****   *           value for HSE crystal.
 217:Core/Src/system_stm32f4xx.c ****   *     
 218:Core/Src/system_stm32f4xx.c ****   * @param  None
 219:Core/Src/system_stm32f4xx.c ****   * @retval None
 220:Core/Src/system_stm32f4xx.c ****   */
 221:Core/Src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 222:Core/Src/system_stm32f4xx.c **** {
 101              		.loc 1 222 1
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 24
 104              		@ frame_needed = 1, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106 0000 80B4     		push	{r7}
 107              	.LCFI4:
 108              		.cfi_def_cfa_offset 4
 109              		.cfi_offset 7, -4
 110 0002 87B0     		sub	sp, sp, #28
 111              	.LCFI5:
 112              		.cfi_def_cfa_offset 32
 113 0004 00AF     		add	r7, sp, #0
 114              	.LCFI6:
 115              		.cfi_def_cfa_register 7
 223:Core/Src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 116              		.loc 1 223 12
 117 0006 0023     		movs	r3, #0
 118 0008 3B61     		str	r3, [r7, #16]
 119              		.loc 1 223 21
 120 000a 0023     		movs	r3, #0
 121 000c 7B61     		str	r3, [r7, #20]
 122              		.loc 1 223 33
 123 000e 0223     		movs	r3, #2
 124 0010 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 7


 125              		.loc 1 223 43
 126 0012 0023     		movs	r3, #0
 127 0014 BB60     		str	r3, [r7, #8]
 128              		.loc 1 223 58
 129 0016 0223     		movs	r3, #2
 130 0018 7B60     		str	r3, [r7, #4]
 224:Core/Src/system_stm32f4xx.c ****   
 225:Core/Src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 226:Core/Src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 131              		.loc 1 226 12
 132 001a 344B     		ldr	r3, .L12
 133 001c 9B68     		ldr	r3, [r3, #8]
 134              		.loc 1 226 7
 135 001e 03F00C03 		and	r3, r3, #12
 136 0022 3B61     		str	r3, [r7, #16]
 227:Core/Src/system_stm32f4xx.c **** 
 228:Core/Src/system_stm32f4xx.c ****   switch (tmp)
 137              		.loc 1 228 3
 138 0024 3B69     		ldr	r3, [r7, #16]
 139 0026 082B     		cmp	r3, #8
 140 0028 11D0     		beq	.L5
 141 002a 3B69     		ldr	r3, [r7, #16]
 142 002c 082B     		cmp	r3, #8
 143 002e 44D8     		bhi	.L6
 144 0030 3B69     		ldr	r3, [r7, #16]
 145 0032 002B     		cmp	r3, #0
 146 0034 03D0     		beq	.L7
 147 0036 3B69     		ldr	r3, [r7, #16]
 148 0038 042B     		cmp	r3, #4
 149 003a 04D0     		beq	.L8
 150 003c 3DE0     		b	.L6
 151              	.L7:
 229:Core/Src/system_stm32f4xx.c ****   {
 230:Core/Src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 231:Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 152              		.loc 1 231 23
 153 003e 2C4B     		ldr	r3, .L12+4
 154 0040 2C4A     		ldr	r2, .L12+8
 155 0042 1A60     		str	r2, [r3]
 232:Core/Src/system_stm32f4xx.c ****       break;
 156              		.loc 1 232 7
 157 0044 3DE0     		b	.L9
 158              	.L8:
 233:Core/Src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 234:Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 159              		.loc 1 234 23
 160 0046 2A4B     		ldr	r3, .L12+4
 161 0048 2B4A     		ldr	r2, .L12+12
 162 004a 1A60     		str	r2, [r3]
 235:Core/Src/system_stm32f4xx.c ****       break;
 163              		.loc 1 235 7
 164 004c 39E0     		b	.L9
 165              	.L5:
 236:Core/Src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 237:Core/Src/system_stm32f4xx.c **** 
 238:Core/Src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 239:Core/Src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 8


 240:Core/Src/system_stm32f4xx.c ****          */    
 241:Core/Src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 166              		.loc 1 241 23
 167 004e 274B     		ldr	r3, .L12
 168 0050 5B68     		ldr	r3, [r3, #4]
 169              		.loc 1 241 55
 170 0052 9B0D     		lsrs	r3, r3, #22
 171              		.loc 1 241 17
 172 0054 03F00103 		and	r3, r3, #1
 173 0058 BB60     		str	r3, [r7, #8]
 242:Core/Src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 174              		.loc 1 242 17
 175 005a 244B     		ldr	r3, .L12
 176 005c 5B68     		ldr	r3, [r3, #4]
 177              		.loc 1 242 12
 178 005e 03F03F03 		and	r3, r3, #63
 179 0062 7B60     		str	r3, [r7, #4]
 243:Core/Src/system_stm32f4xx.c ****       
 244:Core/Src/system_stm32f4xx.c ****       if (pllsource != 0)
 180              		.loc 1 244 10
 181 0064 BB68     		ldr	r3, [r7, #8]
 182 0066 002B     		cmp	r3, #0
 183 0068 0CD0     		beq	.L10
 245:Core/Src/system_stm32f4xx.c ****       {
 246:Core/Src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 247:Core/Src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 184              		.loc 1 247 29
 185 006a 234A     		ldr	r2, .L12+12
 186 006c 7B68     		ldr	r3, [r7, #4]
 187 006e B2FBF3F3 		udiv	r3, r2, r3
 188              		.loc 1 247 44
 189 0072 1E4A     		ldr	r2, .L12
 190 0074 5268     		ldr	r2, [r2, #4]
 191              		.loc 1 247 74
 192 0076 9209     		lsrs	r2, r2, #6
 193 0078 C2F30802 		ubfx	r2, r2, #0, #9
 194              		.loc 1 247 16
 195 007c 02FB03F3 		mul	r3, r2, r3
 196 0080 7B61     		str	r3, [r7, #20]
 197 0082 0BE0     		b	.L11
 198              	.L10:
 248:Core/Src/system_stm32f4xx.c ****       }
 249:Core/Src/system_stm32f4xx.c ****       else
 250:Core/Src/system_stm32f4xx.c ****       {
 251:Core/Src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 252:Core/Src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 199              		.loc 1 252 29
 200 0084 1B4A     		ldr	r2, .L12+8
 201 0086 7B68     		ldr	r3, [r7, #4]
 202 0088 B2FBF3F3 		udiv	r3, r2, r3
 203              		.loc 1 252 44
 204 008c 174A     		ldr	r2, .L12
 205 008e 5268     		ldr	r2, [r2, #4]
 206              		.loc 1 252 74
 207 0090 9209     		lsrs	r2, r2, #6
 208 0092 C2F30802 		ubfx	r2, r2, #0, #9
 209              		.loc 1 252 16
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 9


 210 0096 02FB03F3 		mul	r3, r2, r3
 211 009a 7B61     		str	r3, [r7, #20]
 212              	.L11:
 253:Core/Src/system_stm32f4xx.c ****       }
 254:Core/Src/system_stm32f4xx.c **** 
 255:Core/Src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 213              		.loc 1 255 20
 214 009c 134B     		ldr	r3, .L12
 215 009e 5B68     		ldr	r3, [r3, #4]
 216              		.loc 1 255 50
 217 00a0 1B0C     		lsrs	r3, r3, #16
 218 00a2 03F00303 		and	r3, r3, #3
 219              		.loc 1 255 56
 220 00a6 0133     		adds	r3, r3, #1
 221              		.loc 1 255 12
 222 00a8 5B00     		lsls	r3, r3, #1
 223 00aa FB60     		str	r3, [r7, #12]
 256:Core/Src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 224              		.loc 1 256 31
 225 00ac 7A69     		ldr	r2, [r7, #20]
 226 00ae FB68     		ldr	r3, [r7, #12]
 227 00b0 B2FBF3F3 		udiv	r3, r2, r3
 228              		.loc 1 256 23
 229 00b4 0E4A     		ldr	r2, .L12+4
 230 00b6 1360     		str	r3, [r2]
 257:Core/Src/system_stm32f4xx.c ****       break;
 231              		.loc 1 257 7
 232 00b8 03E0     		b	.L9
 233              	.L6:
 258:Core/Src/system_stm32f4xx.c ****     default:
 259:Core/Src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 234              		.loc 1 259 23
 235 00ba 0D4B     		ldr	r3, .L12+4
 236 00bc 0D4A     		ldr	r2, .L12+8
 237 00be 1A60     		str	r2, [r3]
 260:Core/Src/system_stm32f4xx.c ****       break;
 238              		.loc 1 260 7
 239 00c0 00BF     		nop
 240              	.L9:
 261:Core/Src/system_stm32f4xx.c ****   }
 262:Core/Src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 263:Core/Src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 264:Core/Src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 241              		.loc 1 264 28
 242 00c2 0A4B     		ldr	r3, .L12
 243 00c4 9B68     		ldr	r3, [r3, #8]
 244              		.loc 1 264 52
 245 00c6 1B09     		lsrs	r3, r3, #4
 246 00c8 03F00F03 		and	r3, r3, #15
 247              		.loc 1 264 22
 248 00cc 0B4A     		ldr	r2, .L12+16
 249 00ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 250              		.loc 1 264 7
 251 00d0 3B61     		str	r3, [r7, #16]
 265:Core/Src/system_stm32f4xx.c ****   /* HCLK frequency */
 266:Core/Src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 252              		.loc 1 266 19
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 10


 253 00d2 074B     		ldr	r3, .L12+4
 254 00d4 1A68     		ldr	r2, [r3]
 255 00d6 3B69     		ldr	r3, [r7, #16]
 256 00d8 22FA03F3 		lsr	r3, r2, r3
 257 00dc 044A     		ldr	r2, .L12+4
 258 00de 1360     		str	r3, [r2]
 267:Core/Src/system_stm32f4xx.c **** }
 259              		.loc 1 267 1
 260 00e0 00BF     		nop
 261 00e2 1C37     		adds	r7, r7, #28
 262              	.LCFI7:
 263              		.cfi_def_cfa_offset 4
 264 00e4 BD46     		mov	sp, r7
 265              	.LCFI8:
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 00e6 5DF8047B 		ldr	r7, [sp], #4
 269              	.LCFI9:
 270              		.cfi_restore 7
 271              		.cfi_def_cfa_offset 0
 272 00ea 7047     		bx	lr
 273              	.L13:
 274              		.align	2
 275              	.L12:
 276 00ec 00380240 		.word	1073887232
 277 00f0 00000000 		.word	SystemCoreClock
 278 00f4 0024F400 		.word	16000000
 279 00f8 00127A00 		.word	8000000
 280 00fc 00000000 		.word	AHBPrescTable
 281              		.cfi_endproc
 282              	.LFE240:
 284              		.text
 285              	.Letext0:
 286              		.file 2 "d:\\st\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\machine\\_default
 287              		.file 3 "d:\\st\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 288              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 289              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 290              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
ARM GAS  C:\Users\16323\AppData\Local\Temp\cc9HNXae.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:24     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:21     .data.SystemCoreClock:00000000 $d
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:31     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:28     .rodata.AHBPrescTable:00000000 $d
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:39     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:36     .rodata.APBPrescTable:00000000 $d
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:42     .text.SystemInit:00000000 $t
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:48     .text.SystemInit:00000000 SystemInit
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:88     .text.SystemInit:00000028 $d
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:93     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:99     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\16323\AppData\Local\Temp\cc9HNXae.s:276    .text.SystemCoreClockUpdate:000000ec $d

NO UNDEFINED SYMBOLS
